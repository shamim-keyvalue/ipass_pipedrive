{"id":29406,"name":"testing-pipedriveSyncRulesDealsConfig","userId":27893,"accountId":24428,"createdDate":"2019-09-05T06:58:36Z","steps":[{"id":215734,"onSuccess":["tpConfigPayload"],"onFailure":[],"name":"getTpConfig","type":"httpRequest","properties":{"method":"GET","url":"${steps.InputParams.getTpConfigParams.url}","query":"${steps.InputParams.getTpConfigParams.query}","headers":"${steps.InputParams.getTpConfigParams.auth}"}},{"id":215735,"onSuccess":["getTpConfig"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args.request.query['cb-api-key'] || null;\nlet siteName = trigger.args.request.query['cb-site-name'] || null;\nlet siteDomain = trigger.args.request.query['cb-domain'];\nlet integration_name = \"pipedrive\";\nlet password = \"\";\n\n/* Subscription Actions Configuration */\n\nlet subCreated = trigger.args.request.query['subCreated'] || null;\nlet subCreatedPipeline = trigger.args.request.query['subCreatedPipeline'] || null;\nlet subCreatedStage= trigger.args.request.query['subCreatedStage'] || null;\n\nlet subUpdated = trigger.args.request.query['subUpdated'] || null;\nlet subUpdatedPipeline = trigger.args.request.query['subUpdatedPipeline'] || null;\nlet subUpdatedStage = trigger.args.request.query['subUpdatedStage'] || null;\n\nlet subResumed = trigger.args.request.query['subResumed'] || null;\nlet subResumedPipeline = trigger.args.request.query['subResumedPipeline'] || null;\nlet subResumedStage = trigger.args.request.query['subResumedStage'] || null;\n\nlet subReactivated = trigger.args.request.query['subReactivated'] || null;\nlet subReactivatedPipeline = trigger.args.request.query['subReactivatedPipeline'] || null;\nlet subReactivatedStage = trigger.args.request.query['subReactivatedStage'] || null;\n\nlet subPaused = trigger.args.request.query['subPaused'] || null;\nlet subPausedPipeline = trigger.args.request.query['subPausedPipeline'] || null;\nlet subPausedStage = trigger.args.request.query['subPausedStage'] || null;\n\nlet subDeleted = trigger.args.request.query['subDeleted'] || null;\nlet subDeletedPipeline = trigger.args.request.query['subDeletedPipeline'] || null;\nlet subDeletedStage = trigger.args.request.query['subDeletedStage'] || null;\n\nlet subCancelled = trigger.args.request.query['subCancelled'] || null;\nlet subCancelledPipeline = trigger.args.request.query['subCancelledPipeline'] || null;\nlet subCancelledStage = trigger.args.request.query['subCancelledStage'] || null;\n\nlet addNotesSubscription = trigger.args.request.query['addNotesSubscription'] || null;\nlet howToUpdateDealValue = trigger.args.request.query['howToUpdateDealValue'] || null;\n\n\n/* Invoice Actions Configuration */\n\nlet invCreated = trigger.args.request.query['invCreated'] || null;\nlet invCreatedPipeline = trigger.args.request.query['invCreatedPipeline'] || null;\nlet invCreatedStage = trigger.args.request.query['invCreatedStage'] || null;\n\nlet invDeleted = trigger.args.request.query['invDeleted'] || null;\nlet invDeletedPipeline = trigger.args.request.query['invDeletedPipeline'] || null;\nlet invDeletedStage = trigger.args.request.query['invDeletedStage'] || null;\n\nlet invPaid = trigger.args.request.query['invPaid'] || null;\nlet invPaidPipeline = trigger.args.request.query['invPaidPipeline'] || null;\nlet invPaidStage = trigger.args.request.query['invPaidStage'] || null;\n\nlet invVoided = trigger.args.request.query['invVoided'] || null;\nlet invVoidedPipeline = trigger.args.request.query['invVoidedPipeline'] || null;\nlet invVoidedStage = trigger.args.request.query['invVoidedStage'] || null;\n\nlet addNotesInvoice = trigger.args.request.query['addNotesInvoice'] || null;\nlet updateDealValueWithInvoice = trigger.args.request.query['updateDealValueWithInvoice'] || null;\n\n\nlet params = {\n  input:{\n    apiKey: apiKey,\n    siteName: siteName,\n    siteDomain: siteDomain,\n    integration_name: integration_name,\n    password: password\n  },\n  configParams: {\n    subCreated: subCreated,\n    subUpdated: subUpdated,\n    subResumed: subResumed,\n    subReactivated: subReactivated,\n    subPaused: subPaused,\n    subDeleted: subDeleted,\n    subCancelled: subCancelled,\n    addNotesSubscription: addNotesSubscription,\n    howToUpdateDealValue: howToUpdateDealValue,\n    invCreated: invCreated,\n    invDeleted: invDeleted,\n    invPaid: invPaid,\n    invVoided: invVoided,\n    addNotesInvoice: addNotesInvoice,\n    updateDealValueWithInvoice: updateDealValueWithInvoice\n  }\n  \n};\n\n/* Subscription */\n\nif(subCreated !== \"option3\"){\n  params.configParams.subCreatedPipeline = subCreatedPipeline;\n  params.configParams.subCreatedStage = subCreatedStage;\n}\n\nif(subUpdated !== \"option3\"){\n  params.configParams.subUpdatedPipeline = subUpdatedPipeline;\n  params.configParams.subUpdatedStage = subUpdatedStage;\n}\n\nif(subResumed !== \"option3\"){\n  params.configParams.subResumedPipeline = subResumedPipeline;\n  params.configParams.subResumedStage = subResumedStage;\n}\n\nif(subReactivated !== \"option3\"){\n  params.configParams.subReactivatedPipeline = subReactivatedPipeline;\n  params.configParams.subReactivatedStage = subReactivatedStage;\n}\n\nif(subPaused !== \"option3\"){\n  params.configParams.subPausedPipeline = subPausedPipeline;\n  params.configParams.subPausedStage = subPausedStage;\n}\n\nif(invCreated !== \"option3\"){\n  params.configParams.subDeletedPipeline = subDeletedPipeline;\n  params.configParams.subDeletedStage = subDeletedStage;\n}\n\nif(subCancelled !== \"option3\"){\n  params.configParams.subCancelledPipeline = subCancelledPipeline;\n  params.configParams.subCancelledStage = subCancelledStage;\n}\n\n/* Invoice */\n\nif(invCreated !== \"option3\"){\n  params.configParams.invCreatedPipeline = invCreatedPipeline;\n  params.configParams.invCreatedStage = invCreatedStage;\n}\n\nif(invDeleted !== \"option3\"){\n  params.configParams.invDeletedPipeline = invDeletedPipeline;\n  params.configParams.invDeletedStage = invDeletedStage;\n}\n\nif(invPaid !== \"option3\"){\n  params.configParams.invPaidPipeline = invPaidPipeline;\n  params.configParams.invPaidStage = invPaidStage;\n}\n\nif(invVoided !== \"option3\"){\n  params.configParams.invVoidedPipeline = invVoidedPipeline;\n  params.configParams.invVoidedStage = invVoidedStage;\n}\n\n\n\nlet getTpConfigParams = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integration_name\n  }\n}\n\ndone({\n  params: params,\n  getTpConfigParams: getTpConfigParams\n});"}},{"id":215736,"onSuccess":[],"onFailure":[],"name":"Success","type":"script","properties":{"body":"done({\n  statusCode: 200\n});"}},{"id":215737,"onSuccess":["updateTpConfig"],"onFailure":[],"name":"tpConfigPayload","type":"script","properties":{"body":"let siteName = steps.InputParams.params.input.siteName;\nlet siteDomain = steps.InputParams.params.input.siteDomain;\nlet apiKey = steps.InputParams.params.input.apiKey;\nlet integration_name = steps.InputParams.params.input.integration_name;\n\nlet existingTpConfig = steps.getTpConfig.response.body.third_party_configuration.config_json;\n\nlet newTpConfig = existingTpConfig;\nnewTpConfig.cloudElements.syncRulesDeals = steps.InputParams.params.configParams;\n\nnewTpConfig[\"new_sub_step\"] = \"step_2\";\n\nlet tpConfigUpdateParams = {\n  url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body: {\n     site_name: siteName,\n     api_key: apiKey,\n     integration_name: integration_name,\n     config_json: newTpConfig\n  }\n}\n\n\ndone({\n  newTpConfig: newTpConfig,\n  tpConfigUpdateParams: tpConfigUpdateParams\n});\n\n"}},{"id":215738,"onSuccess":["Success"],"onFailure":[],"name":"updateTpConfig","type":"httpRequest","properties":{"method":"POST","url":"${steps.tpConfigPayload.tpConfigUpdateParams.url}","retry":"true","retryAttempts":"5","body":"${steps.tpConfigPayload.tpConfigUpdateParams.body}","headers":"${steps.tpConfigPayload.tpConfigUpdateParams.headers}","retryDelay":"200"}}],"triggers":[{"id":26034,"onSuccess":["InputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"method":"GET","uri":"/pipedrive/syncRulesDealsResponse","engine":"v1","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"api":"GET /pipedrive/syncRulesDealsResponse","configuration":[]}