{"id":29403,"name":"testing-pipedriveSyncRulesContactsConfig","userId":27893,"accountId":24428,"createdDate":"2019-09-05T06:56:08Z","steps":[{"id":215691,"onSuccess":[],"onFailure":[],"name":"Failed","type":"script","properties":{"body":"let card = {\n \"status\": \"error\",\n \"notice\" : \"Invalid Fields Selected for Mapping.\"\n};\n\ndone({\n  statusCode: 200,\n  result: card\n});"}},{"id":215692,"onSuccess":["updateTpConfigParams"],"onFailure":["sendErrorMail"],"name":"getTpConfig","type":"httpRequest","properties":{"method":"GET","url":"${steps.InputParams.getTpConfigParams.url}","retry":"true","query":"${steps.InputParams.getTpConfigParams.query}","retryAttempts":"5","headers":"${steps.InputParams.getTpConfigParams.auth}","retryDelay":"200"}},{"id":215693,"onSuccess":["getTpConfig"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args.request.query['cb-api-key'];\nlet siteName = trigger.args.request.query['cb-site-name'];\nlet siteDomain = trigger.args.request.query['cb-domain'];\nlet integrationName = trigger.args.request.query['integrationName'];\nlet password = \"\";\n\n\nlet chooseCustomersToSync= trigger.args.request.query['chooseCustomersToSync'] || null;\nlet createPeopleInPipedrive= trigger.args.request.query['createPeopleInPipedrive'] || null;\nlet customerDeletedInCB= trigger.args.request.query['customerDeletedInCB'] || null;\nlet manageOrganizationInPipedrive= trigger.args.request.query['manageOrganizationInPipedrive'] || null;\n\n// let syncAccountHierarchies = trigger.args.request.query['syncAccountHierarchies'] || null;\n\n// let actionCustomerSyncedToPipedrive = trigger.args.request.query['actionCustomerSyncedToPipedrive'] || null;\n\nlet mappedField = trigger.args.request.query['mapField_chargebee'] || null;\nlet mappedField_pipedrive = trigger.args.request.query['mapField_pipedrive'] || null;\n\n\nlet triggerParams = {\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  integrationName: integrationName\n};\n\nlet params = {\n  chooseCustomersToSync: chooseCustomersToSync,\n  createPeopleInPipedrive: createPeopleInPipedrive,\n  customerDeletedInCB: customerDeletedInCB,\n  manageOrganizationInPipedrive: manageOrganizationInPipedrive,\n  mappedField: mappedField,\n  mappedField_pipedrive: mappedField_pipedrive\n}\n\n// if(syncAccountHierarchies !== null){\n//   params.syncAccountHierarchies = syncAccountHierarchies;\n// }\n\n// if(actionCustomerSyncedToPipedrive !== null){\n//   params.actionCustomerSyncedToPipedrive = actionCustomerSyncedToPipedrive;\n// }\n\nlet getTpConfigParams = {\n    url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n    auth:{\n      Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n    },\n    query:{\n      integration_name: integrationName\n    }\n};\n\nlet errorEmailEndpoint =  'https://' + siteName + '.' + siteDomain + '/adhoc_checkout_email/api/send';\n//let errorEmailAddress = \"integrations-growth-internal@chargebee.com\";\nlet errorEmailAddress =\"ajaitester@gmail.com\";\n\nlet sendErrorMailParams = {\n  url: errorEmailEndpoint,\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + \"\")\n  },\n  query :{\n    content : \"Integration Error, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n    subject : \"Fatal Error Occurred during \" + integrationName + \" Sync\",\n    to_address : errorEmailAddress,\n    api_key : apiKey\n  }\n};\n\nif(manageOrganizationInPipedrive === \"true\"){\n  params.actionCustomerSyncedToPipedrive= trigger.args.request.query['actionCustomerSyncedToPipedrive'] || null;\n  // params.syncAccountHierarchies= trigger.args.request.query['syncAccountHierarchies'] || null;\n}\n\nlet linkSubAttributesToPerson = trigger.args.request.query['linkSubAttributesToPerson'] || null;\n\nif(linkSubAttributesToPerson === null){\n  params.linkSubAttributesToPerson = \"option1\";\n}else{\n  params.linkSubAttributesToPerson = linkSubAttributesToPerson;\n}\n\n\ndone({\n  triggerParams: triggerParams,\n  params: params,\n  getTpConfigParams: getTpConfigParams\n})\n\n\n"}},{"id":215694,"onSuccess":["InputParams"],"onFailure":["Failed"],"name":"isMappedFieldsValid","type":"filter","properties":{"body":"if(trigger.args.request.query['mapField_chargebee'] === \"email\"){\n  if(trigger.args.request.query['mapField_pipedrive'] === \"email\"){\n    done(true);\n  }else{\n    done(false);\n  }\n}\n\nif(trigger.args.request.query['mapField_chargebee'] === \"id\"){\n  if(trigger.args.request.query['mapField_pipedrive'] === \"email\"){\n    done(false);\n  }else{\n    done(true);\n  }\n}\n\n\ndone(true);"}},{"id":215695,"onSuccess":[],"onFailure":[],"name":"sendErrorCard","type":"script","properties":{"body":"let card = {\n  \"status\" : \"error\",\n  \"notice\" : \"Internal Error Occurred. Please try again.\"\n}\n\ndone({\n  statusCode: 200,\n  result: card\n})"}},{"id":215696,"onSuccess":[],"onFailure":["sendErrorCard"],"name":"sendErrorMail","type":"httpRequest","properties":{"method":"POST","url":"${steps.InputParams.sendErrorMailParams.url}","query":"${steps.InputParams.sendErrorMailParams.query}","headers":"${steps.InputParams.sendErrorMailParams.headers}"}},{"id":215697,"onSuccess":[],"onFailure":[],"name":"Success","type":"script","properties":{"body":"// let response = trigger.args.request.query;\n\ndone({\n  statusCode: 200\n});"}},{"id":215698,"onSuccess":["Success"],"onFailure":[],"name":"updateTp","type":"httpRequest","properties":{"method":"POST","url":"${steps.updateTpConfigParams.tpConfigUpdateParams.url}","retry":"true","query":"","path":"","retryAttempts":"5","form":"","body":"${steps.updateTpConfigParams.tpConfigUpdateParams.body}","headers":"${steps.updateTpConfigParams.tpConfigUpdateParams.headers}","retryDelay":"200"}},{"id":215699,"onSuccess":["updateTp"],"onFailure":[],"name":"updateTpConfigParams","type":"script","properties":{"body":"let configJson = steps.getTpConfig.response.body.third_party_configuration.config_json || {};\n\nconfigJson.batch = {\n    sync_customer:{},\n    sync_subscription: {},\n    sync_invoice: {},\n    status: \"NOT_CONFIGURED\",\n    batch_size: \"10\"\n}\n\nconfigJson.cloudElements.syncRulesContacts  = steps.InputParams.params;\nconfigJson.cloudElements.syncRulesContacts.actionCustomerSyncedToPipedrive = \"option1\";\n\nconfigJson[\"new_sub_step\"] = \"step_1\";\n\nlet input = {\n     site_name: steps.InputParams.triggerParams.siteName,\n     api_key: steps.InputParams.triggerParams.apiKey,\n     integration_name: steps.InputParams.triggerParams.integrationName,\n     config_json : configJson\n};\n\n\n\nlet tpConfigUpdateParams = {\n  url: \"https://\"+steps.InputParams.triggerParams.siteName+\".integrations.\"+steps.InputParams.triggerParams.siteDomain+\"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body:  input\n}\n\ndone({\n  tpConfigUpdateParams: tpConfigUpdateParams\n});\n\n"}}],"triggers":[{"id":26031,"onSuccess":["isMappedFieldsValid"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"method":"GET","uri":"/pipedrive/syncRulesContactsResponse","engine":"v1","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"api":"GET /pipedrive/syncRulesContactsResponse","configuration":[]}