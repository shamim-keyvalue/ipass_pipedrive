{"id":29400,"name":"testing-pipedriveSyncRulesContactsSetup","userId":27893,"accountId":24428,"createdDate":"2019-09-05T06:55:22Z","steps":[{"id":215670,"onSuccess":["isInstanceExist"],"onFailure":[],"name":"checkInstanceExist","type":"script","properties":{"body":"let instances=steps.getInstances.response.body;\nlet siteName=steps.ConfigParams.params.input.siteName;\nlet bodyParam=steps.formulaInformation;\n\nlet flag = false;\nlet instanceInfo = '';\nlet formulaName;\n// let formulaNames = [\"formula_SyncRulesDealsSetup\",\n//   \"formula_SyncRulesDealsConfig\",\n//   \"formula_SyncFieldsSetup\",\n//   \"formula_SyncFieldsConfig\",\n//   \"formula_ValidateSetup\",\n//   \"formula_ValidateIgnore\",\n//   \"formula_InitialSyncRun\",\n//   \"formula_FullSyncRun\",\n//   'formula_SyncDispatcher'];\n\n// let formulaNames = [\"formula_SyncRulesDealsConfig\",\n//   \"formula_SyncFieldsConfig\",\n//   \"formula_ValidateIgnore\",\n//   \"formula_SyncDispatcher\",\"formula_ManageSyncRules_Save\",\"formula_GetRefreshToken\"];\n\nlet formulaNames = [\"formula_SyncRulesDealsConfig\",\n  \"formula_SyncFieldsConfig\",\n  \"formula_ValidateIgnore\"];\n  \nlet existingInstanceIds = {};\n\nif(steps.setInstanceInfo.instanceList.length !== 0){\n  existingInstanceIds = steps.setInstanceInfo.instanceList;\n}\n\n// let instanceNames=[bodyParam.formula_SyncRulesDealsConfig.name,\n//   bodyParam.formula_SyncFieldsConfig.name,\n//   bodyParam.formula_ValidateIgnore.name,\n//   bodyParam.formula_SyncDispatcher.name,bodyParam.formula_ManageSyncRules_Save.name,bodyParam.formula_GetRefreshToken.name];\n\n// let param=[bodyParam.formula_SyncRulesDealsConfig,\n//   bodyParam.formula_SyncFieldsConfig,\n//   bodyParam.formula_ValidateIgnore,\n//   bodyParam.formula_SyncDispatcher,bodyParam.formula_ManageSyncRules_Save,bodyParam.formula_GetRefreshToken];\n  \nlet instanceNames=[bodyParam.formula_SyncRulesDealsConfig.name,\n  bodyParam.formula_SyncFieldsConfig.name,\n  bodyParam.formula_ValidateIgnore.name];\n\nlet param=[bodyParam.formula_SyncRulesDealsConfig,\n  bodyParam.formula_SyncFieldsConfig,\n  bodyParam.formula_ValidateIgnore];\n\n\nfor(var i=0;i<instances.length;i++){\n  if(instances[i].name === instanceNames[steps.loopOverFormulaList.index]){\n    flag = true;\n    instanceInfo =  instances[i];\n    formulaName = formulaNames[steps.loopOverFormulaList.index];\n    existingInstanceIds[formulaName] = instanceInfo[\"id\"];\n    break;\n  }\n}\n\nif(flag === false){\n  done({\n    flag: false,\n    formulaName : formulaNames[steps.loopOverFormulaList.index],\n    instanceInfo: param[steps.loopOverFormulaList.index],\n    existingInstanceIds: existingInstanceIds\n  });\n}\n\nif(flag === true){\n  done({\n    flag: true,\n    formulaName : formulaNames[steps.loopOverFormulaList.index],\n    instanceInfo: instanceInfo,\n    existingInstanceIds: existingInstanceIds\n  });\n}\n\n\n\n\n"}},{"id":215671,"onSuccess":["formulaInformation"],"onFailure":[],"name":"ConfigParams","type":"script","properties":{"body":"let tpConfig = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements;\n\n\nlet params = {};\nparams.input = steps.InputParams.params.input;\n\nparams.input.formulas = {\n  formula_SyncRulesDealsConfig: tpConfig.formulas.formula_SyncRulesDealsConfig.id,\n  formula_SyncFieldsConfig: tpConfig.formulas.formula_SyncFieldsConfig.id,\n  formula_ValidateIgnore: tpConfig.formulas.formula_ValidateIgnore.id,\n  formula_SyncDispatcher: tpConfig.formulas.formula_SyncDispatcher.id,\n  formula_ManageSyncRules_Save: tpConfig.formulas.formula_ManageSyncRules_Save.id,\n  formula_GetRefreshToken: tpConfig.formulas.formula_GetRefreshToken.id\n};\n\n// formula_InitialSyncRun: tpConfig.formulas.formula_InitialSyncRun.id,\n//   formula_FullSyncRun: tpConfig.formulas.formula_FullSyncRun.id,\n\ndone({\n  params: params\n});"}},{"id":215672,"onSuccess":["newInstanceCreatedInfo"],"onFailure":[],"name":"createFormulaInstance","type":"request","properties":{"retryAttempts":"5","api":"${steps.createFormulaInstanceParams.createInstanceConfig.url}","retry":"true","retryDelay":"200","method":"POST","body":"${steps.createFormulaInstanceParams.createInstanceConfig.body}"}},{"id":215673,"onSuccess":["createFormulaInstance"],"onFailure":[],"name":"createFormulaInstanceParams","type":"script","properties":{"body":"let formulaId = steps.loopOverFormulaList.entry || null;\n\n\nlet createInstanceConfig = {\n  url: \"/formulas/\"+formulaId+\"/instances\",\n  body: steps.checkInstanceExist.instanceInfo\n};\n\n\ndone({\n  createInstanceConfig: createInstanceConfig\n});\n\n\n"}},{"id":219845,"onSuccess":["InputParams"],"onFailure":[],"name":"EnvProps","type":"script","properties":{"body":"let cloudElementsUrl = \"https://staging.cloud-elements.com/elements/api-v2\";\nlet getOrganizationSettingsInstance = \"400183\";\n\nlet formula_unlinkIntegration = {\n  \"id\" : \"29418\",\n  \"instance\" : \"400689\"\n} \n\nlet formula_manageSyncRulesSetup = {\n  \"id\": \"29426\",\n  \"instance\": \"399741\"\n}\n\nlet formula_GetRefreshToken = {\n  \"id\": \"29422\",\n  \"instance\": \"400694\"\n};\n\ndone({\n  cloudElementsUrl: cloudElementsUrl,\n  formula_unlinkIntegration: formula_unlinkIntegration,\n  formula_manageSyncRulesSetup: formula_manageSyncRulesSetup,\n  formula_GetRefreshToken: formula_GetRefreshToken,\n  getOrganizationSettingsInstance: getOrganizationSettingsInstance\n});\n\n\n"}},{"id":215674,"onSuccess":["loopOverFormulaList"],"onFailure":[],"name":"formulaIdList","type":"script","properties":{"body":"let formula_SyncRulesDealsConfig = steps.ConfigParams.params.input.formulas.formula_SyncRulesDealsConfig;\nlet formula_SyncFieldsConfig = steps.ConfigParams.params.input.formulas.formula_SyncFieldsConfig;\n\nlet formula_ValidateIgnore = steps.ConfigParams.params.input.formulas.formula_ValidateIgnore;\n\n// let formula_InitialSyncRun = steps.ConfigParams.params.input.formulas.formula_InitialSyncRun;\n// let formula_FullSyncRun = steps.ConfigParams.params.input.formulas.formula_FullSyncRun;\n\n// let formula_SyncDispatcher = steps.ConfigParams.params.input.formulas.formula_SyncDispatcher;\n\n// let formula_ManageSyncRules_Save = steps.ConfigParams.params.input.formulas.formula_ManageSyncRules_Save;\n\n// let formula_GetRefreshToken = steps.ConfigParams.params.input.formulas.formula_GetRefreshToken;\n\nlet formulaList=[formula_SyncRulesDealsConfig,formula_SyncFieldsConfig,formula_ValidateIgnore];\n\n// formula_InitialSyncRun,formula_FullSyncRun,\n\ndone({formulaList:formulaList});\n\n"}},{"id":215675,"onSuccess":["formulaIdList"],"onFailure":[],"name":"formulaInformation","type":"script","properties":{"body":"let siteName = steps.InputParams.params.input.siteName;\n\ndone({\n  formula_SyncRulesDealsConfig:{\n    active: true,\n    configuration: {},\n    name: siteName + \"-SyncRulesDealsConfig\"\n  },\n  formula_SyncFieldsConfig:{\n    active: true,\n    configuration: {},\n    name: siteName + \"-SyncFieldsConfig\"\n  },\n  formula_ValidateIgnore:{\n    active: true,\n    configuration: {},\n    name: siteName + \"-ValidateIgnore\"\n  },\n  // formula_InitialSyncRun:{\n  //   active: true,\n  //   configuration: {},\n  //   name: siteName + \"-InitialSyncRun\"\n  // },\n  // formula_FullSyncRun:{\n  //   active: true,\n  //   configuration: {},\n  //   name: siteName + \"-FullSyncRun\"\n  // },\n  // formula_SyncDispatcher:{\n  //   active: true,\n  //   configuration: {},\n  //   name: siteName + \"-SyncDispatcher\"\n  // },\n  // formula_ManageSyncRules_Save:{\n  //   active: true,\n  //   configuration: {},\n  //   name: siteName + \"-ManageSyncRules_Save\"\n  // },\n  // formula_GetRefreshToken:{\n  //   active: true,\n  //   configuration: {},\n  //   name: siteName + \"-GetRefreshToken\"\n  // }\n});\n\n\n"}},{"id":215676,"onSuccess":["Success"],"onFailure":[],"name":"getCustomFieldsFromChargebee","type":"httpRequest","properties":{"headers":"${steps.InputParams.getCustomFieldApi.headers}","url":"${steps.InputParams.getCustomFieldApi.url}","retryAttempts":"5","retry":"true","retryDelay":"200","query":"${steps.InputParams.getCustomFieldApi.query}","method":"GET"}},{"id":215677,"onSuccess":["checkInstanceExist"],"onFailure":[],"name":"getInstances","type":"request","properties":{"api":"/formulas/${steps.loopOverFormulaList.entry}/instances","method":"GET"}},{"id":215678,"onSuccess":["ConfigParams"],"onFailure":[],"name":"getTpConfig","type":"httpRequest","properties":{"headers":"${steps.InputParams.getTpConfigParams.auth}","url":"${steps.InputParams.getTpConfigParams.url}","retryAttempts":"5","retry":"true","retryDelay":"200","query":"${steps.InputParams.getTpConfigParams.query}","method":"GET"}},{"id":215679,"onSuccess":["getTpConfig"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args.request.query['cb-api-key'];\nlet siteDomain = trigger.args.request.query['cb-domain'];\nlet siteName = trigger.args.request.query['cb-site-name'];\nlet integrationName = trigger.args.request.query['integrationName'];\nlet password = \"\";\n\nlet errorEmailEndpoint =  'https://' + siteName + '.' + siteDomain + '/adhoc_checkout_email/api/send';\n// let errorEmailAddress = \"integrations-growth-internal@chargebee.com\";\nlet errorEmailAddress = \"ajaitester@gmail.com\";\n\n\nlet params = {\n  input: {\n    apiKey: apiKey,\n    siteDomain: siteDomain,\n    siteName: siteName,\n    integrationName: integrationName\n  }\n};\n\n\nlet sendErrorMailParams = {\n  url: errorEmailEndpoint,\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + \"\")\n  },\n  query :{\n    content : \"Error, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n    subject : \"Fatal Error Occurred during \" + integrationName + \" Sync\",\n    to_address : errorEmailAddress,\n    api_key : apiKey\n  }\n};\n\nlet getTpConfigParams = {\n    url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n    auth:{\n      Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n    },\n    query:{\n      integration_name: integrationName\n    }\n};\n\nlet getCustomFieldApi = {\n  url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/api/get_custom_field_list\",\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    site_name: siteName,\n    api_key: apiKey\n  }\n}\n\nlet tpConfigUpdateParams = {\n  url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body:  {\n     site_name: siteName,\n     api_key: apiKey,\n     integration_name: integrationName\n  }\n}\n\ndone({\n  params: params,\n  sendErrorMailParams: sendErrorMailParams,\n  tpConfigUpdateParams: tpConfigUpdateParams,\n  getTpConfigParams: getTpConfigParams,\n  getCustomFieldApi: getCustomFieldApi\n});"}},{"id":215680,"onSuccess":["updateTpConfigParams"],"onFailure":[],"name":"instanceIdList","type":"script","properties":{"body":"let instanceIds = [];\n\nif(steps.checkInstanceExist !== undefined){\n  instanceIds = steps.checkInstanceExist.existingInstanceIds;\n}\n\nif(steps.newInstanceCreatedInfo !== undefined){\n  instanceIds = steps.newInstanceCreatedInfo.instanceList;\n}\n\ndone({\n  instanceIds: instanceIds\n});\n\n"}},{"id":215681,"onSuccess":["InputParams"],"onFailure":["sendProcessCard"],"name":"isFirstCallAfterOAuth","type":"filter","properties":{"body":"if(trigger.args.request.query[\"OAuthProcessComplete\"] !== undefined){\n  if(trigger.args.request.query[\"OAuthProcessComplete\"] === \"true\"){\n    done(false);\n  }\n}\n\ndone(true);"}},{"id":215682,"onSuccess":["loopOverFormulaList"],"onFailure":["createFormulaInstanceParams"],"name":"isInstanceExist","type":"filter","properties":{"body":"done(steps.checkInstanceExist.flag);"}},{"id":215683,"onSuccess":["setInstanceInfo"],"onFailure":["instanceIdList"],"name":"loopOverFormulaList","type":"loop","properties":{"list":"${steps.formulaIdList.formulaList}"}},{"id":215684,"onSuccess":["loopOverFormulaList"],"onFailure":[],"name":"newInstanceCreatedInfo","type":"script","properties":{"body":"let formulaName = steps.checkInstanceExist.formulaName;\nlet instanceList = steps.checkInstanceExist.existingInstanceIds;\n\ninstanceList[formulaName] = steps.createFormulaInstance.response.body.id;\n\ndone({\n  instanceList: instanceList\n});\n\n"}},{"id":215685,"onSuccess":[],"onFailure":[],"name":"sendProcessCard","type":"script","properties":{"body":"let instanceId = info.formulaInstanceId;\n\nlet card = {\n   \"cards\":[\n      {\n         \"card\": {\n            \"type\" : \"PROCESSING\",\n            \"processingText\": \" Loading...\",\n            \"request\" : {\n               \"type\":\"DOC_READY_GET_CARD\",\n               \"apiEndPoint\":{\n                  \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/pipedrive/syncRulesContactsSetup\",\n                        \"type\": \"GET\",\n                        \"headers\": {\n                            \"Elements-Formula-Instance-Id\": instanceId\n                        },\n                        \"input\":{\n                             \"integrationName\": \"pipedrive\",\n                             \"siteDomain\": trigger.args.request.query['cb-domain']\n                        }\n               }\n            }\n         },\n         \"id\" : \"testdynamic2\",\n      } \n   ],\n   \"proceed\":{\n        \"id\":\"proceed\",\n        \"display\" : \"Proceed\",\n        \"icon\" : \"ARROW\",\n        \"buttonLook\":\"FILLED\",\n        \"type\" : \"DIRECT_LINK\",\n        \"request\":{\n     \t\t  \"type\":\"ON_CLICK_SEND_INPUT\",\n       \t\t\"apiEndPoint\":{\n              \t\"apiUrl\":\"https://staging.cloud-elements.com/elements/api-v2/pipedrive/syncRulesContactsResponse\",\n              \t\"type\":\"GET\",\n              \t\"headers\":{\n                 \t\t\"Elements-Formula-Instance-Id\":\"388734\"\n              \t},\n              \t\"input\":{\n                 \t\t\"id\":\"chargebee\",\n                 \t\t\"siteDomain\" : siteDomain,\n                 \t\t\"integrationName\": integrationName\n              \t}\n           \t}\n      \t}\n    }\n};\n\ndone({\n statusCode: 200,\n result: card\n});"}},{"id":215686,"onSuccess":["getInstances"],"onFailure":[],"name":"setInstanceInfo","type":"script","properties":{"body":"let instanceList = {};\n\n\nif((steps.isInstanceExist !== undefined) && (steps.isInstanceExist.continue === true)){\n  instanceList = steps.checkInstanceExist.existingInstanceIds;\n}\n\nif((steps.isInstanceExist !== undefined) && (steps.isInstanceExist.continue === false)){\n  instanceList = steps.newInstanceCreatedInfo.instanceList;\n}\n\ndone({\n  instanceList: instanceList\n});\n\n"}},{"id":215687,"onSuccess":[],"onFailure":[],"name":"Success","type":"script","properties":{"body":"let cloudElementsUrl = steps.EnvProps.cloudElementsUrl;\nlet instanceId = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_SyncRulesContactsConfig.instance;\nlet siteDomain = steps.InputParams.params.input.siteDomain;\nlet integrationName = steps.InputParams.params.input.integrationName;\n\nlet customFields = JSON.parse(steps.getCustomFieldsFromChargebee.response.body.response) || null;\nlet chargebeeCustomFields;\n\nlet customFields_customer = null;\n\nif(customFields !== null){\n  customFields_customer = customFields.customer_custom_fields;\n}\n\nlet default_allowedValues = {\n  \"email\": \"Email\",\n  \"id\": \"Customer ID\"\n};\n\nlet allowedValues = Object.assign(default_allowedValues,customFields_customer);\n\nlet getOrganizationSettingsInstance = steps.EnvProps.getOrganizationSettingsInstance;\n\n// let card = {\n//   \"cards\" : [\n//     {\n//         \"card\": {\n//         \"type\" : \"EMPTY_BACKGROUND\",\n//         \"heading\":\"Sync Rules for Contacts\",\n//           \"contents\":[\n//             \"Configure how customer and subscription data is synced from Chargebee to Pipedrive. Set rules to manage 'People' and 'Organizations' in Pipedrive from Chargebee.<a href=\\\"https://www.chargebee.com\\\">Learn More</a>\"\n//             ]\n//         },\n//         \"isCardDone\":\"true\"\n//       },\n//       {\n//         \"card\": {\n//             \"type\" : \"INPUT\",\n//             \"params\": [\n//             \t{  \n// \t\t\t         \"dispName\":\"Choose customers you'd like to sync\",\n// \t\t\t         \"type\":\"DROPDOWN\",\n// \t\t\t         \"id\":\"chooseCustomersToSync\",\n// \t\t\t         \"allowedValues\":{\n// \t\t\t            \"option1\":\"Sync All Customers\",\n// \t\t\t            \"option2\":\"Sync Only Customers with Subscriptions\"\n// \t\t\t         },\n// \t\t\t          \"defaultVal\":\"option1\"\n// \t\t\t    }\n//             ]\n//         },\n//         \"id\" : \"check1\",\n//         \"isCardDone\":\"true\"\n//       },\n//       {\n//         \"card\": {\n//             \"type\" : \"INPUT\",\n//             \"params\": [\n//               {       \n//               \"dispName\":\"Allow Chargebee to create People in Pipedrive\",\n//                     \"desc\":\"By default, existing people, if any, will be updated with the changes made in Chargebee. Disable if you dont want chargebee to create People in Pipedrive\",\n//                 \"type\":\"TOGGLE\",\n//                 \"id\":\"createPeopleInPipedrive\",\n//                 \"defaultVal\":false\n//               }\n//             ]\n//         },\n//         \"id\" : \"check2\",\n//           \"isCardDone\":\"true\"\n//       },\n//       {\n//         \"card\": {\n//             \"type\" : \"TOGGLE_HIDE_INPUT\",\n//             \"params\": [\n//               {       \n//                   \"dispName\":\"Allow Chargebee to manage Organization in Pipedrive\",\n//                   \"desc\":\"By default, Chargebee customers will be synced as People in Pipedrive. Enable if you want to allow Chargebee to add people to Organization, and create and update Organizations in Pipedrive.\",\n//                   \"type\":\"TOGGLE\",\n//                   \"id\":\"manageOrganizationInPipedrive\",\n//                   \"defaultVal\":false\n//               },\n//               {  \n//                 \"dispName\":\"Choose what you'd like to do when a customer is synced to Pipedrive\",\n//                 \"type\":\"DROPDOWN\",\n//                 \"id\":\"actionCustomerSyncedToPipedrive\",\n//                 \"allowedValues\":{\n//                     \"option1\":\"Group using 'Organization' name\",\n//                     \"option2\":\"Create a new Organization\"\n//                 },\n//                   \"defaultVal\":\"option1\"\n//               },\n//               {  \n//                   \"dispName\":\"Choose the contact in Pipedrive you'd like to sync subscription details with\",\n//                 \"type\":\"DROPDOWN\",\n//                 \"id\":\"linkSubAttributesToPerson\",\n//                 \"allowedValues\":{\n//                     \"option1\":\"People\",\n//                     \"option2\":\"Organization\"\n//                 },\n//                   \"defaultVal\":\"option1\"\n//               },\n//               {       \n//                   \"dispName\":\"Sync Account Hierarchies from Chargebee to Pipedrive\",\n//                   \"desc\":\"By default, Chargebee customers will be synced as People in Pipedrive. Enable if you want to allow Chargebee to add people to Organization, and create and update Organizations in Pipedrive.\",\n//                   \"type\":\"TOGGLE\",\n//                   \"id\":\"syncAccountHierarchies\",\n//                   \"defaultVal\":false\n//               },\n          \n//             ]\n//         },\n//         \"id\" : \"check3\",\n//           \"isCardDone\":\"true\"\n//       },\n//       {\n//         \"card\": {\n//             \"type\" : \"INPUT\",\n//             \"params\": [\n//               {  \n//                   \"dispName\":\"When a customer is deleted in Chargebee\",\n//                 \"type\":\"DROPDOWN\",\n//                 \"id\":\"customerDeletedInCB\",\n//                 \"allowedValues\":{\n//                     \"option1\":\"Do Nothing\",\n//                     \"option2\":\"Mark 'Person'as 'Deleted'\",\n//                     \"option3\":\"Mark 'Person' and 'Organization' as 'Deleted'\"\n//                 },\n//                   \"defaultVal\":\"option2\"\n//               }\n//             ]\n//         },\n//         \"id\" : \"check4\",\n//         \"isCardDone\":\"true\"\n//       },\n//       {\n//         \"card\": {\n//           \"type\" : \"MAPPING\",\n//           \"heading\": \"Map Customers from Chargebee to Pipedrive\",\n//           \"contents\": \"Choose a unique field to identify and sync customers from Chargebee to Pipedrive <a href=\\\"https://www.chargebee.com\\\" target=\\\"blank\\\">Learn More</a>\",\n//           \"leftComponent\":{\n//             \"id\": \"mapField_chargebee\",\n//             \"title\": \"Chargebee Customer Field\",\n//             \"allowedValues\": allowedValues,\n//             \"defaultValue\": \"email\",\n//           },\n//           \"rightComponent\":{\n//             \"id\": \"mapField_pipedrive\",\n//             \"title\": \"Pipedrive Person Field\",\n//             \"allowedValues\":{\n//               \"email\": \"Email\",\n//               \"pipedrive_person_id\": \"Pipedrive Person ID\"\n//             },\n//             \"defaultValue\":\"email\"\n//           }\n//         },\n//         \"id\" : \"check5\",\n//         \"isCardDone\":\"true\"\n//       }\n//     ],\n//   \"proceed\":{\n//       \t\"id\":\"proceed\",\n//       \t\"display\" : \"Proceed\",\n//       \t\"icon\" : \"ARROW\",\n//       \t\"buttonLook\":\"FILLED\",\n//       \t\"type\" : \"DIRECT_LINK\",\n//       \t\"request\":{\n//     \t\t\"type\":\"ON_CLICK_SEND_INPUT\",\n//     \t\t\"apiEndPoint\":{\n//             \t\"apiUrl\":cloudElementsUrl+\"/pipedrive/syncRulesContactsResponse\",\n//             \t\"type\":\"GET\",\n//             \t\"headers\":{\n//               \t\t\"Elements-Formula-Instance-Id\": instanceId\n//             \t},\n//             \t\"input\":{\n//               \t\t\"id\":\"chargebee\",\n//               \t\t\"siteDomain\" : siteDomain,\n//               \t\t\"integrationName\": integrationName\n//             \t}\n//         \t}\n//       \t}\n//     }\n// };\n\nlet tpConfig = JSON.parse(steps.updateTpConfig.response.body.config_json) || null;\n\nlet card = {\n   \"cards\" : [\n     {\n        \"card\": {\n        \"type\" : \"EMPTY_BACKGROUND\",\n        \"heading\":\"Sync Rules for Contacts\",\n          \"contents\":[\n            \"Configure how customer and subscription data is synced from Chargebee to Pipedrive. Set rules to manage 'People' and 'Organizations' in Pipedrive from Chargebee. <a href=\\\"https://www.chargebee.com\\\" target=\\\"blank\\\">Learn More</a>\"\n            ]\n        },\n         \"isCardDone\":\"true\"\n      },\n      \n      {\n          \"card\": {\n              \"type\" : \"INPUT\",\n              \"params\": [\n                  {  \n                          \"dispName\":\"Choose customers you'd like to sync\",\n                          \"type\":\"DROPDOWN_DYNAMIC\",\n                          \"id\":\"chooseCustomersToSync\",\n                          \"dropDownItemsList\":[\n                              {\n                                  \"value\":\"option1\",\n                                  \"disp\":\"Sync All Customers\"\n                              },\n                              {\n                                  \"value\":\"option2\",\n                                  \"disp\":\"Sync Only Customers with Subscriptions\"\n                              }\n                          ],\n                          \"defaultVal\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? tpConfig.cloudElements.syncRulesContacts.chooseCustomersToSync : \"option1\"\n                  }\n              ]\n          },\n          \"id\" : \"check1\",\n          \"isCardDone\":\"true\"\n      },\n      {\n         \"card\": {\n            \"type\" : \"DYNAMIC_INPUT\",\n            \"params\": [\n               {       \n                \"dispName\":\"Allow Chargebee to create 'People' in Pipedrive\",\n                      \"desc\":\"By default, existing people, if any, will be updated with the changes made in Chargebee. Disable if you dont want chargebee to create 'People' in Pipedrive. <a href=\\\"https://www.chargebee.com\\\" target=\\\"blank\\\">Learn More</a>\",\n                  \"type\":\"DROPDOWN_DYNAMIC\",\n                  \"id\":\"createPeopleInPipedrive\",\n                  \"dropDownItemsList\":[\n                      {\n                      \"value\":\"true\",\n                          \"disp\":\"Create person\"\n                      },\n                      {\n                      \"value\":\"false\",\n                          \"disp\":\"Do nothing\"\n                      }\n                  ],\n                \"defaultVal\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? ((tpConfig.cloudElements.syncRulesContacts.createPeopleInPipedrive !== undefined) ? tpConfig.cloudElements.syncRulesContacts.createPeopleInPipedrive : \"true\") : \"true\",\n                \"isSeperator\":true\n              },\n              {       \n                \"dispName\":\"Allow Chargebee to manage 'Organization' in Pipedrive\",\n                \"desc\":\"By default, Chargebee customers will be synced as 'People' in Pipedrive. Enable if you want to allow Chargebee to add people to 'Organization', and create and update Organizations in Pipedrive. <a href=\\\"https://www.chargebee.com\\\" target=\\\"blank\\\">Learn More</a>\",\n                \"type\":\"TOGGLE\",\n                \"id\":\"manageOrganizationInPipedrive\",\n                \"defaultVal\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? ((tpConfig.cloudElements.syncRulesContacts.manageOrganizationInPipedrive === \"true\") ? true : false) : false,\n                \"isSeperator\":true,\n                \"isDynamic\":\"true\",\n                \"request\":{\n                  \"type\":\"ON_CHANGE_FETCH_INPUT\",\n                  \"apiEndPoint\":{\n                    \"apiUrl\":cloudElementsUrl+\"/pipedrive/getOrganizationSettings\",\n                    \"type\":\"GET\",\n                    \"headers\":{\n                      \"Authorization\":\"User XNzP5miZ8LjANZarWA0np2LmNeRkUanHScUEQmQHwDs=, Organization c9584f9cc4a4c8391568438a9a3041a2\",\n                      \"Elements-Formula-Instance-Id\": getOrganizationSettingsInstance\n                    },\n                    \"input\":{\n                      \"card\":\"subscription\"\n                    }\n                  }\n                }\n             },\n             {  \n              \"dispName\":\"When a customer is deleted in Chargebee\",\n               \"type\":\"DROPDOWN_DYNAMIC\",\n               \"id\":\"customerDeletedInCB\",\n               \"dropDownItemsList\":[\n                       {\n                        \"value\":\"option1\",\n                          \"disp\":\"Do Nothing\"\n                       },\n                       {\n                        \"value\":\"option2\",\n                          \"disp\":\"Mark 'Person'as 'Deleted'\"\n                       }\n               ],\n                \"defaultVal\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? tpConfig.cloudElements.syncRulesContacts.customerDeletedInCB : \"option2\"\n              }\n            ]\n         },\n         \"id\" : \"check2\",\n         \"isCardDone\":\"true\"\n      },\n      {\n        \"card\": {\n          \"type\" : \"MAPPING\",\n          \"heading\": \"Map Customers from Chargebee to Pipedrive\",\n          \"contents\": \"Choose a unique field to identify and sync customers from Chargebee to Pipedrive <a href=\\\"https://www.chargebee.com\\\" target=\\\"blank\\\" target=\\\"blank\\\">Learn More</a>\",\n          \"leftComponent\":{\n            \"id\": \"mapField_chargebee\",\n            \"title\": \"Chargebee Customer Field\",\n            \"allowedValues\": allowedValues,\n            \"defaultValue\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? tpConfig.cloudElements.syncRulesContacts.mappedField : \"email\",\n          },\n          \"rightComponent\":{\n            \"id\": \"mapField_pipedrive\",\n            \"title\": \"Pipedrive Person Field\",\n            \"allowedValues\":{\n              \"email\": \"Email\",\n              \"pipedrive_person_id\": \"Pipedrive Person ID\"\n            },\n            \"defaultValue\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? tpConfig.cloudElements.syncRulesContacts.mappedField_pipedrive : \"email\"\n          }\n        },\n        \"id\" : \"check5\",\n         \"isCardDone\":\"true\"\n      }\n    ],\n   \"proceed\":{\n      \t\"id\":\"proceed\",\n      \t\"display\" : \"Proceed\",\n      \t\"icon\" : \"ARROW\",\n      \t\"buttonLook\":\"FILLED\",\n      \t\"type\" : \"DIRECT_LINK\",\n      \t\"request\":{\n     \t\t\"type\":\"ON_CLICK_SEND_INPUT\",\n     \t\t\"apiEndPoint\":{\n            \t\"apiUrl\":cloudElementsUrl+\"/pipedrive/syncRulesContactsResponse\",\n            \t\"type\":\"GET\",\n            \t\"headers\":{\n               \t\t\"Elements-Formula-Instance-Id\": instanceId\n            \t},\n            \t\"input\":{\n               \t\t\"id\":\"chargebee\",\n               \t\t\"siteDomain\" : siteDomain,\n               \t\t\"integrationName\": integrationName\n            \t}\n         \t}\n      \t}\n    }\n};\n\n// {       \n//       \"dispName\":\"Allow Chargebee to create 'People' in Pipedrive\",\n//             \"desc\":\"By default, existing people, if any, will be updated with the changes made in Chargebee. Disable if you dont want chargebee to create 'People' in Pipedrive. <a href=\\\"https://www.chargebee.com\\\" target=\\\"blank\\\">Learn More</a>\",\n//         \"type\":\"TOGGLE\",\n//         \"id\":\"createPeopleInPipedrive\",\n//         \"defaultVal\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? ((tpConfig.cloudElements.syncRulesContacts.createPeopleInPipedrive === \"false\") ? false : true) : true,\n//         \"isSeperator\":true\n//       }\n\nif(tpConfig.cloudElements.syncRulesContacts !== undefined){\n  if(tpConfig.cloudElements.syncRulesContacts.manageOrganizationInPipedrive === \"true\"){\n    let newParams = [\n      {       \n        \"dispName\":\"Allow Chargebee to create 'People' in Pipedrive\",\n              \"desc\":\"By default, existing people, if any, will be updated with the changes made in Chargebee. Disable if you dont want chargebee to create 'People' in Pipedrive. <a href=\\\"https://www.chargebee.com\\\" target=\\\"blank\\\">Learn More</a>\",\n          \"type\":\"DROPDOWN_DYNAMIC\",\n          \"id\":\"createPeopleInPipedrive\",\n          \"dropDownItemsList\":[\n              {\n              \"value\":\"true\",\n                  \"disp\":\"Create person\"\n              },\n              {\n              \"value\":\"false\",\n                  \"disp\":\"Do nothing\"\n              }\n          ],\n        \"defaultVal\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? ((tpConfig.cloudElements.syncRulesContacts.createPeopleInPipedrive !== undefined) ? tpConfig.cloudElements.syncRulesContacts.createPeopleInPipedrive : \"true\") : \"true\",\n        \"isSeperator\":true\n      },\n      {       \n        \"dispName\":\"Allow Chargebee to manage 'Organization' in Pipedrive\",\n        \"desc\":\"By default, Chargebee customers will be synced as 'People' in Pipedrive. Enable if you want to allow Chargebee to add people to Organization, and create and update Organizations in Pipedrive. <a href=\\\"https://www.chargebee.com\\\" target=\\\"blank\\\">Learn More</a>\",\n        \"type\":\"TOGGLE\",\n        \"id\":\"manageOrganizationInPipedrive\",\n        \"defaultVal\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? ((tpConfig.cloudElements.syncRulesContacts.manageOrganizationInPipedrive === \"true\") ? true : false) : false,\n        \"isSeperator\":true,\n        \"isDynamic\":\"true\",\n        \"request\":{\n          \"type\":\"ON_CHANGE_FETCH_INPUT\",\n          \"apiEndPoint\":{\n            \"apiUrl\":cloudElementsUrl+\"/pipedrive/getOrganizationSettings\",\n            \"type\":\"GET\",\n            \"headers\":{\n              \"Authorization\":\"User XNzP5miZ8LjANZarWA0np2LmNeRkUanHScUEQmQHwDs=, Organization c9584f9cc4a4c8391568438a9a3041a2\",\n              \"Elements-Formula-Instance-Id\": getOrganizationSettingsInstance\n            },\n            \"input\":{\n              \"card\":\"subscription\"\n            }\n          }\n        }\n     },\n    // {\n    //     \"dispName\":\"Choose what you'd like to do when a customer is synced to Pipedrive\",\n    //     \"type\":\"DROPDOWN\",\n    //     \"id\":\"actionCustomerSyncedToPipedrive\",\n    //     \"allowedValues\":{\n    //         \"option1\":\"Group using 'Organization' name\",\n    //         \"option2\":\"Create a new Organization\"\n    //     },\n    //       \"defaultVal\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? tpConfig.cloudElements.syncRulesContacts.actionCustomerSyncedToPipedrive : \"option1\"\n    //   },\n       {  \n          \"dispName\":\"Choose the contact in Pipedrive you'd like to sync subscription details with\",\n         \"type\":\"DROPDOWN\",\n         \"id\":\"linkSubAttributesToPerson\",\n          \"desc\":\"You can choose to add subscription details like plan name, MRR, status, etc., to 'Organization' or 'People'.\",\n         \"allowedValues\":{\n            \"option1\":\"People\",\n            \"option2\":\"Organization\"\n         },\n          \"defaultVal\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? tpConfig.cloudElements.syncRulesContacts.linkSubAttributesToPerson : \"option1\"\n       },\n      // {       \n      //     \"dispName\":\"Sync Account Hierarchies from Chargebee to Pipedrive\",\n      //     \"desc\":\"Enable if you want to sync hierarchical account relationships from Chargebee as related organization in Pipedrive. <a href=\\\"https://www.chargebee.com\\\" target=\\\"blank\\\">Learn More</a>\",\n      //     \"type\":\"TOGGLE\",\n      //     \"id\":\"syncAccountHierarchies\",\n      //     \"defaultVal\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? ((tpConfig.cloudElements.syncRulesContacts.syncAccountHierarchies === \"true\") ? true : false) : false,\n      //     \"isSeperator\":true\n      // },\n       {  \n        \"dispName\":\"When a customer is deleted in Chargebee\",\n         \"type\":\"DROPDOWN_DYNAMIC\",\n         \"id\":\"customerDeletedInCB\",\n         \"dropDownItemsList\":[\n                 {\n                  \"value\":\"option1\",\n                    \"disp\":\"Do Nothing\"\n                 },\n                 {\n                  \"value\":\"option2\",\n                    \"disp\":\"Mark 'Person'as 'Deleted'\"\n                 },\n                 {\n                   \"value\":\"option3\",\n                   \"disp\":\"Mark 'Person' and 'Organization' as 'Deleted'\"\n                 }\n         ],\n          \"defaultVal\": (tpConfig.cloudElements.syncRulesContacts !== undefined) ? tpConfig.cloudElements.syncRulesContacts.customerDeletedInCB : \"option2\"\n        }\n    ];\n    card.cards[2].card.params = newParams;\n  }\n}\n\ndone(card);"}},{"id":215688,"onSuccess":["getCustomFieldsFromChargebee"],"onFailure":[],"name":"updateTpConfig","type":"httpRequest","properties":{"headers":"${steps.updateTpConfigParams.tpConfigUpdateParams.headers}","url":"${steps.updateTpConfigParams.tpConfigUpdateParams.url}","retryAttempts":"5","retry":"true","retryDelay":"200","method":"POST","body":"${steps.updateTpConfigParams.tpConfigUpdateParams.body}"}},{"id":215689,"onSuccess":["updateTpConfig"],"onFailure":[],"name":"updateTpConfigParams","type":"script","properties":{"body":"let params = steps.ConfigParams.params.input;\n\nlet configJson = steps.getTpConfig.response.body.third_party_configuration.config_json;\n\nconfigJson.cloudElements.formulas.formula_SyncRulesDealsConfig = {\n        id: params.formulas.formula_SyncRulesDealsConfig,\n        instance: steps.instanceIdList.instanceIds.formula_SyncRulesDealsConfig\n      };\n      \nconfigJson.cloudElements.formulas.formula_SyncFieldsConfig = {\n        id: params.formulas.formula_SyncFieldsConfig,\n        instance: steps.instanceIdList.instanceIds.formula_SyncFieldsConfig\n      };\n      \nconfigJson.cloudElements.formulas.formula_ValidateIgnore = {\n        id: params.formulas.formula_ValidateIgnore,\n        instance: steps.instanceIdList.instanceIds.formula_ValidateIgnore\n      };\n      \n// configJson.cloudElements.formulas.formula_InitialSyncRun = {\n//         id: params.formulas.formula_InitialSyncRun,\n//         instance: steps.instanceIdList.instanceIds.formula_InitialSyncRun,\n//         syncSetupStatus: \"NOT_CONFIGURED\"\n//       };\n      \n// configJson.cloudElements.formulas.formula_FullSyncRun = {\n//         id: params.formulas.formula_FullSyncRun,\n//         instance: steps.instanceIdList.instanceIds.formula_FullSyncRun\n//       };\n      \nconfigJson.cloudElements.formulas.formula_SyncDispatcher = {\n        id: params.formulas.formula_SyncDispatcher,\n        instance: steps.instanceIdList.instanceIds.formula_SyncDispatcher\n      };\n      \nconfigJson.cloudElements.formulas.formula_ManageSyncRules_Save = {\n    id: params.formulas.formula_ManageSyncRules_Save,\n    instance: steps.instanceIdList.instanceIds.formula_ManageSyncRules_Save\n}\n\nconfigJson.cloudElements.formulas.formula_GetRefreshToken = {\n  id: params.formulas.formula_GetRefreshToken,\n  instance: steps.instanceIdList.instanceIds.formula_GetRefreshToken\n}\n\n//Hardcoded on EnvProps\n\nconfigJson.cloudElements.formulas.formula_unlinkIntegration = steps.EnvProps.formula_unlinkIntegration; \n\nconfigJson.cloudElements.formulas.formula_manageSyncRulesSetup = steps.EnvProps.formula_manageSyncRulesSetup;\n\n// configJson.cloudElements.formulas.formula_GetRefreshToken = steps.EnvProps.formula_GetRefreshToken;\n    \nconfigJson[\"new_sub_step\"] = \"step_1\";\n\n\nlet tpConfigUpdateParams = steps.InputParams.tpConfigUpdateParams;\ntpConfigUpdateParams.body.config_json = configJson;\n\ndone({\n  tpConfigUpdateParams: tpConfigUpdateParams\n});\n\n"}}],"triggers":[{"id":26029,"onSuccess":["EnvProps"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"method":"GET","uri":"/pipedrive/syncRulesContactsSetup","engine":"v1","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"api":"GET /pipedrive/syncRulesContactsSetup","configuration":[]}