{"id":29409,"name":"testing-pipedriveValidateSetup","userId":27893,"accountId":24428,"createdDate":"2019-09-05T06:59:51Z","steps":[{"id":215749,"onSuccess":["HasError"],"onFailure":[],"name":"CheckStatus","type":"script","properties":{"body":"let configJson = steps.getTpConfig.response.body.third_party_configuration.config_json;\n\nlet input = steps.InputParams.updateTpConfigParams;\ninput.error = false;\ninput.done = false;\n\n\nlet executionData = steps.getExecutionStatus.response.body || null;\n\nif(executionData.status === undefined) {\n  input.error = true;\n  input.done = true;\n}else if(executionData.status === \"failed\"){\n  input.error = true;\n  input.done = true;\n}else if(executionData.status === \"success\"){\n  input.error = false;\n  input.done = true;\n  \n  for(var i=0;i<=executionData.stepExecutions.length;i++){\n    if(executionData.stepExecutions[i][\"stepName\"] ===\"validation\") {\n      input.result = executionData.stepExecutions[i];\n      break;\n    }\n  }\n  \n}else if(executionData.status === \"pending\"){\n  input.error = false;\n  input.done = false;\n}\n\nif(input.error) {\n  configJson.cloudElements.formulas.formula_ValidateSetup.execution_data.execution_status = \"FAILED\";\n  configJson.cloudElements.formulas.formula_ValidateSetup.execution_data.result = { \n    error:true,\n    message:['Integration ERROR-- during data validation']\n  };\n  \n}else {\n  if(input.done){\n    configJson.cloudElements.formulas.formula_ValidateSetup.execution_data.execution_status = \"DONE\";\n  }\n}\n\ninput.body.config_json = configJson;\n\ndone(input);"}},{"id":215750,"onSuccess":["HasNoExecution"],"onFailure":["SkipValidation"],"name":"ContinueValidation","type":"filter","properties":{"body":"let mappedField = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.syncRulesContacts.mappedField;\n\ndone(mappedField === \"email\");"}},{"id":219874,"onSuccess":["InputParams"],"onFailure":[],"name":"EnvProps","type":"script","properties":{"body":"let cloudElementsUrl = \"https://staging.cloud-elements.com/elements/api-v2\";\n\ndone({\n  cloudElementsUrl: cloudElementsUrl\n});\n\n\n"}},{"id":215751,"onSuccess":["CheckStatus"],"onFailure":[],"name":"getExecutionStatus","type":"request","properties":{"method":"GET","api":"${steps.getExecutionStatusParams.executionStatusConfig.url}"}},{"id":215752,"onSuccess":["getExecutionStatus"],"onFailure":[],"name":"getExecutionStatusParams","type":"script","properties":{"body":"let executionId = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateSetup.execution_data.execution_id || null;\n\nlet executionStatusConfig = {\n  url: \"/formulas/instances/executions/\"+executionId\n};\n\n\ndone({\n  executionStatusConfig: executionStatusConfig\n});\n\n\n"}},{"id":215753,"onSuccess":["resultPublished"],"onFailure":["resultPublished"],"name":"getResult","type":"request","properties":{"method":"GET","retryAttempts":"5","retryDelay":"200","api":"${steps.getResultParams.getResultConfig.url}","retry":"true"}},{"id":215754,"onSuccess":["getResult"],"onFailure":[],"name":"getResultParams","type":"script","properties":{"body":"let stepId = steps.CheckStatus.result.id || null;\n// let delayInMilliseconds = 5000; //1 second\n\n\n// setTimeout(function() {\n  \n// }, delayInMilliseconds);\n\nlet getResultConfig = {\n  url: \"/formulas/instances/executions/steps/\"+stepId+\"/values\"\n};\n\ndone({\n  getResultConfig: getResultConfig\n});\n\n"}},{"id":215755,"onSuccess":["ContinueValidation"],"onFailure":["sendErrorMail"],"name":"getTpConfig","type":"httpRequest","properties":{"method":"GET","query":"${steps.InputParams.getTpConfigParams.query}","retryAttempts":"5","body":"","headers":"${steps.InputParams.getTpConfigParams.auth}","retryDelay":"200","url":"${steps.InputParams.getTpConfigParams.url}","retry":"true"}},{"id":215756,"onSuccess":["updateExecutionData_TpConfig"],"onFailure":["updateTpConfig_2"],"name":"getTpConfig_2","type":"httpRequest","properties":{"method":"GET","query":"${steps.InputParams.getTpConfigParams.query}","retryAttempts":"5","headers":"${steps.InputParams.getTpConfigParams.auth}","retryDelay":"200","url":"${steps.InputParams.getTpConfigParams.url}","retry":"true"}},{"id":215757,"onSuccess":["MakeCard"],"onFailure":[],"name":"getTpConfig_3","type":"httpRequest","properties":{"method":"GET","query":"${steps.InputParams.getTpConfigParams.query}","retryAttempts":"5","headers":"${steps.InputParams.getTpConfigParams.auth}","retryDelay":"200","url":"${steps.InputParams.getTpConfigParams.url}","retry":"true"}},{"id":215758,"onSuccess":["getResultParams"],"onFailure":["sendProcessCard"],"name":"HasDone","type":"filter","properties":{"body":"done(steps.CheckStatus.done);"}},{"id":215759,"onSuccess":["updateTpConfig_2"],"onFailure":["HasDone"],"name":"HasError","type":"filter","properties":{"body":"done(steps.CheckStatus.error);"}},{"id":215760,"onSuccess":["isRetry"],"onFailure":["getExecutionStatusParams"],"name":"HasNoExecution","type":"filter","properties":{"body":"if(trigger.args.request.query['isResultPublished'] !== undefined){\n  if(trigger.args.request.query['isResultPublished'] === true){\n    done(false);\n  }\n}\n\nlet flag = false;\nlet execution = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateSetup.execution_data;\n\nif(execution === undefined){\n  flag = true;\n}else {\n  if((execution.execution_status === \"DONE\") || (execution.execution_status === \"FAILED\")){\n     flag = true;\n  }else {\n     flag = false;\n  }\n}\n\ndone(flag);"}},{"id":215761,"onSuccess":["getTpConfig"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args.request.query['cb-api-key'] || null;\nlet siteName = trigger.args.request.query['cb-site-name'] || null;\nlet siteDomain = trigger.args.request.query['cb-domain'];\nlet integrationName = trigger.args.request.query['integrationName'];\nlet retry = trigger.args.request.query['retry'];\nlet password = \"\";\n\n// let siteDomain = trigger.args.request.query['siteDomain'];\n// let retry = trigger.args.request.query['retry'];\n\n\nif(retry === undefined || retry ==='false') {\n  retry = false;\n}else{\n  retry = true;\n}\n\nlet errorEmailEndpoint =  'https://' + siteName + '.' + siteDomain + '/adhoc_checkout_email/api/send';\n//let errorEmailAddress = \"integrations-growth-internal@chargebee.com\";\nlet errorEmailAddress =\"ajaitester@gmail.com\";\n\n//let apiKey = \"test_GGdIWcuNgQeYwAz5sgcuFornkTRZDTom6i\";\n//let siteName = \"ipaas-test\";\n//let type = 'pipedrive';\n\nlet params = {\n  input: {\n    apiKey: apiKey,\n    siteName: siteName,\n    siteDomain:siteDomain,\n    password: password,\n    retry: retry,\n    integrationName: integrationName,\n    errorEmailEndpoint: errorEmailEndpoint,\n    errorEmailAddress: errorEmailAddress,\n  }\n};\n\nlet getTpConfigParams = {\n    url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n    auth:{\n      Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n    },\n    query:{\n      integration_name: integrationName\n    }\n};\n\nlet updateTpConfigParams = {\n  url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body: {\n     site_name: siteName,\n     api_key: apiKey,\n     integration_name: integrationName\n     //append config_json with this during request\n  }\n};\n\n\nlet sendErrorMailParams = {\n  url: errorEmailEndpoint,\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + \"\")\n  },\n  query :{\n    content : \"Integration Error, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n    subject : \"Fatal Error Occurred during \" + integrationName + \" Sync\",\n    to_address : errorEmailAddress,\n    api_key : apiKey\n  }\n};\n\n\n\ndone({\n  params: params,\n  getTpConfigParams: getTpConfigParams,\n  sendErrorMailParams: sendErrorMailParams,\n  updateTpConfigParams: updateTpConfigParams\n});\n\n"}},{"id":215762,"onSuccess":["triggerExecutionParams"],"onFailure":["sendLastResult"],"name":"isRetry","type":"filter","properties":{"body":"if(steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateSetup.execution_data === undefined){\n  done(true);\n}else{\n  done(steps.InputParams.params.input.retry);\n}"}},{"id":215763,"onSuccess":[],"onFailure":["sendErrorMail"],"name":"MakeCard","type":"script","properties":{"body":"let cloudElementsUrl = steps.EnvProps.cloudElementsUrl;\n\n// let validationSetupInstanceId = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateSetup.instance || null;\n\nlet tpConfig = JSON.parse(steps.updateTpConfig_3.response.body.config_json);\nlet validationSetupInstanceId = tpConfig.cloudElements.formulas.formula_ValidateSetup.instance || null;\n\nlet resultcard = JSON.parse(steps.getResult.response.body[0].value);\n\n// let s3loglink = steps.getTpConfig_3.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateSetup.execution_data.validationlog;\n\n// if(s3loglink===undefined){\n//   s3loglink=\"\";\n// }\n\nlet cardJson = {\n    cards: [{\n        id: \"check2\"\n    }]\n};\n\nif (resultcard.cardStatus === \"VALIDATION-FAILED\") {\n    let card = resultcard.cardResult.card;\n    let csvButton = {      \n        \"display\": \"Download CSV\",       \n        \"icon\": \"CLOUD_DOWNLOAD\",         \n        \"id\": \"download\",       \n        \"fileId\": resultcard.csvFileId || null,           \n        \"type\": \"DOWNLOAD_FILE\"         \n             };\n    \n   \n    let confirmationButton = {\n        id: \"confirmation\",\n        display: \"Ignore errors\",\n        icon: \"CLOSE\",\n        type: \"POP_UP\",\n        popUp: {\n            type: \"SIMPLE\",\n            title: \"Are you sure you want to ignore the errors?\",\n            submitButton: \"Yes, go ahead\",\n            cancelButton: \"Dismiss\",\n            usecase: \"DANGER\",\n            description: \"Some of your data may not be synced with Pipedrive.\",\n            apiEndPoint: {\n                apiUrl: cloudElementsUrl+\"/pipedrive/validateIgnore\",\n                type: \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateIgnore.instance || null\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\"\n                }\n            }\n        }\n    };\n    card.buttons = [csvButton,confirmationButton];\n    cardJson.cards[0].card = card;\n\n} else {\n   cardJson= resultcard.cardResult;\n}\n\ncardJson.proceed = {\n        \"id\": \"proceed\",\n        \"display\": \"Proceed\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_SEND_INPUT\",\n            \"apiEndPoint\": {\n                \"apiUrl\": cloudElementsUrl+\"/pipedrive/initialSyncRun\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_InitialSyncRun.instance || null\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\",\n                    \"initialSync\": \"true\",\n                    \"action\" : \"default\",\n                    \"fromMapping\" : \"false\"\n                }\n            }\n        }\n    };\n    \ncardJson.retry = {\n        \"id\": \"retry\",\n        \"display\": \"Retry Data Validation\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_DEFAULT_ACTION\",\n            \"apiEndPoint\": {\n                \"apiUrl\": cloudElementsUrl+\"/pipedrive/validateSetup\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": validationSetupInstanceId\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\",\n                    \"retry\": \"true\"\n                }\n            }\n        }\n    }\n\ndone({\n  statusCode: 200,\n  result: cardJson\n})\n"}},{"id":215764,"onSuccess":["getTpConfig_2"],"onFailure":["sendProcessCard_2"],"name":"resultPublished","type":"filter","properties":{"body":"if((steps.getResult.response.code === 200) && ((steps.getResult.response.body.length === 0) || (steps.getResult.response.body === null))){\n  done(false);\n}\n\ndone(true);\n"}},{"id":215765,"onSuccess":[],"onFailure":[],"name":"sendErrorCard","type":"script","properties":{"body":"let cloudElementsUrl = steps.EnvProps.cloudElementsUrl;\n\nlet initialSyncRunInstance = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_InitialSyncRun.instance;\n\nlet validationSetupInstanceId = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateSetup.instance || null;\n\nlet card = {\n    \"cards\": [{\n        \"id\": \"check2\",\n        \"card\": {\n            \"type\": \"ACTION\",\n            \"heading\": \"Error\",\n            \"listContent\": [\n                \"Data Validation Failed\"\n            ],\n            \"icon\": \"WARNING\"\n          \n        }\n    }]\n}\n\n\ncard.proceed = {\n        \"id\": \"proceed\",\n        \"display\": \"Proceed\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_SEND_INPUT\",\n            \"apiEndPoint\": {\n                \"apiUrl\": cloudElementsUrl+\"/pipedrive/initialSyncRun\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": initialSyncRunInstance\n                }\n            }\n        }\n    };\n    \ncard.retry = {\n        \"id\": \"retry\",\n        \"display\": \"Retry Data Validation\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_DEFAULT_ACTION\",\n            \"apiEndPoint\": {\n                \"apiUrl\": cloudElementsUrl+\"/pipedrive/validateSetup\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": validationSetupInstanceId\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\",\n                    \"retry\": \"true\"\n                }\n            }\n        }\n    }\n\n\ndone({\n  statusCode: 200,\n  result: card\n})"}},{"id":215766,"onSuccess":["sendErrorCard"],"onFailure":["sendErrorCard"],"name":"sendErrorMail","type":"httpRequest","properties":{"method":"POST","query":"${steps.InputParams.sendErrorMailParams.query}","headers":"${steps.InputParams.sendErrorMailParams.headers}","url":"${steps.InputParams.sendErrorMailParams.url}"}},{"id":215767,"onSuccess":[],"onFailure":[],"name":"sendLastResult","type":"script","properties":{"body":"let cloudElementsUrl = steps.EnvProps.cloudElementsUrl;\n\nlet execution = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateSetup.execution_data;\n\nlet validationSetupInstanceId = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateSetup.instance || null;\n\n\n\nlet cardJson = {\n    cards: [{\n        id: \"check2\"\n    }]\n}\n\nif(execution.result.error === true) {\n  \n    let card = {\n          \"type\": \"ACTION\",\n          \"heading\": \"We found the following errors during data validation\",\n          \"listContent\": execution.result.message,\n          \"icon\": \"WARNING\",\n        };\n        \n   let csvButton = {      \n        \"display\": \"Download CSV\",       \n        \"icon\": \"CLOUD_DOWNLOAD\",         \n        \"id\": \"download\",       \n        \"fileId\": execution.result.csvFileId || null,           \n        \"type\": \"DOWNLOAD_FILE\"         \n    };\n    \n    let confirmationButton = {\n        id: \"confirmation\",\n        display: \"Ignore errors\",\n        icon: \"CLOSE\",\n        type: \"POP_UP\",\n        popUp: {\n            type: \"SIMPLE\",\n            title: \"Are you sure you want to ignore the errors?\",\n            submitButton: \"Yes, go ahead\",\n            cancelButton: \"Dismiss\",\n            usecase: \"DANGER\",\n            description: \"Some of your data may not be synced with Pipedrive.\",\n            apiEndPoint: {\n                apiUrl: cloudElementsUrl+\"/pipedrive/validateIgnore\",\n                type: \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateIgnore.instance || null\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\"\n                }\n            }\n        }\n    };\n    card.buttons = [csvButton,confirmationButton];\n    cardJson.cards[0].card = card;\n\n} else {\n   cardJson= {\n      \"cards\": [\n        {\n         \"id\" : \"check2\",\n         \"card\": {\n            \"type\" : \"ACTION\",\n            \"heading\" : \"No Error found  during data validation\",\n            \"icon\" : \"SUCCESS\"\n          },\n         \"isCardDone\":\"true\"\n        }\n      ]\n    };\n}\ncardJson.proceed =  {\n        \"id\": \"proceed\",\n        \"display\": \"Proceed\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_SEND_INPUT\",\n            \"apiEndPoint\": {\n                \"apiUrl\": cloudElementsUrl+\"/pipedrive/initialSyncRun\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_InitialSyncRun.instance || null\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\",\n                    \"initialSync\": \"true\",\n                    \"action\" : \"default\",\n                    \"fromMapping\" : \"false\"\n                }\n            }\n        }\n    };\n    cardJson.retry =  {\n        \"id\": \"retry\",\n        \"display\": \"Retry Data Validation\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_DEFAULT_ACTION\",\n            \"apiEndPoint\": {\n                \"apiUrl\": cloudElementsUrl+\"/pipedrive/validateSetup\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": validationSetupInstanceId\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\",\n                    \"retry\": \"true\"\n                }\n            }\n        }\n    };\n\ndone({\n  statusCode: 200,\n  result: cardJson\n});"}},{"id":215768,"onSuccess":[],"onFailure":[],"name":"sendProcessCard","type":"script","properties":{"body":"let cloudElementsUrl = steps.EnvProps.cloudElementsUrl;\n\nlet validationSetupInstanceId = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateSetup.instance || null;\n\nlet card = {\n    \"cards\": [{\n        \"id\": \"check2\",\n        \"card\": {\n            \"type\": \"PROCESSING\",\n            \"processingText\": \"Validating your Chargebee data\",\n            \"listHeading\": \"We'll verify if:\",\n            \"listContent\": [\n                \"Email address exists for all customers in Chargebee\",\n                \"Subscription exists for all customers in Chargebee\"\n            ],\n            \"request\": {\n                \"type\": \"DOC_READY_GET_CARD\",\n                \"apiEndPoint\": {\n                    \"apiUrl\": cloudElementsUrl+\"/pipedrive/validateSetup\",\n                    \"type\": \"GET\",\n                    \"headers\": {\n                        \"Elements-Formula-Instance-Id\": validationSetupInstanceId\n                    },\n                    \"input\": {\n                        \"integrationName\": \"pipedrive\"\n                    }\n                }\n            }\n        }\n    }],\n    \"proceed\": {\n        \"id\": \"proceed\",\n        \"display\": \"Proceed\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_SEND_INPUT\",\n            \"apiEndPoint\": {\n                \"apiUrl\": cloudElementsUrl+\"/pipedrive/initialSyncRun\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_InitialSyncRun.instance || null\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\",\n                    \"initialSync\": \"true\",\n                    \"action\" : \"default\",\n                    \"fromMapping\" : \"false\"\n                }\n            }\n        }\n    },\n    \"retry\": {\n        \"id\": \"retry\",\n        \"display\": \"Retry Data Validation\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_DEFAULT_ACTION\",\n            \"apiEndPoint\": {\n                \"apiUrl\": cloudElementsUrl+\"/pipedrive/validateSetup\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": validationSetupInstanceId\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\",\n                    \"retry\": \"true\"\n                }\n            }\n        }\n    }\n};\n\nif(steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.syncRulesContacts.chooseCustomersToSync === \"option1\"){\n  card.cards[0].card.listContent = [\"Email address exists for all customers in Chargebee\"];\n}\n\ndone({\n statusCode: 200,\n result: card\n})"}},{"id":215769,"onSuccess":[],"onFailure":[],"name":"sendProcessCard_2","type":"script","properties":{"body":"let cloudElementsUrl = steps.EnvProps.cloudElementsUrl;\n\nlet validationSetupInstanceId = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateSetup.instance || null;\n\nlet card = {\n    \"cards\": [{\n        \"id\": \"check2\",\n        \"card\": {\n            \"type\": \"PROCESSING\",\n            \"processingText\": \"Validating your Chargebee data\",\n            \"listHeading\": \"We'll verify if:\",\n            \"listContent\": [\n                \"Email address exists for all customers in Chargebee\",\n                \"Subscription exists for all customers in Chargebee\"\n            ],\n            \"request\": {\n                \"type\": \"DOC_READY_GET_CARD\",\n                \"apiEndPoint\": {\n                    \"apiUrl\": cloudElementsUrl+\"/pipedrive/validateSetup\",\n                    \"type\": \"GET\",\n                    \"headers\": {\n                        \"Elements-Formula-Instance-Id\": validationSetupInstanceId\n                    },\n                    \"input\": {\n                        \"integrationName\": \"pipedrive\",\n                        \"isResultPublished\": \"true\"\n                    }\n                }\n            }\n        }\n    }],\n    \"proceed\": {\n        \"id\": \"proceed\",\n        \"display\": \"Proceed\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_SEND_INPUT\",\n            \"apiEndPoint\": {\n                \"apiUrl\": cloudElementsUrl+\"/pipedrive/initialSyncRun\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_InitialSyncRun.instance || null\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\",\n                    \"initialSync\": \"true\",\n                    \"action\" : \"default\",\n                    \"fromMapping\" : \"false\"\n                }\n            }\n        }\n    },\n    \"retry\": {\n        \"id\": \"retry\",\n        \"display\": \"Retry Data Validation\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_DEFAULT_ACTION\",\n            \"apiEndPoint\": {\n                \"apiUrl\": cloudElementsUrl+\"/pipedrive/validateSetup\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": validationSetupInstanceId\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\",\n                    \"retry\": \"true\"\n                }\n            }\n        }\n    }\n};\n\nif(steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.syncRulesContacts.chooseCustomersToSync === \"option1\"){\n  card.cards[0].card.listContent = [\"Email address exists for all customers in Chargebee\"];\n}\n\ndone({\n statusCode: 200,\n result: card\n})"}},{"id":215770,"onSuccess":[],"onFailure":[],"name":"SkipValidation","type":"script","properties":{"body":"let cloudElementsUrl = steps.EnvProps.cloudElementsUrl;\n\nlet initialSyncRunInstance = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_InitialSyncRun.instance;\n\n\nlet card = {\n   \"cards\":[\n      {\n         \"id\" : \"check2\",\n         \"card\": {\n            \"type\" : \"ACTION\",\n            \"heading\" : \"No Errors Found During Validation\",\n            \"icon\" : \"SUCCESS\",\n         },\n         \"isCardDone\":\"true\",\n         \"showRetry\" : \"false\"\n      }\n   ],\n   \"proceed\" : {\n        \"id\": \"proceed\",\n        \"display\": \"Proceed\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_SEND_INPUT\",\n            \"apiEndPoint\": {\n                \"apiUrl\": cloudElementsUrl+\"/pipedrive/initialSyncRun\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": initialSyncRunInstance\n                },\n                \"input\": {\n                    \"integrationName\": \"pipedrive\",\n                    \"initialSync\": \"true\",\n                    \"action\" : \"default\",\n                    \"fromMapping\" : \"false\"\n                }\n            }\n        }\n    },\n   \"retry\": {\n    \"buttonLook\": \"FILLED\",\n    \"display\": \"Retry Data Validation\",\n    \"icon\": \"ARROW\",\n    \"id\": \"retry\",\n    \"request\": {\n      \"apiEndPoint\": {\n        \"apiUrl\": cloudElementsUrl+\"/pipedrive/validateSetup\",\n        \"headers\": {\n          \"Elements-Formula-Instance-Id\": info.formulaInstanceId\n        },\n        \"input\": {\n          \"retry\": \"true\",\n          \"integrationName\": \"pipedrive\"\n        },\n        \"type\": \"GET\"\n      },\n      \"type\": \"ON_CLICK_DEFAULT_ACTION\"\n    },\n    \"type\": \"DIRECT_LINK\"\n  }\n};\ndone({\n  statusCode: 200,\n  result: card\n});"}},{"id":215771,"onSuccess":["updateTpConfigPayload_1"],"onFailure":[],"name":"triggerExecution","type":"request","properties":{"method":"POST","body":"${steps.triggerExecutionParams.triggerExecutionConfig.body}","api":"${steps.triggerExecutionParams.triggerExecutionConfig.url}"}},{"id":215772,"onSuccess":["triggerExecution"],"onFailure":[],"name":"triggerExecutionParams","type":"script","properties":{"body":"let validateInstanceId = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateResult.instance || null;\n\nlet syncRuleCustomer = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.syncRulesContacts.chooseCustomersToSync;\n\nlet mappedField = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.syncRulesContacts.mappedField || \"email\";\n\nlet triggerExecutionConfig = {\n  url: \"/formulas/instances/\"+validateInstanceId+\"/executions\",\n  body: {\n    apiKey: steps.InputParams.params.input.apiKey,\n    siteName: steps.InputParams.params.input.siteName,\n    siteDomain: steps.InputParams.params.input.siteDomain,\n    integrationName: steps.InputParams.params.input.integrationName,\n    syncRuleCustomer: syncRuleCustomer,\n    mappedField: mappedField,\n    chargebeeElementInstanceId: steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.chargebee.instance\n  }\n};\n\ndone({\n  triggerExecutionConfig: triggerExecutionConfig\n});\n\n"}},{"id":215773,"onSuccess":["updateTpConfig_3"],"onFailure":[],"name":"updateExecutionData_TpConfig","type":"script","properties":{"body":"let resultcard = JSON.parse(steps.getResult.response.body[0].value);\nlet input = steps.CheckStatus;\nlet configJson = input.body.config_json;\nlet validationLogLink = steps.getTpConfig_2.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_ValidateSetup.execution_data.validationlog;\nconsole.log(resultcard);\nif (resultcard.cardStatus === \"VALIDATION-FAILED\") {\n  // configJson.cloudElements.formulas.formula_ValidateSetup.execution_data.result = {\n  //   error:true,\n  //   message: resultcard.cardResult.card.listContent\n  // };\n  //let csv = resultcard.cardResult.csv;listContent\n   let csv = resultcard.cardResult.card.listContent;\n  // csv.splice(0,1);\n  configJson.cloudElements.formulas.formula_ValidateResult.execution_data = {\n    error:true,\n    message: csv\n  };\n  configJson.cloudElements.formulas.formula_ValidateResult.execution_data.csvFileId = resultcard.csvFileId || null;\n}else {\n  configJson.cloudElements.formulas.formula_ValidateSetup.execution_data.result = {\n    error:false,\n    message: ['No Error found  during data validation']\n  };\n}\n\nconfigJson.cloudElements.formulas.formula_ValidateSetup.execution_data.validationlog = validationLogLink;\ninput.body.config_json = configJson;\n\ndone(input);"}},{"id":215774,"onSuccess":["sendProcessCard"],"onFailure":["sendErrorMail"],"name":"updateTpConfig_1","type":"httpRequest","properties":{"method":"POST","query":"","retryAttempts":"5","body":"${steps.updateTpConfigPayload_1.updateTpConfigParams.body}","headers":"${steps.updateTpConfigPayload_1.updateTpConfigParams.headers}","retryDelay":"200","url":"${steps.updateTpConfigPayload_1.updateTpConfigParams.url}","retry":"true"}},{"id":215775,"onSuccess":["sendErrorMail"],"onFailure":["sendErrorMail"],"name":"updateTpConfig_2","type":"httpRequest","properties":{"method":"POST","body":"${steps.CheckStatus.body}","headers":"${steps.CheckStatus.headers}","url":"${steps.CheckStatus.url}"}},{"id":215776,"onSuccess":["MakeCard"],"onFailure":["sendErrorMail"],"name":"updateTpConfig_3","type":"httpRequest","properties":{"method":"POST","retryAttempts":"5","body":"${steps.updateExecutionData_TpConfig.body}","headers":"${steps.updateExecutionData_TpConfig.headers}","retryDelay":"200","url":"${steps.updateExecutionData_TpConfig.url}","retry":"true"}},{"id":215777,"onSuccess":["updateTpConfig_1"],"onFailure":[],"name":"updateTpConfigPayload_1","type":"script","properties":{"body":"let configJson = steps.getTpConfig.response.body.third_party_configuration.config_json;\n\nconfigJson.cloudElements.formulas.formula_ValidateSetup.execution_data = {\n    execution_status:\"STARTED\",\n    execution_id:steps.triggerExecution.response.body[0].id\n};\n\nconfigJson.cloudElements.formulas.formula_ValidateResult.execution_data = null;\n//Clearing CSV Related Information as part of previous sync\n\nlet updateTpConfigParams = steps.InputParams.updateTpConfigParams;\nupdateTpConfigParams.body.config_json = configJson;\n\ndone({\n  updateTpConfigParams: updateTpConfigParams\n});\n"}}],"triggers":[{"id":26037,"onSuccess":["EnvProps"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"method":"GET","uri":"/pipedrive/validateSetup","engine":"v1","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"api":"GET /pipedrive/validateSetup","configuration":[]}