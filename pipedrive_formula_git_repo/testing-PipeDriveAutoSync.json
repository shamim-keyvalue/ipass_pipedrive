{"id":29991,"name":"testing-PipeDriveAutoSync","description":"Formula to perform Auto Sync for pipdedrive","userId":27893,"accountId":24428,"createdDate":"2019-09-20T05:55:41Z","steps":[{"id":224193,"onSuccess":["IsSyncSuccess"],"onFailure":[],"name":"checkFormulaFailedOrSucceeded","type":"script","properties":{"body":"let error_flag = true;\nlet stepInfo = null;\n\nif(steps.getExecutionStatus.response.body.status === \"success\"){\n  error_flag = false;\n}\n\nif(steps.getExecutionStatus.response.body.stepExecutions.length > 0){\n  \n  for(var i=0; i<steps.getExecutionStatus.response.body.stepExecutions.length; i++){\n    if(steps.getExecutionStatus.response.body.stepExecutions[i][\"stepName\"] === \"Success\") {\n      stepInfo = steps.getExecutionStatus.response.body.stepExecutions[i];\n      break;\n    }\n  }\n}\n\n\ndone({\n  flag: error_flag,\n  stepInfo: stepInfo\n});"}},{"id":224194,"onSuccess":["IsSyncSuccess"],"onFailure":["Success_syncPending"],"name":"checkStatus","type":"filter","properties":{"body":"if(steps.getExecutionStatus.response.body.status === \"pending\"){\n  done(false);\n}else{\n  done(true);\n}"}},{"id":224195,"onSuccess":["isSyncStarted"],"onFailure":["sendErrorMail"],"name":"createNewSyncDetails","type":"httpRequest","properties":{"retry":"true","url":"${steps.createNewSyncDetails_params.newSyncDetailsParams.url}","method":"POST","query":"${steps.createNewSyncDetails_params.newSyncDetailsParams.query}","retryAttempts":"5","headers":"${steps.createNewSyncDetails_params.newSyncDetailsParams.headers}","retryDelay":"200"}},{"id":224196,"onSuccess":["createNewSyncDetails"],"onFailure":[],"name":"createNewSyncDetails_params","type":"script","properties":{"body":"let apiKey = steps.InputParams.params.input.apiKey;\n\nlet newSyncDetailsParams = {\n  url: \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details\",\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + \"\")\n  },\n  query : {\n  'third_party_configuration[integration_name]': steps.InputParams.params.input.type,\n  \"context\": {\n      \"excecutionId\": steps.startExecution.response.body[0].id,\n      \"instance\": steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formula.sync.instance || \"undefined\",\n      \"formula\": steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formula.sync.id || \"undefined\",\n      \"initialSync\":false,\n      \"autoSync\": true,\n      \"syncData\":{\n        \"syncStart\" : Math.round((new Date().getTime())/1000)\n      }\n    }\n  }\n};\n\ndone({\n  newSyncDetailsParams: newSyncDetailsParams\n});"}},{"id":224197,"onSuccess":[],"onFailure":["RunningSync"],"name":"ExecutionNotRunniing","type":"filter","properties":{"body":"\nlet ExecutionStatus = steps.getStatus.response.body.status;\nlet executionId = steps.InputParams.params.input.executionId;\n\nif((ExecutionStatus === \"pending\" && executionId !== null) || ExecutionStatus === \"success\" ){\n  done(true);\n}\ndone(false);"}},{"id":224198,"onSuccess":["ExecutionNotRunniing"],"onFailure":[],"name":"ExecutionNotSuccess","type":"filter","properties":{"body":"\nlet ExecutionStatus = steps.getStatus.response.body.status;\n\nif( ExecutionStatus === \"success\"){\n  done(false);\n}\ndone(true);"}},{"id":224199,"onSuccess":["getStatus"],"onFailure":[],"name":"ExecutionParams","type":"script","properties":{"body":"let execution_id = steps.LastSyncDetails.response.body.third_party_sync_detail.context.excecutionId;\n\nlet payload = {\n  url: \"/formulas/instances/executions/\" + execution_id\n};\n\ndone({\n  payload: payload,\n  execution_id: execution_id\n});\n\n"}},{"id":224200,"onSuccess":["HasExecutions"],"onFailure":[],"name":"ExecutionStatus","type":"request","properties":{"method":"GET","api":"${steps.ExecutionParams.payload.url}"}},{"id":224201,"onSuccess":[],"onFailure":[],"name":"failedSyncParams","type":"script","properties":{"body":"let payload = {\n  error : true,\n  done: false,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.createNewSyncDetails.response.body.third_party_sync_detail.id,\n  auth: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  body: steps.createNewSyncDetails.response.body.third_party_sync_detail,\n};\n\npayload.body.context.syncData.syncEnd = Math.round((new Date().getTime())/1000);\npayload.body.status = \"failed\";\n\ndone({\n  payload: payload\n});"}},{"id":224202,"onSuccess":["UpdateFailedSync"],"onFailure":[],"name":"FailedSyncParams","type":"script","properties":{"body":"let payload = {\n  error : true,\n  done: true,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.LastSyncDetails.response.body.third_party_sync_detail.id,\n  auth: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  body: steps.LastSyncDetails.response.body.third_party_sync_detail,\n};\n\npayload.body.status = \"failed\";\n\ndone({\n  payload: payload\n});\n\n"}},{"id":224243,"onSuccess":[],"onFailure":[],"name":"Failed_syncStart","type":"script","properties":{"body":"let message = \"Error on triggering Auto Sync. Platform API request failed.\";\n\ndone({\n  statusCode: 400,\n  result: {\n    status: \"failed\",\n    message : message\n  }\n});"}},{"id":224203,"onSuccess":[],"onFailure":[],"name":"FailedToFetch","type":"script","properties":{"body":"\nlet message = \"Sync Formula Succeeded but Failed to Fetch the Details\";\n\ndone({\n  statusCode: 200,\n  result: {\n    status : \"Success\",\n    message : message\n  }\n});"}},{"id":224204,"onSuccess":["checkStatus"],"onFailure":["sendErrorMail"],"name":"getExecutionStatus","type":"request","properties":{"method":"GET","api":"${steps.getExecutionStatus_params.payload.url}"}},{"id":224205,"onSuccess":["getExecutionStatus"],"onFailure":[],"name":"getExecutionStatus_params","type":"script","properties":{"body":"let execution_id = steps.InputParams.params.input.executionId  || null;\n\nlet payload = {\n  url: \"/formulas/instances/executions/\" + execution_id\n};\n\ndone({\n  payload: payload\n});\n\n"}},{"id":224206,"onSuccess":["IsStatusFailed"],"onFailure":[],"name":"getStatus","type":"request","properties":{"method":"GET","api":"${steps.ExecutionParams.payload.url}"}},{"id":224207,"onSuccess":["Success_syncFinished"],"onFailure":[],"name":"getStepData","type":"request","properties":{"api":"${steps.getStepData_params.payload.url}","method":"GET","retry":"true","retryAttempts":"5","retryDelay":"200"}},{"id":224208,"onSuccess":["Success_syncFinished"],"onFailure":[],"name":"getStepData_params","type":"script","properties":{"body":"let stepId = steps.checkFormulaFailedOrSucceeded.stepInfo.id || null;\n\n\nlet payload = {\n  url : \"/formulas/instances/executions/steps/\"+ stepId +\"/values\"\n}\n\n\ndone({\n  payload: payload\n});"}},{"id":224209,"onSuccess":["LastSyncDetails"],"onFailure":["sendErrorMail"],"name":"getTpConfig","type":"httpRequest","properties":{"retry":"true","url":"${steps.InputParams.getTpConfigParams.url}","method":"GET","query":"${steps.InputParams.getTpConfigParams.query}","retryAttempts":"5","headers":"${steps.InputParams.getTpConfigParams.auth}","retryDelay":"200"}},{"id":224210,"onSuccess":["getExecutionStatus_params"],"onFailure":["startExecutionParams"],"name":"HasExecutions","type":"filter","properties":{"body":"if(steps.InputParams.params.input.executionId === null){ //Trigger a New Sync\n  done(false);\n}\n\ndone(true); //Check Status of Latest Sync"}},{"id":224211,"onSuccess":["HasExecutions"],"onFailure":["ExecutionParams"],"name":"HasNoExecution","type":"filter","properties":{"body":"let syncStatus = steps.LastSyncDetails.response.body.third_party_sync_detail.status;\n\nif( syncStatus === \"running\" ){\n  done(false);\n}\ndone(true);"}},{"id":224212,"onSuccess":["getTpConfig"],"onFailure":["sendErrorMail"],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args.request.query['cb-api-key'] || null;\nlet siteName = trigger.args.request.query['cb-site-name'] || null;\nlet type = trigger.args.request.query['type'] || trigger.args.request.query['integrationName'] || null;\nlet siteDomain = trigger.args.request.query['cb-domain'] || null;\nlet executionId =  trigger.args.request.query['execution_id'] || null;\n\nif((apiKey === null) || (siteName === null) || (type === null) || (siteDomain === null)){\n  done(false);\n}\n\nlet password = \"\";\n\n\nlet params = {\n  input:{\n    apiKey: apiKey,\n    siteName: siteName,\n    siteDomain:siteDomain,\n    type: type,\n    executionId: executionId\n  }\n};\n\nlet getTpConfigParams = {\n    url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n    auth:{\n      Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n    },\n    query:{\n      integration_name: type\n    }\n};\n\nlet updateTpConfigParams = {\n  url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body: {\n     site_name: siteName,\n     api_key: apiKey,\n     integration_name: type\n     //append config_json with this during request\n  }\n};\n\n//let errorEmailAddress = \"integrations-growth-internal@chargebee.com\";\nlet errorEmailAddress = \"test@gmail.com\";\n\nlet sendErrorMailParams = {\n  url: 'https://' + siteName + '.' + siteDomain + '/adhoc_checkout_email/api/send',\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + \"\")\n  },\n  query :{\n    content : \"Integration Error, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n    subject : \"Error occurred during \" + type + \" Auto Sync\",\n    to_address : errorEmailAddress,\n    api_key : apiKey\n  }\n};\n\nlet retrieveLatestSyncConfig = {\n  url:\"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_sync_details/retrieve_latest_sync\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    'third_party_configuration[integration_name]': type\n  },\n};\n\n\ndone({\n  params: params,\n  retrieveLatestSyncConfig: retrieveLatestSyncConfig,\n  getTpConfigParams: getTpConfigParams,\n  updateTpConfigParams: updateTpConfigParams,\n  sendErrorMailParams: sendErrorMailParams\n});"}},{"id":224426,"onSuccess":["RunningSync"],"onFailure":["HasExecutions"],"name":"IsExecutionIdPresent","type":"filter","properties":{"body":"done(steps.InputParams.params.input.executionId === null);"}},{"id":224213,"onSuccess":["FailedSyncParams"],"onFailure":["IsExecutionIdPresent"],"name":"IsStatusFailed","type":"filter","properties":{"body":"done(steps.getStatus.response.body.status === \"failed\");\n"}},{"id":224214,"onSuccess":["Success_syncStart"],"onFailure":["Failed_syncStart"],"name":"isSyncStarted","type":"filter","properties":{"body":"if(steps.startExecution.response.code !== 200){\n  done(false);\n}\n\ndone(true);"}},{"id":224215,"onSuccess":["Success_syncFinished"],"onFailure":["SyncFailed"],"name":"IsSyncSuccess","type":"filter","properties":{"body":"done(steps.getExecutionStatus.response.body.status === \"success\");"}},{"id":224216,"onSuccess":["HasNoExecution"],"onFailure":["sendErrorMail"],"name":"LastSyncDetails","type":"httpRequest","properties":{"retry":"true","url":"${steps.InputParams.retrieveLatestSyncConfig.url}","method":"GET","query":"${steps.InputParams.retrieveLatestSyncConfig.query}","retryAttempts":"5","headers":"${steps.InputParams.retrieveLatestSyncConfig.auth}","retryDelay":"200"}},{"id":224217,"onSuccess":["Success_syncFinished"],"onFailure":[],"name":"retrieveSyncDetails","type":"httpRequest","properties":{"retry":"true","url":"${steps.retrieveSyncDetails_params.payload.url}","method":"GET","query":"${steps.retrieveSyncDetails_params.payload.query}","retryAttempts":"5","headers":"${steps.retrieveSyncDetails_params.payload.auth}","retryDelay":"200"}},{"id":224218,"onSuccess":[],"onFailure":[],"name":"retrieveSyncDetails_params","type":"script","properties":{"body":"let tp_sync_details_id = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.autoSync.tp_sync_details_id || null;\n\nlet payload = {\n  url: \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\"+tp_sync_details_id,\n  auth:{\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + steps.InputParams.params.input.password)\n  },\n  query:{\n    'third_party_configuration[integration_name]': steps.InputParams.params.input.type\n  }\n};\n\n\ndone({\n  payload: payload\n});"}},{"id":224219,"onSuccess":[],"onFailure":[],"name":"RunningSync","type":"script","properties":{"body":"let execution_id = steps.LastSyncDetails.response.body.third_party_sync_detail.context.excecutionId;\n\nlet result =  {\n  message: \"Can not create new sync as a sync is already running.\" ,\n  execution_id: String(execution_id)\n};\n\ndone({\n  status: 200,\n  result: {result}\n});"}},{"id":224220,"onSuccess":["Success_syncStart"],"onFailure":[],"name":"runningSyncParams","type":"script","properties":{"body":"let body = steps.createNewSyncDetails.response.body.third_party_sync_detail;\nlet syncStatus = steps.LastSyncDetails.response.body.third_party_sync_detail;\n\nif(syncStatus.context.syncData !== undefined){\nif(syncStatus.status === \"failed\"){\n  body.context.syncData.previousSyncStart = syncStatus.context.syncData.previousSyncStart;\n  body.context.syncData.previousSyncEnd = syncStatus.context.syncData.previousSyncEnd;\n}\nelse{\n  body.context.syncData.previousSyncEnd = syncStatus.context.syncData.syncEnd || undefined;\n  body.context.syncData.previousSyncStart = syncStatus.context.syncData.syncStart || undefined;\n}\n}\n\nlet payload = {\n  error : false,\n  done: false,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.createNewSyncDetails.response.body.third_party_sync_detail.id,\n  auth: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  body: body,\n};\n\npayload.body.status = \"running\";\n\ndone({\n  payload: payload\n});"}},{"id":224221,"onSuccess":[],"onFailure":[],"name":"sendErrorCard","type":"script","properties":{"body":"let message = \"Auto Sync Trigger Failed. Invalid Parameters Specified.\";\n\nif((steps.getExecutionStatus !== undefined) && (steps.getExecutionStatus.response.code !== 200)){\n  message = \"Error : Failed to fetch execution status.\";\n}\n\nif((steps.retrieveSyncDetails !== undefined) && (steps.retrieveSyncDetails.response.code !== 200)){\n  message = \"Error : Failed to Retrieve Third Party Sync Details .\";\n}\n\nif((steps.updateSyncStatus !== undefined) && (steps.updateSyncStatus.response.code !== 200)){\n  message = \"Error : Failed to Update Third Party Sync Details .\";\n}\n\nif((steps.updateSyncStatus_Running !== undefined) && (steps.updateSyncStatus_Running.response.code !== 200)){\n  message = \"Error : Failed to Update Third Party Sync Details .\";\n}\n\nif((steps.updateSyncStatus_Failed !== undefined) && (steps.updateSyncStatus_Failed.response.code !== 200)){\n  message = \"Error : Failed to Update Third Party Sync Details .\";\n}\n\n\n\ndone({\n  statusCode: 400,\n  result: message\n});"}},{"id":224222,"onSuccess":["sendErrorCard"],"onFailure":["sendErrorCard"],"name":"sendErrorMail","type":"httpRequest","properties":{"retry":"true","url":"${steps.InputParams.sendErrorMailParams.url}","method":"POST","query":"${steps.InputParams.sendErrorMailParams.query}","retryAttempts":"5","headers":"${steps.InputParams.sendErrorMailParams.headers}","retryDelay":"200"}},{"id":224223,"onSuccess":["isSyncStarted"],"onFailure":[],"name":"startExecution","type":"request","properties":{"retry":"true","method":"POST","api":"${steps.startExecutionParams.syncFormula_trigger.url}","retryAttempts":"5","body":"${steps.startExecutionParams.syncFormula_trigger.body}","retryDelay":"200"}},{"id":224224,"onSuccess":["startExecution"],"onFailure":[],"name":"startExecutionParams","type":"script","properties":{"body":"let syncFormula_instance = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_SyncDispatcher.instance;\n\n\nlet syncFormula_trigger = {\n  url: \"/formulas/instances/\"+syncFormula_instance+\"/executions\",\n  body:{\n    apiKey: steps.InputParams.params.input.apiKey,\n    siteName: steps.InputParams.params.input.siteName,\n    siteDomain: steps.InputParams.params.input.siteDomain,\n    integrationName: steps.InputParams.params.input.type,\n    initialSync: false,\n    autoSync : true\n  }\n};\n\ndone({\n  syncFormula_trigger: syncFormula_trigger\n});\n\n"}},{"id":224225,"onSuccess":[],"onFailure":[],"name":"Success_syncFinished","type":"script","properties":{"body":"done({\n  statusCode: 200,\n  result: {\n    status : \"succeeded\",\n    message : {}\n  }\n});"}},{"id":224226,"onSuccess":[],"onFailure":[],"name":"Success_syncPending","type":"script","properties":{"body":"  let execution_id = steps.LastSyncDetails.response.body.third_party_sync_detail.context.excecutionId;\ndone({\n  statusCode: 200,\n  result:{\n    status: \"pending\",\n  execution_id: String(execution_id),\n    message: \"Execution Pending.\"\n  }\n});"}},{"id":224227,"onSuccess":[],"onFailure":[],"name":"Success_syncStart","type":"script","properties":{"body":"let result = {\n    status: \"started\",\n    execution_id : String(steps.startExecution.response.body[0].id) || null\n  };\n  \n// if(steps.updateTpConfig2.response.code !== 200){\n//   result.message = \"Error: Third Party configuration update failed.\";\n// }\n  \ndone({\n  status: 200,\n  result: result\n});"}},{"id":224228,"onSuccess":[],"onFailure":[],"name":"Success_syncStartFailed","type":"script","properties":{"body":"let message = \"Error on triggering Auto Sync. Platform API request failed.\";\n\nif(steps.updateTpConfig3.response.code !== 200){\n  message = message + \" \\nThird Party configuration update failed.\";\n}\n\n\ndone({\n  statusCode: 400,\n  result: {\n    status: \"failed\",\n    message : message\n  }\n});"}},{"id":224229,"onSuccess":[],"onFailure":[],"name":"SyncFailed","type":"script","properties":{"body":"\nlet message = \"Sync Formula Failed\";\n\ndone({\n  statusCode: 200,\n  result: {\n    status : \"Failed\",\n    message : message\n  }\n});"}},{"id":224230,"onSuccess":["HasExecutions"],"onFailure":[],"name":"UpdateFailedSync","type":"httpRequest","properties":{"url":"${steps.FailedSyncParams.payload.url}","method":"POST","query":"${steps.FailedSyncParams.payload.body}","retryAttempts":"5","headers":"${steps.FailedSyncParams.payload.auth}","retryDelay":"200"}},{"id":224231,"onSuccess":[],"onFailure":[],"name":"UpdateSuccess","type":"httpRequest","properties":{"url":"${steps.UpdateSuccessParam.payload.url}","method":"POST","query":"${steps.UpdateSuccessParam.payload.body}","retryAttempts":"5","headers":"${steps.UpdateSuccessParam.payload.auth}","retryDelay":"200"}},{"id":224232,"onSuccess":[],"onFailure":[],"name":"UpdateSuccessParam","type":"script","properties":{"body":"let errorRecord = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formula.sync.totalFailedRecords || 0;\nlet successRecord = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formula.sync.totalRecordsSynced || 0;\nlet lastSyncTime = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.lastSyncTime;\n\nlet payload = {\n  error : false,\n  done: true,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.LastSyncDetails.response.body.third_party_sync_detail.id,\n  auth: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  body: steps.LastSyncDetails.response.body.third_party_sync_detail,\n};\n\n payload.body.context.syncData.syncEnd = lastSyncTime;\n payload.body.status = \"succeeded\";\n payload.body.context.syncData.total = successRecord + errorRecord;\n payload.body.context.syncData.success = successRecord;\n payload.body.context.syncData.failed = errorRecord;\n \n payload.body.context = JSON.stringify(payload.body.context);\n\ndone({\n  payload: payload\n});\n\n\n \n"}},{"id":224233,"onSuccess":["Success_syncFinished"],"onFailure":[],"name":"updateSyncParams","type":"script","properties":{"body":"let tp_sync_details_id = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.autoSync.tp_sync_details_id || null;\n\n\nlet payload = {\n  error : false,\n  done: true,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +tp_sync_details_id,\n  auth: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  body: steps.retrieveSyncDetails.response.body.third_party_sync_detail,\n};\n\npayload.body.context.syncData.syncEnd = Math.round((new Date().getTime())/1000);\npayload.body.status = \"succeeded\";\n// payload.body.context.syncData.total = total;\n// payload.body.context.syncData.success = successRecord;\n// payload.body.context.syncData.failed = errorRecord;\npayload.body.context.syncData.syncEnd = Math.round((new Date().getTime())/1000);\n\nif(steps.checkFormulaFailedOrSucceeded.flag === true){\n  payload.body.status = \"failed\";\n  payload.error = true;\n}\n\ndone({\n  payload: payload\n});"}},{"id":224234,"onSuccess":["updateTpConfig1_params"],"onFailure":[],"name":"updateSyncStatus","type":"httpRequest","properties":{"retry":"true","url":"${steps.updateSyncParams.payload.url}","method":"POST","query":"${steps.updateSyncParams.payload.body}","retryAttempts":"5","headers":"${steps.updateSyncParams.payload.auth}","retryDelay":"200"}},{"id":224235,"onSuccess":[],"onFailure":[],"name":"updateSyncStatus_Failed","type":"httpRequest","properties":{"retry":"true","url":"${steps.failedSyncParams.payload.url}","method":"POST","query":"${steps.failedSyncParams.payload.body}","retryAttempts":"5","headers":"${steps.failedSyncParams.payload.auth}","retryDelay":"200"}},{"id":224236,"onSuccess":["Success_syncStart"],"onFailure":["sendErrorMail"],"name":"updateSyncStatus_Running","type":"httpRequest","properties":{"retry":"true","url":"${steps.runningSyncParams.payload.url}","method":"POST","query":"${steps.runningSyncParams.payload.body}","retryAttempts":"5","headers":"${steps.runningSyncParams.payload.auth}","retryDelay":"200"}},{"id":224237,"onSuccess":["Success_syncFinished"],"onFailure":["Success_syncFinished"],"name":"updateTpConfig1","type":"httpRequest","properties":{"retry":"true","url":"${steps.updateTpConfig1_params.payload.url}","method":"POST","query":"","retryAttempts":"5","body":"${steps.updateTpConfig1_params.payload.body}","headers":"${steps.updateTpConfig1_params.payload.headers}","retryDelay":"200"}},{"id":224238,"onSuccess":["Success_syncFinished"],"onFailure":[],"name":"updateTpConfig1_params","type":"script","properties":{"body":"let configJson = steps.getTpConfig.response.body.third_party_configuration;\n\nconfigJson.config_json.cloudElements.lastSyncTime = Math.round((new Date().getTime())/1000);\n\nconfigJson.config_json.cloudElements.autoSync.status = \"succeeded\";\nconfigJson.config_json.cloudElements.autoSync.finish_time = Math.round((new Date().getTime())/1000);\nconfigJson.config_json.cloudElements.autoSync.result = (steps.getStepData.response.code === 200) ? steps.getStepData.response.body || \"Sync Succeeded. But Failed to Fetch Result\" :  steps.getStepData.response.body || \"Sync Formula Failed\";\n\n\nif(steps.checkFormulaFailedOrSucceeded.flag === true){\n  configJson.config_json.cloudElements.autoSync.status = \"failed\";\n  configJson.config_json.cloudElements.autoSync.result = \"Error: Sync Formula Failed\"\n}\n\n\nlet payload = steps.InputParams.updateTpConfigParams;\n\npayload.body.config_json = configJson.config_json;\n\ndone({\n  payload: payload\n});\n\n\n"}},{"id":224239,"onSuccess":["Success_syncStart"],"onFailure":["Success_syncStart"],"name":"updateTpConfig2","type":"httpRequest","properties":{"retry":"true","url":"${steps.updateTpConfig2_params.payload.url}","method":"POST","query":"","retryAttempts":"5","body":"${steps.updateTpConfig2_params.payload.body}","headers":"${steps.updateTpConfig2_params.payload.headers}","retryDelay":"200"}},{"id":224240,"onSuccess":["Success_syncStart"],"onFailure":[],"name":"updateTpConfig2_params","type":"script","properties":{"body":"let configJson = steps.getTpConfig.response.body.third_party_configuration;\n\nconfigJson.config_json.cloudElements.autoSync = {\n  status : \"running\",\n  start_time : Math.round((new Date().getTime())/1000),\n  execution_id : steps.startExecution.response.body[0].id || null,\n  tp_sync_details_id : steps.createNewSyncDetails.response.body.third_party_sync_detail.id || null,\n};\n\nlet payload = steps.InputParams.updateTpConfigParams;\n\npayload.body.config_json = configJson.config_json;\n\ndone({\n  payload: payload\n});\n\n\n"}},{"id":224241,"onSuccess":[],"onFailure":["Success_syncStartFailed"],"name":"updateTpConfig3","type":"httpRequest","properties":{"retry":"true","url":"${steps.updateTpConfig3_params.payload.url}","method":"POST","retryAttempts":"5","body":"${steps.updateTpConfig3_params.payload.body}","headers":"${steps.updateTpConfig3_params.payload.headers}","retryDelay":"200"}},{"id":224242,"onSuccess":[],"onFailure":[],"name":"updateTpConfig3_params","type":"script","properties":{"body":"let configJson = steps.getTpConfig.response.body.third_party_configuration;\n\nconfigJson.config_json.cloudElements.autoSync = {\n  status : \"failed\",\n  start_time : Math.round((new Date().getTime())/1000),\n};\n\nlet payload = steps.InputParams.updateTpConfigParams;\n\npayload.body.config_json = configJson.config_json;\n\ndone({\n  payload: payload\n});"}}],"triggers":[{"id":26522,"onSuccess":["InputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"method":"GET","uri":"/autoSync","engine":"v1","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"api":"GET /autoSync","configuration":[]}