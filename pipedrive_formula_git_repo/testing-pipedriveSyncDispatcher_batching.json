{"id":30756,"name":"testing-pipedriveSyncDispatcher_batching","userId":27893,"accountId":24428,"createdDate":"2019-10-17T06:28:37Z","steps":[{"id":236474,"onSuccess":["isInitialSyncOrDeltaSync"],"onFailure":["triggerSyncCustomersParams"],"name":"batchCustomersDone","type":"filter","properties":{"body":"if(steps.InputParams.params.input.initialSync === true){\n  done(false); //No Batching on Initial Sync\n}\n\nlet tpConfig = (steps.ConfigParams.tpConfig.third_party_configuration !== undefined) ? steps.ConfigParams.tpConfig.third_party_configuration.config_json : null;\n\nif((tpConfig.batch.sync_customer.change_subscription === null) && (tpConfig.batch.sync_customer.get_customer === null) && (tpConfig.batch.sync_customer.get_error === null)){\n  done(true); //Nothing remaining to batch, Batching Completed\n}else{\n  done(false); //Batch remaining, trigger next execution of the batch\n}"}},{"id":236476,"onSuccess":["isBatchExecutionPending"],"onFailure":["triggerSyncInvoiceParams"],"name":"batchInvoiceDone","type":"filter","properties":{"body":"let tpConfig = (steps.ConfigParams.tpConfig.third_party_configuration !== undefined) ? steps.ConfigParams.tpConfig.third_party_configuration.config_json : null;\n\nif((tpConfig.batch.sync_invoice.change_invoice === null) && (tpConfig.batch.sync_invoice.get_error === null)){\n  done(true); //Nothing remaining to batch, Batching Completed\n}else{\n  done(false); //Batch remaining, trigger next execution of the batch\n}"}},{"id":236475,"onSuccess":["syncRulesForInvoice"],"onFailure":["triggerSyncSubscriptionParams"],"name":"batchSubscriptionDone","type":"filter","properties":{"body":"let tpConfig = (steps.ConfigParams.tpConfig.third_party_configuration !== undefined) ? steps.ConfigParams.tpConfig.third_party_configuration.config_json : null;\n\nif((tpConfig.batch.sync_subscription.change_subscription === null) && (tpConfig.batch.sync_subscription.get_error === null)){\n  done(true); //Nothing remaining to batch, Batching Completed\n}else{\n  done(false); //Batch remaining, trigger next execution of the batch\n}"}},{"id":236297,"onSuccess":["isInstanceExist"],"onFailure":[],"name":"checkInstanceExist","type":"script","properties":{"body":"let instances=steps.getInstances.response.body;\nlet siteName=steps.InputParams.params.input.siteName;\nlet bodyParam=steps.formulaInformation;\n\nlet flag = false;\nlet instanceInfo = '';\nlet formulaName;\nlet formulaNames = [\"formula_SyncCustomers\",\n  \"formula_SyncSubscription\",\n  \"formula_SyncInvoice\"\n  ];\n  \nlet existingInstanceIds = {};\n\nif(steps.setInstanceInfo.instanceList.length !== 0){\n  existingInstanceIds = steps.setInstanceInfo.instanceList;\n}\n\nlet instanceNames=[bodyParam.formula_SyncCustomers.name,\n  bodyParam.formula_SyncSubscription.name,\n  bodyParam.formula_SyncInvoice.name,\n];\n\nlet param=[bodyParam.formula_SyncCustomers,\n  bodyParam.formula_SyncSubscription,\n  bodyParam.formula_SyncInvoice\n];\n\n\nfor(var i=0;i<instances.length;i++){\n  if(instances[i].name === instanceNames[steps.loopOverFormulaList.index]){\n    flag = true;\n    instanceInfo =  instances[i];\n    formulaName = formulaNames[steps.loopOverFormulaList.index];\n    existingInstanceIds[formulaName] = instanceInfo[\"id\"];\n    break;\n  }\n}\n\nif(flag === false){\n  done({\n    flag: false,\n    formulaName : formulaNames[steps.loopOverFormulaList.index],\n    instanceInfo: param[steps.loopOverFormulaList.index],\n    existingInstanceIds: existingInstanceIds\n  });\n}\n\nif(flag === true){\n  done({\n    flag: true,\n    formulaName : formulaNames[steps.loopOverFormulaList.index],\n    instanceInfo: instanceInfo,\n    existingInstanceIds: existingInstanceIds\n  });\n}"}},{"id":236298,"onSuccess":["isInitialSyncOrDeltaSync"],"onFailure":["isFailed_syncCustomers"],"name":"checkStatus_syncCustomers","type":"filter","properties":{"body":"if(steps.executionData_syncCustomers.executionData.status === \"succeeded\"){\n  done(true);\n}\n\ndone(false);"}},{"id":236299,"onSuccess":["isBatchExecutionPending"],"onFailure":["isFailed_syncInvoices"],"name":"checkStatus_syncInvoices","type":"filter","properties":{"body":"if(steps.executionData_syncInvoices.executionData.status === \"succeeded\"){\n  done(true);\n}\n\ndone(false);"}},{"id":236300,"onSuccess":["syncRulesForInvoice"],"onFailure":["isFailed_syncSubscriptions"],"name":"checkStatus_syncSubscriptions","type":"filter","properties":{"body":"if(steps.executionData_syncSubscriptions.executionData.status === \"succeeded\"){\n  done(true);\n}\n\ndone(false);"}},{"id":236301,"onSuccess":["syncFormulaInstancesFound"],"onFailure":[],"name":"ConfigParams","type":"script","properties":{"body":"let config = {\n  params: steps.InputParams.params.input,\n  pipedriveApiToken: steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token\n}\n\nlet tpConfig = null;\n\n// if(trigger.args[\"siteName\"] === \"actcamp-test\"){\n//   tpConfig.third_party_configuration.config_json.batch.batch_size = \"1000\";\n// }\n\nif(steps.getTpConfig.response.body.third_party_configuration !== undefined){\n  tpConfig = steps.getTpConfig.response.body;\n}\n\nif(steps.updateConfiguration !== undefined){\n  if(steps.updateConfiguration.OAuthData !== null){\n    tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters = steps.updateConfiguration.OAuthData.OAuthDetails;\n  }\n  config.pipedriveApiToken = steps.updateConfiguration.OAuthData.OAuthDetails.access_token;\n}\n\ndone({\n  tpConfig: tpConfig,\n  config: config\n});\n\n"}},{"id":236302,"onSuccess":["getResult_syncCustomers"],"onFailure":[],"name":"createDelay_1","type":"httpRequest","properties":{"method":"GET","url":"${steps.delayExecution_1.payload.url}","query":"{}","headers":"${steps.delayExecution_1.payload.headers}"}},{"id":236303,"onSuccess":["getResult_syncSubscriptions"],"onFailure":[],"name":"createDelay_2","type":"httpRequest","properties":{"method":"GET","url":"${steps.delayExecution_2.payload.url}","query":"{}","body":"","headers":"${steps.delayExecution_2.payload.headers}"}},{"id":236304,"onSuccess":["getResult_syncInvoices"],"onFailure":[],"name":"createDelay_3","type":"httpRequest","properties":{"method":"GET","url":"${steps.delayExecution_3.payload.url}","query":"{}","headers":"${steps.delayExecution_3.payload.headers}"}},{"id":236305,"onSuccess":["newInstanceCreatedInfo"],"onFailure":[],"name":"createFormulaInstance","type":"request","properties":{"method":"POST","api":"${steps.createFormulaInstanceParams.createInstanceConfig.url}","body":"${steps.createFormulaInstanceParams.createInstanceConfig.body}"}},{"id":236306,"onSuccess":["createFormulaInstance"],"onFailure":[],"name":"createFormulaInstanceParams","type":"script","properties":{"body":"let formulaId = steps.loopOverFormulaList.entry || null;\n\n\nlet createInstanceConfig = {\n  url: \"/formulas/\"+formulaId+\"/instances\",\n  body: steps.checkInstanceExist.instanceInfo\n};\n\n\ndone({\n  createInstanceConfig: createInstanceConfig\n});\n\n\n"}},{"id":236307,"onSuccess":["runningSyncParams"],"onFailure":["isAlreadyASyncRunning"],"name":"createNewSyncDetails","type":"httpRequest","properties":{"retry":"true","method":"POST","url":"${steps.createNewSyncDetails_params.newSyncDetailsParams.url}","query":"${steps.createNewSyncDetails_params.newSyncDetailsParams.query}","retryAttempts":"5","headers":"${steps.createNewSyncDetails_params.newSyncDetailsParams.headers}","retryDelay":"200"}},{"id":236308,"onSuccess":["createNewSyncDetails"],"onFailure":["Failed"],"name":"createNewSyncDetails_params","type":"script","properties":{"body":"let apiKey = steps.InputParams.params.input.apiKey;\nlet configJson = steps.ConfigParams.tpConfig.third_party_configuration.config_json;\n\nlet context = {\n  \"excecutionId\": info.formulaExecutionId,\n  \"instance\": info.formulaInstanceId,\n  \"formula\": info.formulaId,\n  \"initialSync\": steps.InputParams.params.input.initialSync,\n  \"syncData\":{\n    \"syncStart\": Math.round((info.formulaStartTime)/1000)\n  }\n};\n\nif(steps.lastSyncDetails.response.body.third_party_sync_detail !== undefined){\n  if(steps.lastSyncDetails.response.body.third_party_sync_detail.context !== undefined){\n  lastSyncData = steps.lastSyncDetails.response.body.third_party_sync_detail.context;\n  context.syncData.previousSyncStart = (lastSyncData.syncData !== undefined) ? lastSyncData.syncData.syncStart : undefined;\n  context.syncData.previousSyncEnd = (lastSyncData.syncData !== undefined) ? lastSyncData.syncData.syncEnd : undefined;\n  }\n}\n\n\nlet newSyncDetailsParams = {\n  url: \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details\",\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + \"\")\n  },\n  query : {\n  'third_party_configuration[integration_name]': steps.InputParams.params.input.integrationName,\n  \"context\": JSON.stringify(context)\n  }\n};\n\nnewSyncDetailsParams.query.status = \"started\";\n\ndone({\n  newSyncDetailsParams: newSyncDetailsParams\n});"}},{"id":236309,"onSuccess":["getResult_syncCustomers"],"onFailure":[],"name":"delayExecution_1","type":"script","properties":{"body":"let payload = {\n  url: \"https://api.cloud-elements.co.uk/elements/api-v2/createDelay\",\n  headers:{\n    \"authorization\": \"User XNzP5miZ8LjANZarWA0np2LmNeRkUanHScUEQmQHwDs=, Organization c9584f9cc4a4c8391568438a9a3041a2\",\n    \"Elements-Formula-Instance-Id\": \"886\"\n  }\n};\n\ndone({\n  payload: payload\n});"}},{"id":236310,"onSuccess":["createDelay_2"],"onFailure":[],"name":"delayExecution_2","type":"script","properties":{"body":"let payload = {\n  url: \"https://api.cloud-elements.co.uk/elements/api-v2/createDelay\",\n  headers:{\n    \"authorization\": \"User XNzP5miZ8LjANZarWA0np2LmNeRkUanHScUEQmQHwDs=, Organization c9584f9cc4a4c8391568438a9a3041a2\",\n    \"Elements-Formula-Instance-Id\": \"886\"\n  }\n};\n\ndone({\n  payload: payload\n});"}},{"id":236311,"onSuccess":["createDelay_3"],"onFailure":[],"name":"delayExecution_3","type":"script","properties":{"body":"let payload = {\n  url: \"https://api.cloud-elements.co.uk/elements/api-v2/createDelay\",\n  headers:{\n    \"authorization\": \"User XNzP5miZ8LjANZarWA0np2LmNeRkUanHScUEQmQHwDs=, Organization c9584f9cc4a4c8391568438a9a3041a2\",\n    \"Elements-Formula-Instance-Id\": \"886\"\n  }\n};\n\ndone({\n  payload: payload\n});"}},{"id":236312,"onSuccess":["checkStatus_syncCustomers"],"onFailure":[],"name":"executionData_syncCustomers","type":"script","properties":{"body":"let executionData = {\n  error : false,\n  isStopSync: false,\n  done: false,\n  // url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.LastSyncDetails.response.body.third_party_sync_detail.id,\n  // auth: steps.InputParams.input.config.auth,\n  // body: steps.LastSyncDetails.response.body.third_party_sync_detail,\n};\n\nif(steps.executionStatus_syncCustomersFormula.response.body.status === undefined) {\n  executionData.error = true;\n  executionData.done = true;\n  executionData.status = \"failed\";\n}else if(steps.executionStatus_syncCustomersFormula.response.body.status === \"failed\"){\n  executionData.error = true;\n  executionData.done = true;\n  executionData.status = \"failed\";\n}else if(steps.executionStatus_syncCustomersFormula.response.body.status === \"success\"){\n  executionData.error = false;\n  executionData.done = true;\n  executionData.status = \"succeeded\";\n  // for(var i=0;i<=steps.executionStatus_syncCustomers.response.body.stepExecutions.length;i++){\n    // if(steps.executionStatus_syncCustomers.response.body.stepExecutions[i][\"stepName\"] === \"Success\") {\n    //   executionData.result = steps.executionStatus_syncCustomers.response.body.stepExecutions[i];\n    //   break;\n    // }\n    // if((i === steps.executionStatus_syncCustomers.response.body.stepExecutions.length) && (steps.executionStatus_syncCustomers.response.body.stepExecutions[i][\"status\"] === \"failed\")){\n    //     executionData.error = true;\n    //     executionData.isStopSync = true;\n    // }\n    // if(steps.executionStatus_syncCustomers.response.body.stepExecutions[i][\"stepName\"] ===\"StopSync\") {\n    //     executionData.error = true;\n    //     executionData.isStopSync=true;\n    //     break;\n    // }\n    \n  // }\n}else if(steps.executionStatus_syncCustomersFormula.response.body.status === \"pending\"){\n  executionData.error = false;\n  executionData.done = false;\n  executionData.status = \"running\";\n}\n\n\ndone({\n  executionData: executionData\n});"}},{"id":236313,"onSuccess":["checkStatus_syncInvoices"],"onFailure":[],"name":"executionData_syncInvoices","type":"script","properties":{"body":"let executionData = {\n  error : false,\n  isStopSync: false,\n  done: false,\n  // url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.LastSyncDetails.response.body.third_party_sync_detail.id,\n  // auth: steps.InputParams.input.config.auth,\n  // body: steps.LastSyncDetails.response.body.third_party_sync_detail,\n};\n\nif(steps.executionStatus_syncInvoicesFormula.response.body.status === undefined) {\n  executionData.error = true;\n  executionData.done = true;\n  executionData.status = \"failed\";\n}else if(steps.executionStatus_syncInvoicesFormula.response.body.status === \"failed\"){\n  executionData.error = true;\n  executionData.done = true;\n  executionData.status = \"failed\";\n}else if(steps.executionStatus_syncInvoicesFormula.response.body.status === \"success\"){\n  executionData.error = false;\n  executionData.done = true;\n  executionData.status = \"succeeded\";\n  // for(var i=0;i<steps.executionStatus_syncInvoices.response.body.stepExecutions.length;i++){\n  //   if(steps.executionStatus_syncInvoices.response.body.stepExecutions[i][\"stepName\"] ===\"Success\") {\n  //     executionData.result = steps.executionStatus_syncInvoices.response.body.stepExecutions[i];\n  //     break;\n  //   }\n  //   if((i === steps.executionStatus_syncInvoices.response.body.stepExecutions.length) && (steps.executionStatus_syncInvoices.response.body.stepExecutions[i][\"status\"] === \"failed\")){\n  //       executionData.error = true;\n  //       executionData.isStopSync = true;\n  //   }\n  //   // if(steps.executionStatus_syncInvoices.response.body.stepExecutions[i][\"stepName\"] ===\"StopSync\") {\n  //   //     executionData.error = true;\n  //   //     executionData.isStopSync=true;\n  //   //     break;\n  //   // }\n    \n  // }\n  \n}else if(steps.executionStatus_syncInvoicesFormula.response.body.status === \"pending\"){\n  executionData.error = false;\n  executionData.done = false;\n  executionData.status = \"running\";\n}\n\ndone({\n  executionData: executionData\n});"}},{"id":236314,"onSuccess":["checkStatus_syncSubscriptions"],"onFailure":[],"name":"executionData_syncSubscriptions","type":"script","properties":{"body":"let executionData = {\n  error : false,\n  isStopSync: false,\n  done: false,\n  // url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.LastSyncDetails.response.body.third_party_sync_detail.id,\n  // auth: steps.InputParams.input.config.auth,\n  // body: steps.LastSyncDetails.response.body.third_party_sync_detail,\n};\n\nif(steps.executionStatus_syncSubscriptionFormula.response.body.status === undefined) {\n  executionData.error = true;\n  executionData.done = true;\n  executionData.status = \"failed\";\n}else if(steps.executionStatus_syncSubscriptionFormula.response.body.status === \"failed\"){\n  executionData.error = true;\n  executionData.done = true;\n  executionData.status = \"failed\";\n}else if(steps.executionStatus_syncSubscriptionFormula.response.body.status === \"success\"){\n  executionData.error = false;\n  executionData.done = true;\n  executionData.status = \"succeeded\";\n  // for(var i=0;i<steps.executionStatus_syncSubscription.response.body.stepExecutions.length;i++){\n  //   if(steps.executionStatus_syncSubscription.response.body.stepExecutions[i][\"stepName\"] ===\"Success\") {\n  //     executionData.result = steps.executionStatus_syncSubscription.response.body.stepExecutions[i];\n  //     break;\n  //   }\n  //   if((i === steps.executionStatus_syncSubscription.response.body.stepExecutions.length) && (steps.executionStatus_syncSubscription.response.body.stepExecutions[i][\"status\"] === \"failed\")){\n  //       executionData.error = true;\n  //       executionData.isStopSync = true;\n  //   }\n  //   // if(steps.executionStatus_syncSubscription.response.body.stepExecutions[i][\"stepName\"] ===\"StopSync\") {\n  //   //     executionData.error = true;\n  //   //     executionData.isStopSync=true;\n  //   //     break;\n  //   // }\n    \n  // }\n  \n}else if(steps.executionStatus_syncSubscriptionFormula.response.body.status === \"pending\"){\n  executionData.error = false;\n  executionData.done = false;\n  executionData.status = \"running\";\n}\n\n\ndone({\n  executionData: executionData\n});"}},{"id":236315,"onSuccess":["executionData_syncCustomers"],"onFailure":["executionData_syncCustomers"],"name":"executionStatus_syncCustomers","type":"request","properties":{"api":"${steps.syncCustomerFormulaDetails.checkStatusParams.url}","method":"GET","query":"${steps.syncCustomerFormulaDetails.checkStatusParams.query}","headers":"${steps.syncCustomerFormulaDetails.checkStatusParams.auth}"}},{"id":240201,"onSuccess":["executionData_syncCustomers"],"onFailure":["executionData_syncCustomers"],"name":"executionStatus_syncCustomersFormula","type":"httpRequest","properties":{"url":"${steps.syncCustomerFormulaDetails.checkStatusParams.url}","method":"GET","query":"${steps.syncCustomerFormulaDetails.checkStatusParams.query}","headers":"${steps.syncCustomerFormulaDetails.checkStatusParams.auth}"}},{"id":236316,"onSuccess":["executionData_syncInvoices"],"onFailure":["executionData_syncInvoices"],"name":"executionStatus_syncInvoices","type":"request","properties":{"method":"GET","api":"${steps.syncInvoiceFormulaDetails.checkStatusParams.url}"}},{"id":240202,"onSuccess":["executionData_syncInvoices"],"onFailure":[],"name":"executionStatus_syncInvoicesFormula","type":"httpRequest","properties":{"url":"${steps.syncInvoiceFormulaDetails.checkStatusParams.url}","method":"GET","query":"${steps.syncInvoiceFormulaDetails.checkStatusParams.query}","headers":"${steps.syncInvoiceFormulaDetails.checkStatusParams.auth}"}},{"id":236317,"onSuccess":["executionData_syncSubscriptions"],"onFailure":["executionData_syncSubscriptions"],"name":"executionStatus_syncSubscription","type":"request","properties":{"method":"GET","api":"${steps.syncSubscriptionFormulaDetails.checkStatusParams.url}"}},{"id":240203,"onSuccess":["executionData_syncSubscriptions"],"onFailure":[],"name":"executionStatus_syncSubscriptionFormula","type":"httpRequest","properties":{"method":"GET","url":"${steps.syncSubscriptionFormulaDetails.checkStatusParams.url}","query":"${steps.syncSubscriptionFormulaDetails.checkStatusParams.query}","headers":"${steps.syncSubscriptionFormulaDetails.checkStatusParams.auth}"}},{"id":236318,"onSuccess":[],"onFailure":[],"name":"Failed","type":"script","properties":{"body":"done({\n  statusCode: 200,\n  message: \"Failed\"\n});"}},{"id":236319,"onSuccess":["updateSyncStatus_Failed"],"onFailure":["Failed"],"name":"failedSyncParams","type":"script","properties":{"body":"let payload;\n\n\nif(steps.createNewSyncDetails !== undefined){\n  if(steps.createNewSyncDetails.response.code === 409){\n    if(steps.createNewSyncDetails.response.body.error_msg === \"Can not create new sync as a sync is already running.\"){\n      payload = {\n        error : true,\n        done: false,\n        url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.lastSyncDetails.response.body.third_party_sync_detail.id,\n        auth: {\n          Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n        },\n        body: steps.lastSyncDetails.response.body.third_party_sync_detail,\n      };\n      payload.body.status = \"failed\";\n      done({\n        payload: payload\n      });\n    }\n  }  \n}\n\nif(steps.isBatchRunning.continue === true){\n  tpSyncId = steps.lastSyncDetails.response.body.third_party_sync_detail.id;\n  tpSyncBody = steps.lastSyncDetails.response.body.third_party_sync_detail;\n}else{\n  tpSyncId = steps.createNewSyncDetails.response.body.third_party_sync_detail.id;\n  tpSyncBody = steps.createNewSyncDetails.response.body.third_party_sync_detail;\n}\n\npayload = {\n  error : true,\n  done: false,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +tpSyncId,\n  auth: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  body: tpSyncBody\n};\n\npayload.body.status = \"failed\";\n\ndone({\n  payload: payload\n});"}},{"id":236320,"onSuccess":[],"onFailure":[],"name":"FailedToGetAccessToken","type":"script","properties":{"body":"done({\n  message : \"Failed to Get New Access Token\"\n});"}},{"id":236321,"onSuccess":["loopOverFormulaList"],"onFailure":[],"name":"formulaIdList","type":"script","properties":{"body":"let tpConfig = steps.ConfigParams.tpConfig.third_party_configuration.config_json;\n\nlet formula_SyncCustomers = tpConfig.cloudElements.formulas.formula_SyncCustomers.id;\nlet formula_SyncSubscription = tpConfig.cloudElements.formulas.formula_SyncSubscription.id;\nlet formula_SyncInvoice = tpConfig.cloudElements.formulas.formula_SyncInvoice.id;\n\n// let formula_SyncSubscription = \"30443\";\n// let formula_SyncInvoice = \"30411\";\n\n\n\n// if(trigger.args.siteName === \"actcamp-test\"){\n//   formula_SyncCustomers = \"30076\";\n// }\n\n\nlet formulaList=[formula_SyncCustomers,formula_SyncSubscription,formula_SyncInvoice];\n\ndone({formulaList:formulaList});\n\n"}},{"id":236322,"onSuccess":["formulaIdList"],"onFailure":[],"name":"formulaInformation","type":"script","properties":{"body":"let tpConfig = steps.ConfigParams.tpConfig.third_party_configuration.config_json;\n\nlet chargebeeInstanceId = tpConfig.cloudElements.chargebee.instance;\nlet thirdPartyInstanceId = tpConfig.cloudElements.thirdParty.instance;\n\nlet siteName = steps.InputParams.params.input.siteName;\n\ndone({\n  chargebee:chargebeeInstanceId,\n  thirdParty:thirdPartyInstanceId,\n  formula_SyncCustomers:{\n    active: true,\n    configuration: {\n      chargebee: chargebeeInstanceId,\n      pipedrive: thirdPartyInstanceId\n    },\n    name: siteName + \"-SyncCustomers\"\n  },\n  formula_SyncSubscription:{\n    active: true,\n    configuration: {\n      chargebee: chargebeeInstanceId,\n      pipedrive: thirdPartyInstanceId\n    },\n    name: siteName + \"-SyncSubscription\"\n  },\n  formula_SyncInvoice:{\n    active: true,\n    configuration: {\n      chargebee: chargebeeInstanceId,\n      pipedrive: thirdPartyInstanceId\n    },\n    name: siteName + \"-SyncInvoice\"\n  }\n});\n"}},{"id":236323,"onSuccess":["checkInstanceExist"],"onFailure":[],"name":"getInstances","type":"request","properties":{"method":"GET","api":"/formulas/${steps.loopOverFormulaList.entry}/instances"}},{"id":236324,"onSuccess":["getThirdPartyInstanceDetails"],"onFailure":["FailedToGetAccessToken"],"name":"getNewToken","type":"httpRequest","properties":{"retry":"true","method":"POST","url":"${steps.getNewToken_params.payload.url}","retryAttempts":"5","body":"${steps.getNewToken_params.payload.body}","headers":"${steps.getNewToken_params.payload.headers}","retryDelay":"200"}},{"id":236325,"onSuccess":["getNewToken"],"onFailure":["Failed"],"name":"getNewToken_params","type":"script","properties":{"body":"if(steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.OAuth_Parameters === undefined){\n  done(false);\n}\n\nlet params = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.OAuth_Parameters;\n\nlet payload = {\n  url: \"https://oauth.pipedrive.com/oauth/token\",\n  headers : {\n    \"Content-Type\" : \"application/x-www-form-urlencoded\",\n    \"Authorization\" : \"Basic \" + CE.b64(params.client_info.client_id + \":\" + params.client_info.client_secret)\n  },\n  body : \"grant_type=refresh_token&refresh_token=\" + params.refresh_token\n};\n\ndone({\n  payload: payload\n});"}},{"id":236326,"onSuccess":["getResult_syncCustomers"],"onFailure":[],"name":"getResultParams_Customers","type":"script","properties":{"body":"let id = steps.executionData_syncCustomers.executionData.result.id || null;\n\nlet payload = {\n  url: \"/formulas/instances/executions/steps/\"+id+\"/values\"\n};\n\ndone({\n    payload: payload\n});"}},{"id":236327,"onSuccess":["getResult_syncInvoices"],"onFailure":[],"name":"getResultParams_Invoices","type":"script","properties":{"body":"let id = steps.executionData_syncInvoices.executionData.result.id || null;\n\nlet payload = {\n  url: \"/formulas/instances/executions/steps/\"+id+\"/values\"\n};\n\ndone({\n    payload: payload\n});\n"}},{"id":236328,"onSuccess":["getResult_syncSubscriptions"],"onFailure":[],"name":"getResultParams_Subscriptions","type":"script","properties":{"body":"let id = steps.executionData_syncSubscriptions.executionData.result.id || null;\n\nlet payload = {\n  url: \"/formulas/instances/executions/steps/\"+id+\"/values\"\n};\n\ndone({\n    payload: payload\n});"}},{"id":236329,"onSuccess":["isResultPublished_1"],"onFailure":[],"name":"getResult_syncCustomers","type":"request","properties":{"method":"GET","api":"${steps.getResultParams_Customers.payload.url}","retryAttempts":"2","retryDelay":"500"}},{"id":236330,"onSuccess":["isResultPublished_3"],"onFailure":[],"name":"getResult_syncInvoices","type":"request","properties":{"method":"GET","api":"${steps.getResultParams_Invoices.payload.url}"}},{"id":236331,"onSuccess":["isResultPublished_2"],"onFailure":[],"name":"getResult_syncSubscriptions","type":"request","properties":{"method":"GET","api":"${steps.getResultParams_Subscriptions.payload.url}"}},{"id":236332,"onSuccess":["updateElementInstanceParams"],"onFailure":[],"name":"getThirdPartyInstanceDetails","type":"request","properties":{"method":"GET","api":"/instances/${steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.thirdParty.instance}"}},{"id":236333,"onSuccess":["isTokenAboutToExpire"],"onFailure":[],"name":"getTpConfig","type":"httpRequest","properties":{"retry":"true","method":"GET","url":"${steps.InputParams.getTpConfigParams.url}","query":"${steps.InputParams.getTpConfigParams.query}","retryAttempts":"5","headers":"${steps.InputParams.getTpConfigParams.auth}","retryDelay":"200"}},{"id":236334,"onSuccess":["TPData"],"onFailure":["failedSyncParams"],"name":"GetTpEntityDetails","type":"httpRequest","properties":{"method":"GET","url":"${steps.TPEntityParams.params.config.url}","query":"${steps.TPEntityParams.params.config.query}","headers":"${steps.TPEntityParams.params.config.auth}"}},{"id":236335,"onSuccess":["updateStatus"],"onFailure":["TPEntityParams"],"name":"HasNextOffset","type":"filter","properties":{"body":"done(steps.GetTpEntityDetails.response.body.next_offset === undefined);"}},{"id":236336,"onSuccess":["getTpConfig"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args['apiKey'];\nlet siteName = trigger.args['siteName'];\nlet integrationName = trigger.args['integrationName'];\nlet siteDomain = trigger.args['siteDomain'];\nlet initialSync = trigger.args['initialSync'];\n\n// let apiKey = \"test_FdeKa4XuFlZ6ZxikZjIrNLu1VNOkocOq\";\n// let siteName = \"ipaas-test\";\n// let integrationName = 'pipedrive';\n// let siteDomain = \"chargebee-labs.com\";\n// let initialSync = true;\n\n// let pipedriveApiToken = \"586baccb1fdb63feeb696862cecf7388f0962f20\";\n\nlet password = \"\";\n\nlet errorEmailEndpoint =  'https://' + siteName + '.' + siteDomain + '/adhoc_checkout_email/api/send';\n// let errorEmailAddress = \"integrations-growth-internal@chargebee.com\";\nlet errorEmailAddress = \"ajaitester@gmail.com\";\n\n\n\nlet retrieveLatestSyncConfig = {\n  url:\"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_sync_details/retrieve_latest_sync\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    'third_party_configuration[integration_name]': integrationName\n  },\n};\n\nlet getTpConfigParams = {\n    url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n    auth:{\n      Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n    },\n    query:{\n      integration_name: integrationName\n    }\n};\n\nlet updateTpConfigParams = {\n  url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body: {\n     site_name: siteName,\n     api_key: apiKey,\n     integration_name: integrationName\n     //append config_json with this during request\n  }\n};\n\n// let sendErrorMailParams = {\n//   url: errorEmailEndpoint,\n//   headers:{\n//     Authorization: \"Basic \" + CE.b64(apiKey + \":\" + \"\")\n//   },\n//   query :{\n//     content : \"Integration Error, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n//     subject : \"Fatal Error Occurred during \" + integrationName + \" Initial Sync\",\n//     to_address : errorEmailAddress,\n//     api_key : apiKey\n//   }\n// };\n\n\nlet unlink =  {\n  \"id\": \"unlink\",\n  \"display\": \"Unlink Integration\",\n  \"buttonLook\": \"MUTTED\",\n  \"type\": \"POP_UP\",\n  \"popUp\": {\n      \"type\": \"SIMPLE\",\n      \"title\": \"Do you really want to unlink the integration?\",\n      \"submitButton\": \"Unlink\",\n      \"cancelButton\": \"Dismiss\",\n      \"description\": \"This will remove all the configuration details such as login authentication, configurations mapping etc. If you want to sync again, you will have to start the sync process from the beginning.\",\n      \"apiEndPoint\": {\n          \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/unlink\",\n          \"type\": \"GET\",\n          \"headers\": {\n              \"Elements-Formula-Instance-Id\": \"377707\"\n          },\n          \"input\": {\n              \"type\": \"activecampaign\",\n              \"siteDomain\": \"chargebee-labs.com\"\n          }\n      }\n  }\n}\n\n\nlet params = {\n  input: {\n    apiKey: apiKey,\n    password: password,\n    siteName: siteName,\n    siteDomain:siteDomain,\n    integrationName: integrationName,\n    initialSync:initialSync,\n    // pipedriveApiToken: pipedriveApiToken,\n    errorEmailEndpoint: errorEmailEndpoint,\n    errorEmailAddress: errorEmailAddress\n  }\n};\n\ndone({\n  params: params,\n  retrieveLatestSyncConfig: retrieveLatestSyncConfig,\n  getTpConfigParams: getTpConfigParams,\n  updateTpConfigParams: updateTpConfigParams,\n  unlink: unlink\n  // sendErrorMailParams: sendErrorMailParams\n});"}},{"id":236337,"onSuccess":["updateTpConfig_params"],"onFailure":[],"name":"instanceIdList","type":"script","properties":{"body":"let instanceIds = [];\n\nif(steps.checkInstanceExist !== undefined){\n  instanceIds = steps.checkInstanceExist.existingInstanceIds;\n}\n\nif(steps.newInstanceCreatedInfo !== undefined){\n  instanceIds = steps.newInstanceCreatedInfo.instanceList;\n}\n\ndone({\n  instanceIds: instanceIds\n});\n\n"}},{"id":236338,"onSuccess":["failedSyncParams"],"onFailure":["Failed"],"name":"isAlreadyASyncRunning","type":"filter","properties":{"body":"if(steps.createNewSyncDetails.response.code === 409){\n  if(steps.createNewSyncDetails.response.body.error_msg === \"Can not create new sync as a sync is already running.\"){\n    done(true);\n  }\n}\n\ndone(false);"}},{"id":236633,"onSuccess":["triggerDispatcher_NextBatch"],"onFailure":["TPEntityParams"],"name":"isBatchExecutionPending","type":"filter","properties":{"body":"let tpConfig = (steps.ConfigParams.tpConfig.third_party_configuration !== undefined) ? steps.ConfigParams.tpConfig.third_party_configuration.config_json : null;\n\nif(steps.InputParams.params.input.initialSync === true){\n  done(false);\n}\n\n// if(trigger.args['batchCount'] === 2){\n//   done(false);\n// }\n\n\nif(tpConfig !== null){\n  \n    let condition_1 = ((tpConfig.batch.sync_customer.change_subscription === null) && (tpConfig.batch.sync_customer.get_customer === null) && (tpConfig.batch.sync_customer.get_error === null)) ? true : false;\n    \n  if(steps.isInitialSyncOrDeltaSync.continue === true){\n    if(steps.batchCustomersDone.continue === true){\n      done(false);\n    }else{\n      done(true);\n    }\n  }\n  \n  let condition_2 = ((tpConfig.batch.sync_subscription.change_subscription === null) && (tpConfig.batch.sync_subscription.get_error === null)) ? true : false;\n  \n  let condition_3 = ((tpConfig.batch.sync_invoice.change_invoice === null) && (tpConfig.batch.sync_invoice.get_error === null)) ? true : false;\n  \n  if((condition_1 === true) && (condition_2 === true) && (condition_3 === true)){\n    done(false);\n  }\n  done(true);\n}\n\ndone(false);"}},{"id":236470,"onSuccess":["runningSyncParams"],"onFailure":["createNewSyncDetails_params"],"name":"isBatchRunning","type":"filter","properties":{"body":"let tpConfig = (steps.ConfigParams.tpConfig.third_party_configuration !== undefined) ? steps.ConfigParams.tpConfig.third_party_configuration.config_json : null;\n\nif(steps.InputParams.params.input.initialSync === true){\n  done(false);\n}\n\nif(tpConfig !== null){\n  let condition_1 = ((tpConfig.batch.sync_customer.change_subscription === undefined) && (tpConfig.batch.sync_customer.get_customer === undefined) && (tpConfig.batch.sync_customer.get_error === undefined)) ? true : false;\n  \n  let condition_2 = ((tpConfig.batch.sync_subscription.change_subscription === undefined) && (tpConfig.batch.sync_subscription.get_error === undefined)) ? true : false;\n  \n  let condition_3 = ((tpConfig.batch.sync_invoice.change_invoice === undefined) && (tpConfig.batch.sync_invoice.get_error === undefined)) ? true : false;\n  \n  if((condition_1 === true) && (condition_2 === true) && (condition_3 === true)){\n    done(false);\n  }\n  done(true);\n}\n\ndone(false);\n"}},{"id":236339,"onSuccess":["syncCustomerFormulaDetails"],"onFailure":["failedSyncParams"],"name":"isFailed_syncCustomers","type":"filter","properties":{"body":"if(steps.executionData_syncCustomers.executionData.status === \"running\"){\n  done(true);\n}\n\nif(steps.executionData_syncCustomers.executionData.status === \"failed\"){\n  done(false);\n}\n\n"}},{"id":236340,"onSuccess":["syncInvoiceFormulaDetails"],"onFailure":["failedSyncParams"],"name":"isFailed_syncInvoices","type":"filter","properties":{"body":"if(steps.executionData_syncInvoices.executionData.status === \"running\"){\n  done(true);\n}\n\nif(steps.executionData_syncInvoices.executionData.status === \"failed\"){\n  done(false);\n}"}},{"id":236341,"onSuccess":["syncSubscriptionFormulaDetails"],"onFailure":["failedSyncParams"],"name":"isFailed_syncSubscriptions","type":"filter","properties":{"body":"if(steps.executionData_syncSubscriptions.executionData.status === \"running\"){\n  done(true);\n}\n\nif(steps.executionData_syncSubscriptions.executionData.status === \"failed\"){\n  done(false);\n}"}},{"id":236342,"onSuccess":["isBatchExecutionPending"],"onFailure":["syncRulesForSubscription"],"name":"isInitialSyncOrDeltaSync","type":"filter","properties":{"body":"if(steps.InputParams.params.input.initialSync === true){\n  done(true);\n}else{\n  if(steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_FullSyncRun.lastSyncTime === undefined){\n    done(true);\n  }\n  done(false);\n}"}},{"id":236343,"onSuccess":["loopOverFormulaList"],"onFailure":["createFormulaInstanceParams"],"name":"isInstanceExist","type":"filter","properties":{"body":"done(steps.checkInstanceExist.flag);"}},{"id":236344,"onSuccess":["isInitialSyncOrDeltaSync"],"onFailure":[],"name":"isResultPublished_1","type":"filter","properties":{"body":"if((steps.getResult_syncCustomers.response.code === 200) && ((steps.getResult_syncCustomers.response.body.length === 0) || (steps.getResult_syncCustomers.response.body === null))){\n  done(false);\n}\n\n// To Ensure All Data is Available In the Result\n\nlet responseData = steps.getResult_syncCustomers.response.body;\n\nlet flag1 = false;\nlet flag2 = false;\nlet flag3 = false;\nlet flag4 = false;\n\nfor(var i=0; i < responseData.length; i++){\n  switch(responseData[i]['key']){\n    case \"Success.listContent_successCSV\":{\n      flag1 = true;\n    }break;\n    case \"Success.successCSVLength\":{\n      flag2 = true;\n    }break;\n    case \"Success.listContent_errorCSV\":{\n      flag3 = true;\n    }break;\n    case \"Success.errorCSVLength\":{\n      flag4 = true;\n    }break;\n  }\n}\n\nif((flag1 === false) || (flag2 === false) || (flag3 === false) || (flag4 === false)){\n  done(false);\n}\n\n// -----------------\n\n\n// for(var i=0; i < responseData.length; i++){\n//   if(responseData[i]['key'] !== \"Success.listContent_successCSV\")\n//     flag1 = false;\n//   else\n//     flag1 = true;\n//   if(responseData[i]['key'] !== \"Success.successCSVLength\")\n//     flag2 = false;\n//   else\n//     flag2= true;\n//   if(responseData[i]['key'] !== \"Success.listContent_errorCSV\")\n//     flag3 = false;\n//   if(responseData[i]['key'] !== \"Success.errorCSVLength\")\n//     flag4 = false;\n// }\n\ndone(true);\n"}},{"id":236345,"onSuccess":["syncRulesForInvoice"],"onFailure":["syncSubscriptionFormulaDetails"],"name":"isResultPublished_2","type":"filter","properties":{"body":"if((steps.getResult_syncSubscriptions.response.code === 200) && ((steps.getResult_syncSubscriptions.response.body.length === 0) || (steps.getResult_syncSubscriptions.response.body === null))){\n  done(false);\n}\n\ndone(true);"}},{"id":236346,"onSuccess":["overallSyncSuccess"],"onFailure":["syncInvoiceFormulaDetails"],"name":"isResultPublished_3","type":"filter","properties":{"body":"if((steps.getResult_syncInvoices.response.code === 200) && ((steps.getResult_syncInvoices.response.body.length === 0) || (steps.getResult_syncInvoices.response.body === null))){\n  done(false);\n}\n\ndone(true);"}},{"id":236347,"onSuccess":["ConfigParams"],"onFailure":["getNewToken_params"],"name":"isTokenAboutToExpire","type":"filter","properties":{"body":"let currentTime = Math.round((new Date().getTime())/1000);\nlet expiryTime = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.OAuth_Parameters.expiry_time || 0;\n\nif((expiryTime - currentTime) > (50 * 60)){ //Difference greater than 30 minutes (Unix Timestamp)\n  done(true);\n}\n\ndone(false);"}},{"id":236638,"onSuccess":["UploadCSV"],"onFailure":["updateTpConfigParams_1"],"name":"isUploadCSV","type":"filter","properties":{"body":"if(steps.InputParams.params.input.initialSync === false){\n  done(true);\n}\n\ndone(false);"}},{"id":236348,"onSuccess":["isBatchRunning"],"onFailure":["isBatchRunning"],"name":"lastSyncDetails","type":"httpRequest","properties":{"method":"GET","retry":"true","url":"${steps.InputParams.retrieveLatestSyncConfig.url}","query":"${steps.InputParams.retrieveLatestSyncConfig.query}","retryAttempts":"5","acceptableStatusCodes":"200,409","headers":"${steps.InputParams.retrieveLatestSyncConfig.auth}","retryDelay":"200"}},{"id":236349,"onSuccess":["setInstanceInfo"],"onFailure":["instanceIdList"],"name":"loopOverFormulaList","type":"loop","properties":{"list":"${steps.formulaIdList.formulaList}"}},{"id":236350,"onSuccess":["loopOverFormulaList"],"onFailure":[],"name":"newInstanceCreatedInfo","type":"script","properties":{"body":"let formulaName = steps.checkInstanceExist.formulaName;\nlet instanceList = steps.checkInstanceExist.existingInstanceIds;\n\ninstanceList[formulaName] = steps.createFormulaInstance.response.body.id;\n\ndone({\n  instanceList: instanceList\n});\n\n"}},{"id":236351,"onSuccess":["TPEntityParams"],"onFailure":["failedSyncParams"],"name":"overallSyncSuccess","type":"filter","properties":{"body":"// let checkStatus_syncInvoices;\n\n// let checkStatus_syncSubscriptions;\nlet checkStatus_syncCustomers;\n\n// if(steps.isInitialSyncOrDeltaSync.continue === true){\n//   checkStatus_syncCustomers = steps.executionData_syncCustomers.executionData.status;\n  \n//   if(checkStatus_syncCustomers === \"succeeded\"){\n//     done(true);\n//   }\n//   done(false);\n// }\n\n\n// if(steps.batchCustomersDone.continue === true && steps.batchSubscriptionDone.continue === true && steps.batchInvoiceDone.continue === true){\n//   done(true);\n// }\n\n// if(steps.syncRulesForSubscription.continue === false){\n//   checkStatus_syncCustomers = steps.executionData_syncCustomers.executionData.status;\n//   if(steps.syncRulesForInvoice.continue === true){\n//     checkStatus_syncInvoices = steps.executionData_syncInvoices.executionData.status;\n//   }\n//   if((checkStatus_syncInvoices !== undefined) && (checkStatus_syncInvoices === \"succeeded\") && (checkStatus_syncCustomers === \"succeeded\")){\n//     done(true);\n//   }\n//   done(false);\n// }\n\n// if(steps.syncRulesForInvoice.continue === false){\n//   checkStatus_syncCustomers = steps.executionData_syncCustomers.executionData.status;\n//   if(steps.syncRulesForSubscription.continue === true){\n//     checkStatus_syncSubscriptions = steps.executionData_syncSubscriptions.executionData.status;\n//   }\n//   if((checkStatus_syncSubscriptions !== undefined) && (checkStatus_syncSubscriptions === \"succeeded\") && (checkStatus_syncCustomers === \"succeeded\")){\n//     done(true);\n//   }\n//   done(false);\n// }\n\n// if((steps.isInitialSyncOrDeltaSync.continue === false) && (steps.syncRulesForSubscription.continue === true) && (steps.syncRulesForInvoice.continue === true)){\n//     checkStatus_syncInvoices = steps.executionData_syncInvoices.executionData.status;\n//     checkStatus_syncSubscriptions = steps.executionData_syncSubscriptions.executionData.status;\n//     checkStatus_syncCustomers = steps.executionData_syncCustomers.executionData.status;\n\n//     if((checkStatus_syncInvoices === \"succeeded\") && (checkStatus_syncSubscriptions === \"succeeded\") && (checkStatus_syncCustomers === \"succeeded\")){\n//       done(true);\n//     }\n\n//     done(false);\n// }\n\n// done(false);\n\n\n\nif(steps.isInitialSyncOrDeltaSync.continue === true){\n  checkStatus_syncCustomers = steps.executionData_syncCustomers.executionData.status;\n  \n  if(checkStatus_syncCustomers === undefined){\n    if(steps.batchCustomersDone.continue === true){\n      done(true);\n    }else{\n      done(false);\n    }\n  }\n  \n  if(checkStatus_syncCustomers === \"succeeded\"){\n    done(true);\n  }\n  done(false);\n}\n\nif(steps.batchCustomersDone.continue === true && steps.batchSubscriptionDone.continue === true && steps.batchInvoiceDone.continue === true){\n  done(true);\n}\n\nlet flag = false;\n\n\nif(steps.executionData_syncCustomers === undefined && steps.batchCustomersDone.continue === true){\n    flag = true;\n}else{\n    checkStatus_syncCustomers = steps.executionData_syncCustomers.executionData.status;\n    if((checkStatus_syncCustomers !== undefined) && (checkStatus_syncCustomers === \"succeeded\")){\n      flag = true;\n    }else{\n      flag = false;\n    }\n}\n\nif((steps.executionData_syncSubscriptions === undefined && steps.batchSubscriptionDone.continue === true) || (steps.syncRulesForSubscription.continue === false)){\n    flag = true;\n}else{\n   let checkStatus_syncSubscriptions = steps.executionData_syncSubscriptions.executionData.status;\n   if((checkStatus_syncSubscriptions !== undefined) && (checkStatus_syncSubscriptions === \"succeeded\")){\n        flag = true;\n    }else{\n        flag = false;\n    }\n}\n\nif((steps.executionData_syncInvoices === undefined && steps.batchInvoiceDone.continue === true) || (steps.syncRulesForInvoice.continue === false)){\n    flag = true;\n}else{\n    let checkStatus_syncInvoices = steps.executionData_syncInvoices.executionData.status;\n    if((checkStatus_syncInvoices !== undefined) && (checkStatus_syncInvoices === \"succeeded\")){\n        flag = true;\n    }else{\n        flag = false;\n    }\n}\n\ndone(flag);"}},{"id":236352,"onSuccess":["updateSyncStatus_Running"],"onFailure":["failedSyncParams"],"name":"runningSyncParams","type":"script","properties":{"body":"let tpSyncId;\n\nif(steps.isBatchRunning.continue === true){\n  tpSyncId = steps.lastSyncDetails.response.body.third_party_sync_detail.id;\n  tpSyncBody = steps.lastSyncDetails.response.body.third_party_sync_detail;\n}else{\n  tpSyncId = steps.createNewSyncDetails.response.body.third_party_sync_detail.id;\n  tpSyncBody = steps.createNewSyncDetails.response.body.third_party_sync_detail;\n}\n\n\nlet payload = {\n  error : false,\n  done: false,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +tpSyncId,\n  auth: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  body: tpSyncBody\n};\n\npayload.body.context.excecutionId = info.formulaExecutionId;\npayload.body.status = \"running\";\n\ndone({\n  payload: payload\n});"}},{"id":236353,"onSuccess":["getInstances"],"onFailure":[],"name":"setInstanceInfo","type":"script","properties":{"body":"let instanceList = {};\n\n\nif((steps.isInstanceExist !== undefined) && (steps.isInstanceExist.continue === true)){\n  instanceList = steps.checkInstanceExist.existingInstanceIds;\n}\n\nif((steps.isInstanceExist !== undefined) && (steps.isInstanceExist.continue === false)){\n  instanceList = steps.newInstanceCreatedInfo.instanceList;\n}\n\ndone({\n  instanceList: instanceList\n});"}},{"id":236354,"onSuccess":[],"onFailure":[],"name":"Success","type":"script","properties":{"body":"// let syncCustomerResponse = steps.getResult_syncCustomers.response.body;\n// // let syncSubscriptionResponse = steps.getResult_syncSubscriptions.response.body || [];\n// // let syncInvoiceResponse = steps.getResult_syncInvoices.response.body || [];\n// // let syncStatus = steps.lastSyncDetails.response.body.third_party_sync_detail || null;\n\n// let errorCSVLength = 0;\n// let successCSVLength = 0;\n// let errorCSV = [];\n// let successCSV = [];\n\n// for(var i=0;i < syncCustomerResponse.length;i++){\n//   if(syncCustomerResponse[i]['key'] === \"Success.listContent_successCSV\"){\n//     ((syncCustomerResponse[i]['value'] !== undefined) && (syncCustomerResponse[i]['value'] !== null)) ? successCSV.push(JSON.parse(syncCustomerResponse[i]['value'])) : '';\n//   }\n//   if(syncCustomerResponse[i]['key'] === \"Success.listContent_errorCSV\"){\n//     ((syncCustomerResponse[i]['value'] !== undefined) && (syncCustomerResponse[i]['value'] !== null)) ? errorCSV.push(JSON.parse(syncCustomerResponse[i]['value'])) : '';\n//   }\n//   if(syncCustomerResponse[i]['key'] === \"Success.successCSVLength\"){\n//     successCSVLength = successCSVLength + parseInt(syncCustomerResponse[i]['value']);\n//   }\n//   if(syncCustomerResponse[i]['key'] === \"Success.errorCSVLength\"){\n//     errorCSVLength = errorCSVLength + parseInt(syncCustomerResponse[i]['value']);\n//   }\n  \n//   // if(syncSubscriptionResponse[i]['key'] === \"Success.listContent_successCSV\"){\n//   //   (syncSubscriptionResponse[i]['value'] !== undefined) ? successCSV.push(JSON.parse(syncSubscriptionResponse[i]['value'])) : '';\n//   // }\n//   // if(syncSubscriptionResponse[i]['key'] === \"Success.listContent_errorCSV\"){\n//   //   (syncSubscriptionResponse[i]['value'] !== undefined) ? errorCSV.push(JSON.parse(syncSubscriptionResponse[i]['value'])) : '';\n//   // }\n//   // if(syncSubscriptionResponse[i]['key'] === \"Success.successCSVLength\"){\n//   //   successCSVLength = successCSVLength + parseInt(syncSubscriptionResponse[i]['value']);\n//   // }\n//   // if(syncSubscriptionResponse[i]['key'] === \"Success.errorCSVLength\"){\n//   //   errorCSVLength = errorCSVLength + parseInt(syncSubscriptionResponse[i]['value']);\n//   // }\n  \n//   // if(syncInvoiceResponse[i]['key'] === \"Success.listContent_successCSV\"){\n//   //   (syncInvoiceResponse[i]['value'] !== undefined) ? successCSV.push(JSON.parse(syncInvoiceResponse[i]['value'])) : '';\n//   // }\n//   // if(syncInvoiceResponse[i]['key'] === \"Success.listContent_errorCSV\"){\n//   //   (syncInvoiceResponse[i]['value'] !== undefined) ? errorCSV.push(JSON.parse(syncInvoiceResponse[i]['value'])) : '';\n//   // }\n//   // if(syncInvoiceResponse[i]['key'] === \"Success.successCSVLength\"){\n//   //   successCSVLength = successCSVLength + parseInt(syncInvoiceResponse[i]['value']);\n//   // }\n//   // if(syncInvoiceResponse[i]['key'] === \"Success.errorCSVLength\"){\n//   //   errorCSVLength = errorCSVLength + parseInt(syncInvoiceResponse[i]['value']);\n//   // }\n// }\n\n// // if(successCSV[1] !== undefined){\n// //   successCSV[0] = successCSV[0].concat(successCSV[1]);\n// // }\n\n// // if(successCSV[2] !== undefined){\n// //   successCSV[0] = successCSV[0].concat(successCSV[2]);\n// // }\n// successCSV = successCSV[0];\n\n// // if(errorCSV[1] !== undefined){\n// //   errorCSV[0] = errorCSV[0].concat(errorCSV[1]);\n// // }\n\n// // if(errorCSV[2] !== undefined){\n// //   errorCSV[0] = errorCSV[0].concat(errorCSV[2]);\n// // }\n\n// errorCSV = errorCSV[0];\n\n// // reformat result merge duplicate records\n//   // var user;    \n//   // for(var i = 0 ; i < errorCSV.length ; ++i){\n//   //   str = errorCSV[i];\n//   //   firstUser = str.split('>')[1].split('<')[0];\n    \n//   //   for(var j=0; j < successCSV.length;++j){\n//   //     str = successCSV[j];\n//   //     secondUser = str.split('>')[1].split('<')[0];\n//   //     if(firstUser ===  secondUser){\n//   //       successCSV.splice(j,1);\n//   //     }\n//   //   }\n    \n//   // }\n  \n//   // for(var i=0 ; i < successCSV.length ; ++i){\n//   //   str = successCSV[i];\n//   //   firstUser =  str.split('>')[1].split('<')[0];\n    \n//   //   for(var j = i + 1 ; j< successCSV.length ; ++j){\n//   //     str = successCSV[j];\n//   //     secondUser = str.split('>')[1].split('<')[0];\n//   //     if(firstUser ===  secondUser){\n//   //       successCSV.splice(j,1);\n//   //   }\n//   // }\n//   // }\n  \n// // if(errorCSV.length !== undefined){\n// //   errorCSVLength = errorCSV.length;\n// // }\n\n// // if(successCSV.length !== undefined){\n// //   successCSVLength = successCSV.length;\n// // }\n\n// //end\n\n\n// let sync_result;\n\n// if(steps.InputParams.params.input.initialSync === true){\n  \n//   sync_result = {\n//     \"cards\":[] \n//   };\n  \n//   if(successCSVLength > 0){\n//     let successCard = {\n//         \"card\": {\n//             \"type\" : \"ACTION\",\n//             \"heading\" : \" \" + successCSVLength + \" out of \" + (successCSVLength + errorCSVLength) + \" records synced successfully\",\n//             \"listContent\": successCSV,\n//             \"icon\" : \"SUCCESS\"         \n//         },\n//         \"id\" : \"check2\",\n//         \"isCardDone\":\"true\"\n//       }\n//     sync_result.cards.push(successCard);\n//   }\n  \n//   if(errorCSVLength > 0){\n//     let errorCard = {\n//         \"card\": {\n//             \"type\" : \"ACTION\",\n//             \"heading\" : \" \" + errorCSVLength + \" out of \" +(successCSVLength + errorCSVLength) + \" records could not be synced\",\n//             \"subHeading\" : \"You could fix these errors and retry sync. Or you could go ahead and sync all records. We recommend that you fix these errors and retry sync.\",\n//             \"listContent\": errorCSV,\n//             \"icon\" : \"ERROR\"         \n//         },\n//         \"id\" : \"check3\",\n//         \"isCardDone\":\"true\"\n//       }\n//     sync_result.cards.push(errorCard);\n//   }\n  \n// }else{\n//   sync_result = {\n//     successCSVLength: successCSVLength,\n//     errorCSVLength: errorCSVLength,\n//     successCSV: successCSV,\n//     errorCSV: errorCSV\n//   };\n  \n//   // let listContent = [];\n//   // let errors = errorCSV;\n//   // let fullSyncRun_instance = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_FullSyncRun.instance || null;\n//   // let fullSyncProcessingCard_instance = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.formulas.formula_FullSyncProcessCard.instance || null;\n  \n//   // for(let i=0;i<errors.length;++i){\n  \n//   //   listContent.push({\n//   //             \"button\": {\n//   //               \"display\": \"IGNORE\",\n//   //               \"id\": \"ignore1\",\n//   //               \"popUp\": {\n//   //                   \"apiEndPoint\":{\n//   //                 \"apiUrl\":\"https://staging.cloud-elements.com/elements/api-v2/pipedrive/fullSyncRun\",\n//   //                 \"headers\": {\n//   //                   \"Elements-Formula-Instance-Id\": fullSyncRun_instance\n//   //                 },\n//   //                 \"input\": {\n//   //                       \"apiKey\": steps.InputParams.params.input.apiKey,\n//   //                       \"siteName\": steps.InputParams.params.input.siteName,\n//   //                       \"integrationName\": steps.InputParams.params.input.integrationName,\n//   //                       \"siteDomain\": steps.InputParams.params.input.siteDomain,\n//   //                       },\n//   //                 \"type\":\"GET\"\n//   //               },\n//   //                 \"cancelButton\": \"Dismiss\",\n//   //                 \"description\": \"Once this error is ignored, this record will not be synced to ActiveCampaign.\",\n//   //                 \"submitButton\": \"Yes, go ahead\",\n//   //                 \"title\": \"Are you sure you want to ignore?\",\n//   //                 \"type\": \"SIMPLE\",\n//   //                 \"usecase\": \"DANGER\"\n//   //               },\n//   //               \"type\": \"POP_UP\"\n//   //             }\n             \n//   //           });\n//   //   listContent[i].content = errors[i];\n//   //   listContent[i].button.popUp.apiEndPoint.input.ignoreIndex = i;\n//   //   listContent[i].button.id = \"ignore\" + (i+1);\n//   //   if(listContent.length>14){\n//   //     break;\n//   //   }\n//   // }\n\n//   // let currentTime = Math.round((new Date().getTime())/1000);\n//   // let syncStartTime = syncStatus.context.syncData.syncEnd;\n//   // if(syncStartTime===undefined){\n//   //   syncStartTime=syncStatus.context.syncData.previousSyncEnd;\n//   // }\n//   // let time = Math.round((currentTime-syncStartTime)/60);\n//   // sync_result = {\n//   //   \"icon\": \"/third_party/cn-xero.png\",\n//   //   \"unlink\": steps.InputParams.unlink,\n//   //   \"syncErrors\": [{\n//   //     \"card\": {\n//   //     \t\"id\":\"check3\",\n//   //       \"type\": \"ACTION3\",\n//   //       \"heading\": errorCSVLength +\" errors found  \",\n//   //       \"listActionContent\":listContent,\n//   //       \"buttons\":[\n//   //         {\n//   //           \"id\":\"download\",\n//   //           \"display\" : \"Download CSV\",\n//   //           \"icon\" : \"CLOUD_DOWNLOAD\",\n//   //           \"type\" : \"DIRECT_LINK\",\n//   //           \"url\": \"https://about:blank/\"\n//   //         },\n//   //         {\n//   //           \"id\":\"confirmation\",\n//   //           \"display\" : \"IGNORE ALL\",\n//   //           \"buttonLook\":\"EMPTY\",\n//   //           \"icon\" : \"CLOSE\",\n//   //           \"type\" : \"POP_UP\",\n//   //           \"popUp\":{\n//   //             \"type\":\"SIMPLE\",\n//   //             \"title\":\"Are you sure you want to ignore the errors?\",\n//   //             \"submitButton\":\"Yes, go ahead\",\n//   //             \"cancelButton\":\"Dismiss\",\n//   //             \"usecase\":\"DANGER\",\n//   //             \"description\":\"Subscription data of this customer will not be synced with Pipedrive\",\n//   //             \"apiEndPoint\":{\n//   //               \"apiUrl\":\"https://staging.cloud-elements.com/elements/api-v2/pipedrive/fullSyncRun\",\n//   //               \"headers\": {\n//   //                 \"Elements-Formula-Instance-Id\": fullSyncRun_instance\n//   //               },\n//   //               \"input\": {\n//   //                     \"apiKey\": steps.InputParams.params.input.apiKey,\n//   //                     \"siteName\": steps.InputParams.params.input.siteName,\n//   //                     \"integrationName\": steps.InputParams.params.input.integrationName,\n//   //                     \"siteDomain\": steps.InputParams.params.input.siteDomain,\n//   //                     \"ignoreAll\": \"true\",\n//   //                     \"totalRecordsSynced\":successCSVLength\n//   //                     },\n//   //               \"type\":\"GET\"\n//   //               }\n//   //             }\n//   //           }\n//   //         ]\n//   //       },\n//   //     \"id\" : \"sync_errors\",\n//   //     \"isCardDone\":\"true\"\n//   //     }],\n//   //   \"overview\": [{\n//   //     \"card\": {\n//   //         \"type\": \"ACTION2\",\n//   //         \"heading\": \"Last sync done\" + time + \" Minutes ago \",\n//   //         \"id\": \"check2\",\n//   //         \"subHeading\": successCSVLength + \"  customers and subscriptions synced with ActiveCampaign\",\n//   //         \"buttons\" :[\n//   //           {\n//   //             \"id\":\"sync\",\n//   //             \"display\" : \"Sync now\",\n//   //             \"icon\" : \"AUTO_RENEW\",\n//   //             \"type\" : \"DIRECT_LINK\",\n//   //             \"buttonLook\":\"EMPTY\",\n//   //             \"request\":{\n//   //               \"type\":\"ON_CLICK_GET_CARD\",\n//   //             \"apiEndPoint\": {\n//   //                 \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/pipedrive/syncProcessingCard\",\n//   //                 \"type\": \"GET\",\n//   //                 \"headers\": {\n//   //                     \"Elements-Formula-Instance-Id\": fullSyncProcessingCard_instance\n//   //                 },\n//   //                 \"input\":{\n//   //                     \"type\": steps.InputParams.params.input.integrationName,\n//   //                     \"siteDomain\": steps.InputParams.params.input.siteDomain,\n//   //                     \"api-key\": steps.InputParams.params.input.apiKey,\n//   //                     \"site-name\": steps.InputParams.params.input.siteName,\n//   //                     \"syncNowButtonClick\": \"syncNow\",\n//   //                     \"syncNow\": \"syncNow\"\n//   //                 }\n//   //             }\n//   //           }\n//   //         }\n//   //       ],\n//   //     },\n//   //     \"id\" : \"overview\",\n//   //     \"isCardDone\":\"true\"\n//   //   }]\n//   // };\n// }\n\n// done(sync_result);\n\ndone({\n  result : \"Dispatcher Done.\",\n  statusCode: 200\n})"}},{"id":236355,"onSuccess":["executionStatus_syncCustomersFormula"],"onFailure":[],"name":"syncCustomerFormulaDetails","type":"script","properties":{"body":"let syncCustomerExecutionDetails = {\n  \"excecutionId\":steps.triggerSyncCustomers.response.body[0].id,\n  \"instance\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncCustomers.instance,\n  \"formula\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncCustomers.id,\n  \"initialSync\": true\n};\n\n// let checkStatusParams = {\n//   url: \"/formulas/instances/executions/\"+ steps.triggerSyncCustomers.response.body[0].id\n// };\n\nlet password = \"\";\nlet checkStatusParams = {\n   auth:{\n      Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + steps.InputParams.params.input.password)\n    },\n    query:{\n      execution_id: steps.triggerSyncCustomers.response.body[0].id\n    },\n    url : \"https://\"+steps.InputParams.params.input.siteName+\".integrations.\"+steps.InputParams.params.input.siteDomain+\"/api/pipedrive/ipaasexecution\"\n   \n};\n\ndone({\n  syncCustomerExecutionDetails: syncCustomerExecutionDetails,\n  checkStatusParams: checkStatusParams\n});\n\n\n"}},{"id":236356,"onSuccess":["updateTpConfig_params"],"onFailure":["formulaInformation"],"name":"syncFormulaInstancesFound","type":"filter","properties":{"body":"if(steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncCustomers.instance === undefined){\n  done(false);\n}\n\nif(steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncSubscription.instance === undefined){\n  done(false);\n}\n\nif(steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncInvoice.instance === undefined){\n  done(false);\n}\n\ndone(true);"}},{"id":236357,"onSuccess":["executionStatus_syncInvoicesFormula"],"onFailure":[],"name":"syncInvoiceFormulaDetails","type":"script","properties":{"body":"let syncInvoiceExecutionDetails = {\n  \"excecutionId\":steps.triggerSyncInvoice.response.body[0].id,\n  \"instance\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncInvoice.instance,\n  \"formula\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncInvoice.id,\n  \"initialSync\": false\n};\n\n// let checkStatusParams = {\n//   url: \"/formulas/instances/executions/\"+ steps.triggerSyncInvoice.response.body[0].id\n// };\n\nlet checkStatusParams = {\n   auth:{\n      Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + steps.InputParams.params.input.password)\n    },\n    query:{\n      execution_id: steps.triggerSyncInvoice.response.body[0].id\n    },\n    url : \"https://\"+steps.InputParams.params.input.siteName+\".integrations.\"+steps.InputParams.params.input.siteDomain+\"/api/pipedrive/ipaasexecution\"\n   \n};\n\ndone({\n  syncInvoiceExecutionDetails: syncInvoiceExecutionDetails,\n  checkStatusParams: checkStatusParams\n});\n\n\n"}},{"id":236358,"onSuccess":["batchInvoiceDone"],"onFailure":["isBatchExecutionPending"],"name":"syncRulesForInvoice","type":"filter","properties":{"body":"let syncRulesDeals = steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.syncRulesDeals;\n\nif((syncRulesDeals === undefined) || ((syncRulesDeals.invCreated === \"option3\") && (syncRulesDeals.invCreated === \"option3\") && (syncRulesDeals.invDeleted === \"option3\") && (syncRulesDeals.invPaid === \"option3\"))){\n  done(false);\n}\n\ndone(true);"}},{"id":236359,"onSuccess":["batchSubscriptionDone"],"onFailure":["syncRulesForInvoice"],"name":"syncRulesForSubscription","type":"filter","properties":{"body":"let syncRulesDeals = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.syncRulesDeals;\n\nif((syncRulesDeals === undefined) || ((syncRulesDeals.subCreated === \"option3\") && (syncRulesDeals.subUpdated === \"option3\") && (syncRulesDeals.subResumed === \"option3\") && (syncRulesDeals.subPaused === \"option3\") && (syncRulesDeals.subDeleted === \"option3\") && (syncRulesDeals.subReactivated === \"option3\"))){\n  done(false);\n}\n\ndone(true);"}},{"id":236360,"onSuccess":["executionStatus_syncSubscriptionFormula"],"onFailure":[],"name":"syncSubscriptionFormulaDetails","type":"script","properties":{"body":"let syncSubscriptionExecutionDetails = {\n  \"excecutionId\":steps.triggerSyncSubscription.response.body[0].id,\n  \"instance\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncSubscription.instance,\n  \"formula\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncSubscription.id,\n  \"initialSync\": false\n};\n\n// let checkStatusParams = {\n//   url: \"/formulas/instances/executions/\"+ steps.triggerSyncSubscription.response.body[0].id\n// };\n\nlet checkStatusParams = {\n   auth:{\n      Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + steps.InputParams.params.input.password)\n    },\n    query:{\n      execution_id: steps.triggerSyncSubscription.response.body[0].id\n    },\n    url : \"https://\"+steps.InputParams.params.input.siteName+\".integrations.\"+steps.InputParams.params.input.siteDomain+\"/api/pipedrive/ipaasexecution\"\n   \n};\n\ndone({\n  syncSubscriptionExecutionDetails: syncSubscriptionExecutionDetails,\n  checkStatusParams: checkStatusParams\n});\n\n\n"}},{"id":236361,"onSuccess":["HasNextOffset"],"onFailure":[],"name":"TPData","type":"script","properties":{"body":"let TpList = steps.GetTpEntityDetails.response.body.list;\nlet customerSuccessCount = 0;\nlet customerErrorList = [];\nlet subscriptionSuccessCount = 0;\nlet subscriptionErrorList = [];\nlet invoiceSuccessCount = 0;\nlet invoiceErrorList = [];\n\nif( steps.TPData !== undefined){\n  customerSuccessCount = steps.TPData.customerSuccessCount;\n  subscriptionSuccessCount = steps.TPData.subscriptionSuccessCount;\n  invoiceSuccessCount = steps.TPData.invoiceSuccessCount;\n  customerErrorList = steps.TPData.customerErrorList;\n  subscriptionErrorList = steps.TPData.subscriptionErrorList;\n  invoiceErrorList = steps.TPData.invoiceErrorList;\n}\n\nTpList.map(item => item.third_party_entity_mapping).forEach(item => {\n  \n  if(item.status === \"synced\"){\n    if(item.entity_type === \"customer\"){\n      customerSuccessCount += 1;\n    }\n    else if(item.entity_type === \"subscription\"){\n      subscriptionSuccessCount += 1;\n    }\n    else {\n      invoiceSuccessCount += 1;\n    }\n  }\n  else{\n    \n    if(item.entity_type === \"customer\"){\n      customerErrorList.push(item.error_message)\n    }\n    else if(item.entity_type === \"subscription\"){\n      subscriptionErrorList.push(item.error_message)\n    }\n    else {\n      invoiceErrorList.push(item.error_message)\n    }\n    \n  }\n  \n})\n\n\ndone({\n  customerSuccessCount: customerSuccessCount,\n  subscriptionSuccessCount: subscriptionSuccessCount,\n  invoiceSuccessCount: invoiceSuccessCount,\n  customerErrorList: customerErrorList,\n  subscriptionErrorList: subscriptionErrorList,\n  invoiceErrorList: invoiceErrorList\n});"}},{"id":236362,"onSuccess":["GetTpEntityDetails"],"onFailure":["failedSyncParams"],"name":"TPEntityParams","type":"script","properties":{"body":"let apiKey = steps.InputParams.params.input.apiKey;\nlet siteName = steps.InputParams.params.input.siteName;\nlet siteDomain = steps.InputParams.params.input.siteDomain;\nlet type =  steps.InputParams.params.input.integrationName;\nlet password = \"\";\nlet startTime;\n\nlet syncStatus = steps.lastSyncDetails.response.body.third_party_sync_detail;\n\nif(steps.createNewSyncDetails !== undefined){\n syncStatus = steps.createNewSyncDetails.response.body.third_party_sync_detail;\n}\n\nlet formula = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements;\n\nstartTime = syncStatus.context.syncData.syncStart;\n  \nlet params = {\n        config: {\n            url: \"https://\" + siteName + \".\" + siteDomain + \"/api/v2/third_party_entity_mappings/list_all\",\n            auth: {\n                Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n            },\n            query: {\n                integration_name: type,\n                \"modified_at[after]\": startTime,\n                limit: 100\n            }\n        }\n};\n\n\nif(steps.TPEntityParams !== undefined){\n  params.config.query.offset = steps.GetTpEntityDetails.response.body.next_offset;\n}\n\ndone({ params: params });\n"}},{"id":236634,"onSuccess":["triggerNextBatch"],"onFailure":["failedSyncParams"],"name":"triggerDispatcher_NextBatch","type":"script","properties":{"body":"let dispatcherInstance = steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncDispatcher.instance;\n\nlet batchCount = (trigger.args['batchCount'] !== undefined) ? trigger.args['batchCount']+1 : 1;\n\nlet dispatcherTrigger = {\n  url: \"/formulas/instances/\"+dispatcherInstance+\"/executions\",\n  body:{\n    apiKey: steps.InputParams.params.input.apiKey,\n    siteName: steps.InputParams.params.input.siteName,\n    siteDomain: steps.InputParams.params.input.siteDomain,\n    integrationName: steps.InputParams.params.input.integrationName,\n    initialSync: steps.InputParams.params.input.initialSync,\n    batchExecution: \"pending\",\n    batchCount: batchCount\n  }\n};\n\ndone({\n  dispatcherTrigger: dispatcherTrigger\n});"}},{"id":236635,"onSuccess":[],"onFailure":["failedSyncParams"],"name":"triggerNextBatch","type":"request","properties":{"api":"${steps.triggerDispatcher_NextBatch.dispatcherTrigger.url}","method":"POST","body":"${steps.triggerDispatcher_NextBatch.dispatcherTrigger.body}"}},{"id":236363,"onSuccess":["syncCustomerFormulaDetails"],"onFailure":["failedSyncParams"],"name":"triggerSyncCustomers","type":"request","properties":{"retry":"false","method":"POST","api":"${steps.triggerSyncCustomersParams.triggerParams.url}","retryAttempts":"1","body":"${steps.triggerSyncCustomersParams.triggerParams.body}","retryDelay":"0"}},{"id":236364,"onSuccess":["triggerSyncCustomers"],"onFailure":[],"name":"triggerSyncCustomersParams","type":"script","properties":{"body":"let instanceId = steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncCustomers.instance || null;\n//Instance id of pipedriveSyncCustomers formula\n\nlet triggerParams = {\n  url: \"/formulas/instances/\"+instanceId+\"/executions\",\n  body: {\n    rules: steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.syncRulesContacts,\n    syncFields: steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.syncFields,\n    apiToken: steps.ConfigParams.config.pipedriveApiToken,\n    cbApiKey: steps.InputParams.params.input.apiKey,\n    cbPassword: steps.InputParams.params.input.password,\n    siteName: steps.InputParams.params.input.siteName,\n    siteDomain: steps.InputParams.params.input.siteDomain,\n    integrationName: steps.InputParams.params.input.integrationName,\n    initialSync: steps.InputParams.params.input.initialSync\n  }\n};\n\ndone({\n  triggerParams: triggerParams\n});\n\n"}},{"id":236365,"onSuccess":["syncInvoiceFormulaDetails"],"onFailure":["failedSyncParams"],"name":"triggerSyncInvoice","type":"request","properties":{"method":"POST","api":"${steps.triggerSyncInvoiceParams.triggerParams.url}","body":"${steps.triggerSyncInvoiceParams.triggerParams.body}"}},{"id":236366,"onSuccess":["triggerSyncInvoice"],"onFailure":[],"name":"triggerSyncInvoiceParams","type":"script","properties":{"body":"let instanceId = steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncInvoice.instance || null;\n//Instance id of pipedriveSyncInvoice formula\n\n// if(trigger.args.siteName === \"actcamp-test\"){\n//   instanceId = \"402932\";\n// }\n\nlet triggerParams = {\n  url: \"/formulas/instances/\"+instanceId+\"/executions\",\n  body: {\n    rules: steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.syncRulesDeals,\n    syncFields: steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.syncFields,\n    apiToken: steps.ConfigParams.config.pipedriveApiToken,\n    cbApiKey: steps.InputParams.params.input.apiKey,\n    cbPassword: steps.InputParams.params.input.password,\n    siteName: steps.InputParams.params.input.siteName,\n    siteDomain: steps.InputParams.params.input.siteDomain,\n    integrationName: steps.InputParams.params.input.integrationName,\n    initialSync: steps.InputParams.params.input.initialSync\n  }\n};\n\ndone({\n  triggerParams: triggerParams\n});"}},{"id":236367,"onSuccess":["syncSubscriptionFormulaDetails"],"onFailure":["failedSyncParams"],"name":"triggerSyncSubscription","type":"request","properties":{"method":"POST","api":"${steps.triggerSyncSubscriptionParams.triggerParams.url}","body":"${steps.triggerSyncSubscriptionParams.triggerParams.body}"}},{"id":236368,"onSuccess":["triggerSyncSubscription"],"onFailure":[],"name":"triggerSyncSubscriptionParams","type":"script","properties":{"body":"let instanceId = steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_SyncSubscription.instance || null;\n//Instance id of pipedriveSyncSubscription formula\n\n// if(trigger.args.siteName === \"actcamp-test\"){\n//   // instanceId = \"402659\";\n//   instanceId = \"404012\";\n// }\n\nlet triggerParams = {\n  url: \"/formulas/instances/\"+instanceId+\"/executions\",\n  body: {\n    rules: steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.syncRulesDeals,\n    syncFields: steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.syncFields,\n    apiToken: steps.ConfigParams.config.pipedriveApiToken,\n    cbApiKey: steps.InputParams.params.input.apiKey,\n    cbPassword: steps.InputParams.params.input.password,\n    siteName: steps.InputParams.params.input.siteName,\n    siteDomain: steps.InputParams.params.input.siteDomain,\n    integrationName: steps.InputParams.params.input.integrationName,\n    initialSync: steps.InputParams.params.input.initialSync\n  }\n};\n\ndone({\n  triggerParams: triggerParams\n});\n"}},{"id":236369,"onSuccess":["ConfigParams"],"onFailure":[],"name":"updateConfiguration","type":"script","properties":{"body":"let OAuth_Parameters = {\n  \"OAuthDetails\": steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.OAuth_Parameters\n};\n\nOAuth_Parameters.OAuthDetails.access_token = steps.getNewToken.response.body.token_type + \" \" + steps.getNewToken.response.body.access_token;\nOAuth_Parameters.OAuthDetails.expiry_time = Math.round((new Date().getTime())/1000) + Number(steps.getNewToken.response.body.expires_in);\nOAuth_Parameters.OAuthDetails.refresh_token = steps.getNewToken.response.body.refresh_token;\nOAuth_Parameters.OAuthDetails.scope = steps.getNewToken.response.body.scope;\nOAuth_Parameters.OAuthDetails.token_type = steps.getNewToken.response.body.token_type;\n\n// let OAuthData = null;\n\n// for(var i=0; i < result.length; i++){\n//   if(result[i]['key'] === \"Success.result\"){\n//     OAuthData = JSON.parse(result[i]['value']);\n//     break;\n//   }\n// }\n\n// if(OAuthData !== null){\n//   steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.OAuth_Parameters = OAuthData.OAuthDetails;\n// }\n\n\ndone({\n  OAuthData: OAuth_Parameters\n});"}},{"id":236370,"onSuccess":["updateThirdPartyInstance"],"onFailure":[],"name":"updateElementInstanceParams","type":"script","properties":{"body":"let thirdPartyElementId = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.thirdParty.instance || null;\n\nlet config = steps.getThirdPartyInstanceDetails.response.body;\n\nlet accessToken  = steps.getNewToken.response.body.access_token;\nlet tokenType = steps.getNewToken.response.body.token_type;\n\nconfig.configuration['access_token'] = tokenType + \" \" + accessToken;\n\nlet updateParams={\n  url: \"/instances/\"+thirdPartyElementId,\n  body: config\n};\n\ndone({\n  updateParams: updateParams\n});"}},{"id":236371,"onSuccess":["updateSyncSuccess"],"onFailure":["failedSyncParams"],"name":"updateStatus","type":"script","properties":{"body":"let customerErrorList = steps.TPData.customerErrorList;\nlet subscriptionErrorList = steps.TPData.subscriptionErrorList;\nlet invoiceErrorList = steps.TPData.invoiceErrorList;\nlet errorList = customerErrorList.concat(subscriptionErrorList).concat(invoiceErrorList);\n\nlet successCSVLength = steps.TPData.customerSuccessCount + steps.TPData.invoiceSuccessCount + steps.TPData.subscriptionSuccessCount;\nlet errorCSVLength = steps.TPData.subscriptionErrorList.length + steps.TPData.invoiceErrorList.length + steps.TPData.customerErrorList.length;\n\nlet tpSyncId = (steps.createNewSyncDetails !== undefined) ? steps.createNewSyncDetails.response.body.third_party_sync_detail.id : steps.lastSyncDetails.response.body.third_party_sync_detail.id;\n\n\nlet updateSuccessUrl = {\n    url: \"https://\" + steps.InputParams.params.input.siteName + \".\" + steps.InputParams.params.input.siteDomain + \"/api/v2/third_party_sync_details/\" + tpSyncId,\n    auth: {\n        Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n    },\n    query: {\n        'third_party_configuration[integration_name]': steps.InputParams.params.input.integrationName\n    }\n};\n\nlet context = {\n    \"excecutionId\": info.formulaExecutionId,\n    \"instance\": info.formulaInstanceId,\n    \"formula\": info.formulaId,\n    \"initialSync\": steps.InputParams.params.input.initialSync,\n    \"totalRecords\": parseInt(successCSVLength + errorCSVLength),\n    \"successRecord\": successCSVLength,\n    \"errorRecord\": errorCSVLength,\n    \"sync_context_messages\": [(successCSVLength + errorCSVLength) + \" Customers processed (\" + successCSVLength + \" created, \" + errorCSVLength + \" not synced)\"]\n};\n\n\n\ncontext.syncData = {\n    syncStart: Math.round((info.formulaStartTime) / 1000),\n    syncEnd: Math.round((new Date().getTime()) / 1000)\n};\nif (steps.lastSyncDetails.response.body.third_party_sync_detail.context.syncData !== undefined) {\n    let lastSyncData = steps.lastSyncDetails.response.body.third_party_sync_detail.context;\n    context.syncData.previousSyncStart = (lastSyncData.syncData !== undefined) ? lastSyncData.syncData.syncStart : undefined;\n    context.syncData.previousSyncEnd = (lastSyncData.syncData !== undefined) ? lastSyncData.syncData.syncEnd : undefined;\n}\n\nupdateSuccessUrl.query.context = JSON.stringify(context);\nupdateSuccessUrl.query.status = \"succeeded\";\n\n//******************************\n\n\nlet id;\nlet errorCSV = \"Id\" + \",\" + \"Error Description\\n\";\nlet msg;\nif (errorList.length !== 0) {\n    for (let i = 0; i < errorList.length; ++i) {\n        msg = errorList[i].split('>').pop().split('-').pop();\n        id = errorList[i].split('>')[1].split('<')[0];\n        errorCSV = errorCSV + id + \",\" + msg;\n    }\n}\n\nlet uploadCSVEndpoint = {\n    url: \"https://\" + steps.InputParams.params.input.siteName + \".integrations.\" + steps.InputParams.params.input.siteDomain + \"/integrations/api/file_upload\",\n    auth: {\n        Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\"),\n        \"Content-Type\": \"application/json\"\n    },\n    query: {\n        api_key: steps.InputParams.params.input.apiKey,\n        site_name: steps.InputParams.params.input.siteName,\n        integ_name: steps.InputParams.params.input.integrationName,\n        file_type: \"csv\",\n        log_type: \"Validation\"\n    },\n    body: {\n        file_content: errorCSV\n    }\n    \n};\n//******************************\n\n\ndone({\n    input: updateSuccessUrl,\n    successCSVLength: successCSVLength,\n    errorCSVLength: errorCSVLength,\n    syncStart: context.syncData.syncStart,\n    syncEnd: context.syncData.syncEnd,\n    uploadCSVEndpoint: uploadCSVEndpoint\n});\n\n"}},{"id":236372,"onSuccess":["updateTpConfigParams_2"],"onFailure":["Failed"],"name":"updateSyncStatus_Failed","type":"httpRequest","properties":{"retry":"true","url":"${steps.failedSyncParams.payload.url}","method":"POST","query":"${steps.failedSyncParams.payload.body}","retryAttempts":"5","headers":"${steps.failedSyncParams.payload.auth}","retryDelay":"200"}},{"id":236373,"onSuccess":["batchCustomersDone"],"onFailure":["failedSyncParams"],"name":"updateSyncStatus_Running","type":"httpRequest","properties":{"retry":"true","method":"POST","url":"${steps.runningSyncParams.payload.url}","query":"${steps.runningSyncParams.payload.body}","retryAttempts":"5","headers":"${steps.runningSyncParams.payload.auth}","retryDelay":"200"}},{"id":236374,"onSuccess":["isUploadCSV"],"onFailure":["failedSyncParams"],"name":"updateSyncSuccess","type":"httpRequest","properties":{"retry":"true","method":"POST","url":"${steps.updateStatus.input.url}","query":"${steps.updateStatus.input.query}","retryAttempts":"5","headers":"${steps.updateStatus.input.auth}","retryDelay":"200"}},{"id":236375,"onSuccess":["updateConfiguration"],"onFailure":[],"name":"updateThirdPartyInstance","type":"request","properties":{"method":"PUT","api":"${steps.updateElementInstanceParams.updateParams.url}","body":"${steps.updateElementInstanceParams.updateParams.body}"}},{"id":236376,"onSuccess":["lastSyncDetails"],"onFailure":["Failed"],"name":"updateTpConfig","type":"httpRequest","properties":{"retry":"true","method":"POST","url":"${steps.updateTpConfig_params.updateTpConfigParams.url}","retryAttempts":"5","body":"${steps.updateTpConfig_params.updateTpConfigParams.body}","headers":"${steps.updateTpConfig_params.updateTpConfigParams.headers}","retryDelay":"200"}},{"id":236377,"onSuccess":["Success"],"onFailure":["failedSyncParams"],"name":"updateTpConfig_1","type":"httpRequest","properties":{"url":"${steps.updateTpConfigParams_1.updateTpConfigParams.url}","method":"POST","body":"${steps.updateTpConfigParams_1.updateTpConfigParams.body}","headers":"${steps.updateTpConfigParams_1.updateTpConfigParams.headers}"}},{"id":236472,"onSuccess":["Failed"],"onFailure":["Failed"],"name":"updateTpConfig_2","type":"httpRequest","properties":{"url":"${steps.updateTpConfigParams_2.updateTpConfigParams.url}","method":"POST","body":"${steps.updateTpConfigParams_2.updateTpConfigParams.body}","headers":"${steps.updateTpConfigParams_2.updateTpConfigParams.headers}"}},{"id":236378,"onSuccess":["updateTpConfig"],"onFailure":[],"name":"updateTpConfig_params","type":"script","properties":{"body":"let configJson = steps.ConfigParams.tpConfig.third_party_configuration.config_json;\nlet updateTpConfigParams = steps.InputParams.updateTpConfigParams;\n\nconfigJson.cloudElements.formulas.formula_InitialSyncRun.dispatcherExecutionId = info.formulaExecutionId;\n\nconfigJson.cloudElements.formulas.formula_FullSyncRun.dispatcherExecutionId = info.formulaExecutionId;\n\n\nif(trigger.args['newBatch'] !== undefined){\n  if(trigger.args['newBatch'] === true && steps.InputParams.params.input.initialSync === false){ //When a call is made from Full Sync Button, Clear offset values\n      configJson.batch.sync_customer.change_subscription = undefined;\n      configJson.batch.sync_customer.get_customer = undefined;\n      configJson.batch.sync_customer.get_error = undefined;\n      \n      \n      configJson.batch.sync_subscription.change_subscription = undefined;\n      configJson.batch.sync_subscription.get_error = undefined;\n      \n      \n      configJson.batch.sync_invoice.change_invoice = undefined;\n      configJson.batch.sync_invoice.get_error = undefined;\n      \n      \n      configJson.batch.status = \"NOT_CONFIGURED\";\n  }\n}\n\nif(steps.instanceIdList !== undefined){\n  configJson.cloudElements.formulas.formula_SyncCustomers.instance = steps.instanceIdList.instanceIds.formula_SyncCustomers;\n  configJson.cloudElements.formulas.formula_SyncSubscription.instance = steps.instanceIdList.instanceIds.formula_SyncSubscription;\n  configJson.cloudElements.formulas.formula_SyncInvoice.instance = steps.instanceIdList.instanceIds.formula_SyncInvoice;\n}\n\n// if(trigger.args['siteName'] === \"actcamp-test\"){\n//   configJson.batch.batch_size = \"1000\";\n// }\n\nupdateTpConfigParams.body.config_json = configJson;\n\n\ndone({\n  updateTpConfigParams : updateTpConfigParams\n});"}},{"id":236379,"onSuccess":["updateTpConfig_1"],"onFailure":[],"name":"updateTpConfigParams_1","type":"script","properties":{"body":"let configJson = steps.getTpConfig.response.body.third_party_configuration.config_json;\nlet updateTpConfigParams = steps.InputParams.updateTpConfigParams;\n\nlet successCSVLength = steps.updateStatus.successCSVLength;\nlet errorCSVLength = steps.updateStatus.errorCSVLength;\n\nconfigJson.batch.sync_customer.change_subscription = undefined;\nconfigJson.batch.sync_customer.get_customer = undefined;\nconfigJson.batch.sync_customer.get_error = undefined;\n\nconfigJson.batch.sync_subscription.change_subscription = undefined;\nconfigJson.batch.sync_subscription.get_error = undefined;\n\nconfigJson.batch.sync_invoice.change_invoice = undefined;\nconfigJson.batch.sync_invoice.get_error = undefined;\n\nif(steps.InputParams.params.input.initialSync === false){\n  if(configJson.cloudElements.formulas.formula_FullSyncRun.lastSyncTime === undefined){\n    configJson.cloudElements.formulas.formula_FullSyncRun.firstFullSyncEndTime = (steps.updateStatus.syncEnd !== undefined) ? steps.updateStatus.syncEnd : Math.round((new Date().getTime())/1000);\n  }\n\n  configJson.cloudElements.formulas.formula_FullSyncRun.lastSyncDetails = {\n    \"errorCSVLength\" : errorCSVLength,\n    \"successCSVLength\" : successCSVLength\n  };\n  \n  let csvFileId = (steps.UploadCSV.response.body.s3_link !== undefined) ? steps.UploadCSV.response.body.s3_link : null;\n  \n  configJson.cloudElements.formulas.formula_FullSyncRun.csvFileId = csvFileId;\n  configJson.cloudElements.formulas.formula_FullSyncRun.status = \"SUCCESS\";\n  configJson.cloudElements.formulas.formula_FullSyncRun.lastSyncTime = (steps.updateStatus.syncEnd !== undefined) ? steps.updateStatus.syncEnd : Math.round((new Date().getTime())/1000);\n  configJson.batch.status = \"SUCCESS\"; //Only if Full Sync\n}\n\nupdateTpConfigParams.body.config_json = configJson;\n\ndone({\n  updateTpConfigParams : updateTpConfigParams\n});"}},{"id":236471,"onSuccess":["updateTpConfig_2"],"onFailure":["Failed"],"name":"updateTpConfigParams_2","type":"script","properties":{"body":"let tpConfig = (steps.ConfigParams.tpConfig.third_party_configuration !== undefined) ? steps.ConfigParams.tpConfig.third_party_configuration.config_json : null;\n\n\ntpConfig.batch.sync_customer.change_subscription = undefined;\ntpConfig.batch.sync_customer.get_customer = undefined;\ntpConfig.batch.sync_customer.get_error = undefined;\n\ntpConfig.batch.sync_subscription.change_subscription = undefined;\ntpConfig.batch.sync_subscription.get_error = undefined;\n\ntpConfig.batch.sync_invoice.change_invoice = undefined;\ntpConfig.batch.sync_invoice.get_error = undefined;\n\nif(steps.InputParams.params.input.initialSync === false){\n  tpConfig.batch.status = \"FAILED\";\n}\n\n\nlet updateTpConfigParams = steps.InputParams.updateTpConfigParams;\nupdateTpConfigParams.body.config_json = tpConfig;\n\n\ndone({\n  updateTpConfigParams : updateTpConfigParams\n});"}},{"id":236380,"onSuccess":["updateTpConfigParams_1"],"onFailure":["failedSyncParams"],"name":"UploadCSV","type":"httpRequest","properties":{"method":"POST","url":"${steps.updateStatus.uploadCSVEndpoint.url}","query":"${steps.updateStatus.uploadCSVEndpoint.query}","body":"${steps.updateStatus.uploadCSVEndpoint.body}","headers":"${steps.updateStatus.uploadCSVEndpoint.auth}"}}],"triggers":[{"id":27244,"onSuccess":["InputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"configuration":[]}