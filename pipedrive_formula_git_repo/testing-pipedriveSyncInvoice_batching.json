{"id":30755,"name":"testing-pipedriveSyncInvoice_batching","userId":27893,"accountId":24428,"createdDate":"2019-10-17T06:27:53Z","steps":[{"id":236109,"onSuccess":["addNoteFailed"],"onFailure":["addNoteFailed"],"name":"addNote","type":"httpRequest","properties":{"query":"","body":"${steps.noteParams.noteConfig.body}","url":"${steps.noteParams.noteConfig.url}","headers":"${steps.noteParams.noteConfig.header}","acceptableStatusCodes":"200,201,401,500","method":"POST"}},{"id":236110,"onSuccess":["addNote2Failed"],"onFailure":["addNote2Failed"],"name":"addNote2","type":"httpRequest","properties":{"query":"","body":"${steps.noteParams2.noteConfig.body}","url":"${steps.noteParams2.noteConfig.url}","headers":"${steps.noteParams2.noteConfig.header}","acceptableStatusCodes":"200,201,401,500","method":"POST"}},{"id":240207,"onSuccess":["loopOverChangedInvoice"],"onFailure":["InvalidAccessToken"],"name":"addNote2Failed","type":"filter","properties":{"body":"done(steps.addNote2.response.code === 200);"}},{"id":236111,"onSuccess":["addNote3Failed"],"onFailure":["addNote3Failed"],"name":"addNote3","type":"httpRequest","properties":{"query":"${steps.noteParams3.noteConfig.query}","body":"${steps.noteParams3.noteConfig.body}","url":"${steps.noteParams3.noteConfig.url}","headers":"${steps.noteParams3.noteConfig.header}","acceptableStatusCodes":"200,201,401,500","method":"POST"}},{"id":240208,"onSuccess":["loopOverChangedInvoice"],"onFailure":["InvalidAccessToken"],"name":"addNote3Failed","type":"filter","properties":{"body":"done(steps.addNote3.response.code === 200);"}},{"id":236112,"onSuccess":["loopOverExistingDeals"],"onFailure":["InvalidAccessToken_1"],"name":"addNote4","type":"httpRequest","properties":{"body":"${steps.noteParams4.noteConfig.body}","url":"${steps.noteParams4.noteConfig.url}","headers":"${steps.noteParams4.noteConfig.header}","acceptableStatusCodes":"200,201","method":"POST"}},{"id":240229,"onSuccess":["loopOverChangedInvoice"],"onFailure":["InvalidAccessToken"],"name":"addNoteFailed","type":"filter","properties":{"body":"done(steps.addNote.response.code === 200 || steps.addNote.response.code === 201);"}},{"id":236113,"onSuccess":["noteParams"],"onFailure":["loopOverChangedInvoice"],"name":"addNotesConfigured","type":"filter","properties":{"body":"done(steps.ConfigParams.config.params.addNotes);"}},{"id":236114,"onSuccess":["noteParams2"],"onFailure":["loopOverChangedInvoice"],"name":"addNotesConfigured2","type":"filter","properties":{"body":"if(steps.defineAction.only_value_update !== undefined && steps.defineAction.only_value_update === true){\n  done(false);\n}\n\ndone(steps.ConfigParams.config.params.addNotes);"}},{"id":236115,"onSuccess":["noteParams3"],"onFailure":["loopOverChangedInvoice"],"name":"addNotesConfigured3","type":"filter","properties":{"body":"done(steps.ConfigParams.config.params.addNotes);"}},{"id":236116,"onSuccess":["noteParams4"],"onFailure":["loopOverExistingDeals"],"name":"addNotesConfigured4","type":"filter","properties":{"body":"done(steps.ConfigParams.config.params.addNotes);"}},{"id":236117,"onSuccess":["noSubscriptionFoundParams"],"onFailure":["loopOverSubStatusArray"],"name":"allSubscriptionStatusChecked","type":"filter","properties":{"body":"if(steps.fetchInvoiceChargebee.request.query.status === \"cancelled\"){\n  done(true);\n}else{\n  done(false);\n}"}},{"id":236118,"onSuccess":[],"onFailure":[],"name":"ApiError","type":"script","properties":{"body":"let message = \"Error on Sync Invoice Formula\";\n\nif((steps.updateTpConfig_3 !== undefined) && (steps.updateTpConfig_3.response.code !== 200)){\n  message = \"chargebeeUpdate API Failed\";\n}\n\nif((steps.updateTpConfig_2 !== undefined) && (steps.updateTpConfig_2.response.code !== 200)){\n  message = \"chargebeeUpdate API Failed API Failed\";\n}\n\nif((steps.requestNewPipedriveToken !== undefined) && (steps.requestNewPipedriveToken.response.code !== 200)){\n  message = \"requestNewPipedriveToken API Failed\";\n}\n\nif((steps.getDetailsOfDeal1 !== undefined) && (steps.getDetailsOfDeal1.response.code !== 200)){\n  message = \"getDetailsOfDeal1 API Failed\";\n}\n\nif((steps.updateDealPipedrive !== undefined) && (steps.updateDealPipedrive.response.code !== 200)){\n  message = \"updateDealPipedrive API Failed\";\n}\n\nif((steps.createDealPipedrive2 !== undefined) && (steps.createDealPipedrive2.response.code !== 200)){\n  message = \"createDealPipedrive API Failed\";\n}\n\n//\nif((steps.createDealPipedrive !== undefined) && (steps.createDealPipedrive.response.code !== 200)){\n  message = \"createDealPipedrive API Failed\";\n}\n\nif((steps.requestNewPipedriveToken1 !== undefined) && (steps.requestNewPipedriveToken1.response.code !== 200)){\n  message = \"requestNewPipedriveToken API Failed\";\n}\n\nif((steps.updateExistingDeal !== undefined) && (steps.updateExistingDeal.response.code !== 200)){\n  message = \"updateExistingDeal API Failed\";\n}\n//\n\nif((steps.getExistingDealsInPipedrive !== undefined) && (steps.getExistingDealsInPipedrive.response.code !== 200)){\n  message = \"getExistingDealsInPipedrive API Failed\";\n}\n\nif((steps.fetchChangedInvoice !== undefined) && (steps.fetchChangedInvoice.response.code !== 200)){\n  message = \"fetchChangedInvoice API Failed\";\n}\n\nif((steps.createDealField !== undefined) && (steps.createDealField.response.code !== 200)){\n  message = \"createDealField API Failed\";\n}\n\nif((steps.getDealFieldsPipedrive !== undefined) && (steps.getDealFieldsPipedrive.response.code !== 200)){\n  message = \"getDealFieldsPipedrive API Failed\";\n}\n\nif((steps.getTpConfig !== undefined) && (steps.getTpConfig.response.code !== 200)){\n  message = \"getTpConfig API Failed\";\n}\n\nif((steps.retrieveTpEntityMappingForDeal2 !== undefined) && (steps.retrieveTpEntityMappingForDeal2.response.code !== 200)){\n  message = \"ThirdParty Entity Mapping API Failed\";\n}\n\nif((steps.retrieveTpEntityMappingForDeal !== undefined) && (steps.retrieveTpEntityMappingForDeal.response.code !== 200)){\n  message = \"ThirdParty Entity Mapping API Failed\";\n}\n\n\ndone({\n  message: message\n});"}},{"id":236119,"onSuccess":[],"onFailure":[],"name":"asdad","type":"script","properties":{"body":"asdsadsa"}},{"id":236631,"onSuccess":[],"onFailure":[],"name":"BatchSuccess","type":"script","properties":{"body":"done(true);"}},{"id":236120,"onSuccess":["noDataToSync"],"onFailure":[],"name":"CBList","type":"script","properties":{"body":"let invoiceList = (steps.invoiceList.contactList !== undefined) ? steps.invoiceList.contactList : null;\nlet errorList;\n\nif(steps.ErrorList !== undefined && steps.ErrorList.invoiceList.length > 0){\n  errorList = steps.ErrorList.invoiceList;\n  invoiceList = (invoiceList !== undefined) ? invoiceList.concat(errorList): errorList;\n}\n\n//-- Function to remove multiple records for same customer_id. Latest one will be retained\n\nfunction unixTime(unixtime) {\n\n    var u = new Date(unixtime*1000);\n\n      return u.getUTCFullYear() +\n        '-' +  ('0' + ( Number(u.getUTCMonth()) + 1))+\n        '-' + ('0' + u.getUTCDate()).slice(-2) + \n        ' ' + ('0' + u.getUTCHours()).slice(-2) +\n        ':' + ('0' + u.getUTCMinutes()).slice(-2) +\n        ':' + ('0' + u.getUTCSeconds()).slice(-2) ;\n    }\n\nconst sortDate = array => array.sort((A, B) => new Date(unixTime(A.invoice.updated_at))*1 - new Date(unixTime(B.invoice.updated_at))*1)\nconst filter = array => [...new Map(array.map(x => [x.invoice.customer_id, x])).values()]\nconst outputRaw = filter(invoiceList);\nconst outputSorted = sortDate(filter(sortDate(invoiceList)));\n\n//---------------\n\ndone({\n  list: outputSorted\n});\n"}},{"id":236121,"onSuccess":["CBList"],"onFailure":["GetErrorParams"],"name":"CheckErrorRecords","type":"filter","properties":{"body":"let contactLength = steps.invoiceList.contactList.length || 0;\nlet batch_size = steps.ConfigParams.tpConfig.third_party_configuration.config_json.batch.batch_size || 0;\n\nlet syncData = steps.LastSyncDetails.response.body.third_party_sync_detail.context.syncData || undefined;\n\nif(syncData !== undefined && syncData.previousSyncStart !== undefined && syncData.previousSyncEnd !== undefined){\n  if(steps.GetTpError.response.body.list.length === 0){\n    done(true);\n  }else if(contactLength >= batch_size){\n    done(true);\n  }\n  done(false);\n}\ndone(true);"}},{"id":236122,"onSuccess":["CustomFieldParamsForErrorRecords"],"onFailure":["CBList"],"name":"CheckOffset","type":"filter","properties":{"body":"done(steps.GetFailedInvoices.response.body.next_offset !== undefined);"}},{"id":236123,"onSuccess":["TransformInvoiceIds"],"onFailure":["GetErrorParams"],"name":"CheckOffsetValue","type":"filter","properties":{"body":"let contactLength = steps.invoiceList.contactList.length || 0;\nlet ids = steps.FailedToSync.invoiceIds.length || 0;\nlet batch_size = steps.ConfigParams.tpConfig.third_party_configuration.config_json.batch.batch_size || 0;\n\nif(steps.GetError.response.body.next_offset === undefined || batch_size <= (contactLength + ids)){\n  done(true);\n}\ndone(false);"}},{"id":236124,"onSuccess":["fetchInvoiceParams"],"onFailure":[],"name":"clearInvoiceInformation","type":"script","properties":{"body":"if(steps.invoiceInformation !== undefined){\n  steps.invoiceInformation.invoiceData = null;\n  steps.invoiceInformation.customerId = null;\n}\n\ndone(true);"}},{"id":236125,"onSuccess":["LastSyncDetails"],"onFailure":[],"name":"ConfigParams","type":"script","properties":{"body":"let config = {\n  params: steps.InputParams.input,\n  apiToken: steps.InputParams.input.apiToken,\n  records:{\n    customerIds :[],\n    customerSyncedIds:[],\n    errorCSV:[],\n    successCSV:[]\n  }\n}\n\nlet tpConfig = null;\n\nif(steps.getTpConfig.response.body.third_party_configuration !== undefined){\n  tpConfig = steps.getTpConfig.response.body;\n}\n\nif(steps.updateConfiguration !== undefined){\n  if(steps.updateConfiguration.OAuthData !== null){\n    tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters = steps.updateConfiguration.OAuthData.OAuthDetails;\n  }\n}\n\nlet syncRulesDeals = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.syncRulesDeals;\n\nconfig.params.events[0]['invoice_created']['pipeline'] = Number(syncRulesDeals.invCreatedPipeline) || 1;\nconfig.params.events[0]['invoice_created']['stage'] = Number(syncRulesDeals.invCreatedStage) || 1;\n\nconfig.params.events[0]['invoice_paid']['pipeline'] = Number(syncRulesDeals.invDeletedPipeline) || 1;\nconfig.params.events[0]['invoice_paid']['stage'] = Number(syncRulesDeals.invDeletedStage) || 1;\n\nconfig.params.events[0]['invoice_voided']['pipeline'] = Number(syncRulesDeals.invPaidPipeline) || 1;\nconfig.params.events[0]['invoice_voided']['stage'] = Number(syncRulesDeals.invPaidStage) || 1;\n\nconfig.params.events[0]['invoice_deleted']['pipeline'] = Number(syncRulesDeals.invVoidedPipeline) || 1;\nconfig.params.events[0]['invoice_deleted']['stage'] = Number(syncRulesDeals.invVoidedStage) || 1;\n\nlet invoiceFields = [\"CB_Invoice_ID\",\"CB_Invoice_Status\",\"Value\"];\n\nlet customFieldMap = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.customFieldMap || {\n    \"customerFields\":{},\n    \"organizationFields\":{},\n    \"dealFields\":{}\n  };\n\nconfig.dealFieldsApiConfig = {\n    url: \"https://api-proxy.pipedrive.com/dealFields\",\n    headers : {\n      \"Authorization\": tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n    }\n};\n\nlet getAccountInfomationPipedrive = {\n  url: \"https://api-proxy.pipedrive.com/users/me\",\n  headers : {\n    \"Authorization\": tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  }\n}\n\n\ndone({\n  tpConfig: tpConfig,\n  config: config,\n  customFieldMap: customFieldMap,\n  invoiceFields: invoiceFields,\n  getAccountInfomationPipedrive: getAccountInfomationPipedrive\n});"}},{"id":236126,"onSuccess":["updateTpEntityParams_2"],"onFailure":["InvalidAccessToken"],"name":"createDealAuthError","type":"filter","properties":{"body":"if(steps.createDealPipedrive.response.code === 200){\n  done(true);\n}\n\ndone(false);"}},{"id":236127,"onSuccess":["updateTpEntityParams_4"],"onFailure":["InvalidAccessToken"],"name":"createDealAuthError2","type":"filter","properties":{"body":"if(steps.createDealPipedrive2.response.code === 200){\n  done(true);\n}\n\ndone(false);"}},{"id":236128,"onSuccess":[],"onFailure":[],"name":"createDealFailed2","type":"script","properties":{"body":"let customer_id = steps.invoiceInformation.invoiceData['invoice']['customer_id'];\n\nlet chargebee_data_url = \"/admin-console/customers/\"+customer_id;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"'>\"+customer_id+\"</a>\"\n\nsteps.ConfigParams.config.records.errorCSV.push(cb_link + \",Failed to Create Invoice\");\n\ndone(steps.ConfigParams.config.records.errorCSV);"}},{"id":236129,"onSuccess":["isAuthErrorCreateDealField"],"onFailure":["isAuthErrorCreateDealField"],"name":"createDealField","type":"httpRequest","properties":{"retryDelay":"200","retryStatusCodes":"401","body":"${steps.loopOverDealFieldsToCreate.entry}","url":"${steps.ConfigParams.config.dealFieldsApiConfig.url}","headers":"${steps.ConfigParams.config.dealFieldsApiConfig.headers}","acceptableStatusCodes":"200,401","retry":"true","method":"POST","retryAttempts":"5"}},{"id":236130,"onSuccess":["dealFieldInformation"],"onFailure":[],"name":"createDealFieldOld123","type":"elementRequest","properties":{"body":"${steps.loopOverDealFieldsToCreate.entry}","api":"${steps.ConfigParams.config.dealFieldsApiConfig.url}","method":"POST","elementInstanceId":"${config.pipedrive}"}},{"id":236131,"onSuccess":["createDealPipedrive"],"onFailure":[],"name":"createDealParams","type":"script","properties":{"body":"let fieldNameInvoiceId = steps.ConfigParams.customFieldMap.dealFields.CB_Invoice_ID;\nlet fieldNameInvoiceStatus = steps.ConfigParams.customFieldMap.dealFields.CB_Invoice_Status || null;\n\n// let pipedrive_id = steps.loopOverPersons.entry['id'];\n\nlet pipedrive_id = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.third_party_entity_id;\n\n// let invoiceData = steps.invoiceInformation.invoiceData;\n\nlet invoiceData = steps.loopOverChangedInvoice.entry.invoice;\n\nlet invoice_id = invoiceData.id;\nlet currency_code = invoiceData.currency_code;\nlet invoice_status = invoiceData.status;\nlet invoice_amount = parseFloat(parseInt(invoiceData.total, 10) / 100).toFixed(2);\n\nlet createDealConfig = {\n  url: 'https://api-proxy.pipedrive.com/deals',\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  },\n  body:{\n    title: \"Chargebee Invoice ID: \" + invoice_id,\n    currency: currency_code,\n    person_id: pipedrive_id,\n  }\n}\n\nif(steps.ConfigParams.config.params.updateDealValueInvAmount === true){\n  createDealConfig.body.value = invoice_amount;\n}\n\nif(steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource['org_id'] !== undefined){\n  let organization_id = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource['org_id'];\n  createDealConfig.body.org_id = organization_id;\n}\n\nif(steps.ConfigParams.config.params.events[0]['invoice_created']['stage'] !== undefined){\n  let stage_id = steps.ConfigParams.config.params.events[0]['invoice_created']['stage'];\n  createDealConfig.body.stage_id = stage_id;\n}\n\nif(fieldNameInvoiceId !== undefined){\n  createDealConfig.body[fieldNameInvoiceId] = invoice_id;\n}\n\nif((fieldNameInvoiceStatus !== null) && (fieldNameInvoiceStatus !== undefined)){\n  createDealConfig.body[fieldNameInvoiceStatus] = invoice_status;\n}\n\ndone({\n  createDealConfig: createDealConfig\n});"}},{"id":236132,"onSuccess":["createDealPipedrive2"],"onFailure":[],"name":"createDealParams2","type":"script","properties":{"body":"let fieldNameInvoiceId = steps.ConfigParams.customFieldMap.dealFields.CB_Invoice_ID;\nlet fieldNameInvoiceStatus = steps.ConfigParams.customFieldMap.dealFields.CB_Invoice_Status || null;\n\n\nlet pipedrive_id = steps.loopOverChangedInvoice.entry['id'];\nlet invoiceData = steps.loopOverChangedInvoice.entry.invoice;\n\nlet invoice_id = invoiceData.id;\nlet currency_code = invoiceData.currency_code;\nlet invoice_status = invoiceData.status;\nlet invoice_amount = parseFloat(parseInt(invoiceData.total, 10) / 100).toFixed(2);\n\nlet createDealConfig = {\n  url: 'https://api-proxy.pipedrive.com/deals',\n  header:{\n     \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  },\n  body:{\n    title: \"Chargebee Invoice ID: \" + invoice_id,\n    currency: currency_code,\n    person_id: pipedrive_id,\n  }\n}\n\nif(steps.ConfigParams.config.params.updateDealValueInvAmount === true){\n  createDealConfig.body.value = invoice_amount;\n}\n\nif(steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource['org_id'] !== undefined){\n  let organization_id = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource['org_id'];\n  createDealConfig.body.org_id = organization_id;\n}\n\nif(steps.defineAction.configuration.stage !== undefined){\n  let stage_id = steps.defineAction.configuration.stage;\n  createDealConfig.body.stage_id = stage_id;\n}\n\nif(fieldNameInvoiceId !== undefined){\n  createDealConfig.body[fieldNameInvoiceId] = invoice_id;\n}\n\nif((fieldNameInvoiceStatus !== null) && (fieldNameInvoiceStatus !== undefined)){\n  createDealConfig.body[fieldNameInvoiceStatus] = invoice_status;\n}\n\ndone({\n  createDealConfig: createDealConfig\n});\n\n\n"}},{"id":236133,"onSuccess":["createDealSuccess"],"onFailure":["createDealSuccess"],"name":"createDealPipedrive","type":"httpRequest","properties":{"body":"${steps.createDealParams.createDealConfig.body}","url":"${steps.createDealParams.createDealConfig.url}","headers":"${steps.createDealParams.createDealConfig.header}","acceptableStatusCodes":"200,401,500","method":"POST"}},{"id":236134,"onSuccess":["createDealSuccess2"],"onFailure":["createDealSuccess2"],"name":"createDealPipedrive2","type":"httpRequest","properties":{"query":"${steps.createDealParams2.createDealConfig.query}","body":"${steps.createDealParams2.createDealConfig.body}","url":"${steps.createDealParams2.createDealConfig.url}","headers":"${steps.createDealParams2.createDealConfig.header}","acceptableStatusCodes":"200,401,500","method":"POST"}},{"id":236135,"onSuccess":["updateTpEntityParams_2"],"onFailure":["createDealAuthError"],"name":"createDealSuccess","type":"filter","properties":{"body":"if((steps.createDealPipedrive.response.code === 200) || (steps.createDealPipedrive.response.code === 201)){\n  done(true);\n}\n\ndone(false);"}},{"id":236136,"onSuccess":["updateTpEntityParams_4"],"onFailure":["createDealAuthError2"],"name":"createDealSuccess2","type":"filter","properties":{"body":"if((steps.createDealPipedrive2.response.code === 200) || (steps.createDealPipedrive2.response.code === 201)){\n  done(true);\n}\n\ndone(false);"}},{"id":236137,"onSuccess":["loopOverChangedInvoice"],"onFailure":[],"name":"createFailedLog","type":"script","properties":{"body":"let customer_id = steps.invoiceInformation.invoiceData['invoice']['customer_id'];\n\nlet chargebee_data_url = \"/admin-console/invoices/\"+customer_id;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"'>\"+customer_id+\"</a>\"\n\nsteps.ConfigParams.config.records.errorCSV.push(cb_link + \",Failed to create Invoice\");\n\ndone(steps.ConfigParams.config.records.errorCSV);"}},{"id":236138,"onSuccess":["addNotesConfigured"],"onFailure":[],"name":"createLog","type":"script","properties":{"body":"let invoice_id = steps.loopOverChangedInvoice.entry.invoice.id;\n\nlet chargebee_data_url = \"/admin-console/invoices/\"+invoice_id;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"'>\"+invoice_id+\"</a>\";\n\n// steps.ConfigParams.config.records.successCSV.push(cb_link + \",Deal Created\");\n\nlet pipedrive = steps.createDealPipedrive.response.body.data;\nlet person_id = pipedrive.person_id.value || 'undefined';\n\nlet company_domain = steps.getAccountInformationPipedrive.response.body.data.company_domain;\nlet pipedrive_data_url = \"https://\"+company_domain+\".pipedrive.com/deals/\" + pipedrive.id;\nlet pipedrive_link = \"<a href='\"+pipedrive_data_url+\"'>\"+pipedrive.id+\"</a>\";\n\nif((steps.createDealPipedrive.response.code === 200) || (steps.createDealPipedrive.response.code === 201)){\n  steps.ConfigParams.config.records.successCSV.push(\"Invoice \" + cb_link + \" on Chargebee is synced as deal \" + pipedrive_link + \" in Pipedrive\");\n  done(steps.ConfigParams.config.records.successCSV);\n}\n\nsteps.ConfigParams.config.records.errorCSV.push(cb_link + \" - Deal sync failed\");\ndone(steps.ConfigParams.config.records.errorCSV);"}},{"id":236139,"onSuccess":["addNotesConfigured3"],"onFailure":[],"name":"createLog2","type":"script","properties":{"body":"let invoice_id = steps.loopOverChangedInvoice.entry.invoice.id;\n\nlet chargebee_data_url = \"/admin-console/invoices/\"+invoice_id;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"'>\"+invoice_id+\"</a>\"\n\nlet pipedrive = steps.createDealPipedrive2.response.body.data;\nlet person_id = pipedrive.person_id.value || 'undefined';\n\nlet company_domain = steps.getAccountInformationPipedrive.response.body.data.company_domain;\nlet pipedrive_data_url = \"https://\"+company_domain+\".pipedrive.com/deals/\" + pipedrive.id;\nlet pipedrive_link = \"<a href='\"+pipedrive_data_url+\"'>\"+pipedrive.id+\"</a>\";\n\nif((steps.createDealPipedrive2.response.code === 200) || (steps.createDealPipedrive2.response.code === 201)){\n  steps.ConfigParams.config.records.successCSV.push(\"Invoice \" + cb_link + \" on Chargebee is synced as deal \" + pipedrive_link + \" in Pipedrive\");\n  done(steps.ConfigParams.config.records.successCSV);\n}\n\nsteps.ConfigParams.config.records.errorCSV.push(cb_link + \" - Deal sync failed\");\ndone(steps.ConfigParams.config.records.errorCSV);\n\n"}},{"id":236140,"onSuccess":["updateDealParams"],"onFailure":["updateDealParams"],"name":"createOrUpdate","type":"filter","properties":{"body":"if(steps.defineAction.configuration.action === \"create_deal\"){\n  done(false);\n}\nelse{\n  done(true);\n}"}},{"id":236141,"onSuccess":["GetFailedInvoices"],"onFailure":[],"name":"CustomFieldParamsForErrorRecords","type":"script","properties":{"body":"let params = {\n  query: {\n \t   limit: 10,\n \t   sort_by_asc : \"updated_at\",\n \t   id_in: steps.TransformInvoiceIds.ids\n  }\n};\n\nif(steps.GetFailedInvoices !== undefined){\n  params.query.offset = steps.GetFailedInvoices.response.body.next_offset;\n}\n\ndone(params);\n"}},{"id":236142,"onSuccess":["createDealParams2"],"onFailure":[],"name":"dealExistInPipedrive","type":"filter","properties":{"body":"if(steps.fetchDealsPipedrive.response.body.data !== null){\n  done(false);\n}\n\ndone(true);"}},{"id":236143,"onSuccess":["loopOverDealFieldsToCreate"],"onFailure":[],"name":"dealFieldInformation","type":"script","properties":{"body":"let dealField = steps.createDealField.response.body.data;\n\n// fieldName = dealField.name;\n// fieldKey = dealField.key;\n\nfieldName = dealField.name.replace(/ /g, \"_\");//Replacing white spaces in field name with underscore while saving customfield map to tpconfig\nfieldKey = dealField.key;\n\n\nsteps.ConfigParams.customFieldMap.dealFields[fieldName] = fieldKey;\n\ndone({\n  customFieldMap: steps.ConfigParams.customFieldMap,\n  dealFields: steps.ConfigParams.invoiceFields\n});"}},{"id":236144,"onSuccess":["noDealFieldToCreate"],"onFailure":[],"name":"dealFieldsConfig","type":"script","properties":{"body":"let dealFieldsToCreate = [];\nlet dealFields = steps.ConfigParams.invoiceFields;\nlet customFieldMap_Deals = steps.ConfigParams.customFieldMap.dealFields;\nlet dealFieldsInPipedrive = steps.getDealFieldsPipedrive.response.body.data;\n\n// for(var i=0; i < dealFields.length; i++){\n//   for(var j=0; j < dealFieldsInPipedrive.length ; j++){\n//     if(dealFields[i] !== dealFieldsInPipedrive[j]['name']){\n//       if(j == dealFieldsInPipedrive.length-1){\n//         fieldName = dealFields[i];\n//         dealFieldParams = {\n//           \"name\": fieldName,\n//           \"field_type\": \"varchar\"\n//         };\n//       dealFieldsToCreate.push(dealFieldParams);\n//       }\n//     }else{\n//       customFieldMap_Deals[dealFieldsInPipedrive[j]['name']] = dealFieldsInPipedrive[j]['key'];\n//       break;\n//     }\n//   }\n// }\n\nlet fieldName;\nlet dealFieldName;\nlet dealFieldParams;\n\nfor(var i=0; i < dealFields.length; i++){\n  for(var j=0; j < dealFieldsInPipedrive.length ; j++){\n    dealFieldName = dealFields[i].replace(/_/g, \" \");//Removes underscores from field name before checking whether it exists in Pipedrive. Pipedrive will be having these  Field names without underscores.\n    if(dealFieldName !== dealFieldsInPipedrive[j]['name']){\n      if(j == dealFieldsInPipedrive.length-1){\n        fieldName = dealFieldName;\n        dealFieldParams = {\n          \"name\": fieldName,\n          \"field_type\": \"varchar\"\n        };\n       dealFieldsToCreate.push(dealFieldParams);\n      }\n    }else{\n      customFieldMap_Deals[dealFields[i]] = dealFieldsInPipedrive[j]['key'];\n      break;\n    }\n  }\n}\n\n// steps.ConfigParams.dealFieldsToCreate = dealFieldsToCreate;\n\ndone({\n  dealFieldsToCreate: dealFieldsToCreate\n});"}},{"id":236145,"onSuccess":["getExistingDealsParams"],"onFailure":["deriveActionInvCreate"],"name":"dealIdFoundInTpEntity","type":"filter","properties":{"body":"if(steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource.invoice_deal_id === undefined){\n    done(false);\n}\n\ndone(true);"}},{"id":236146,"onSuccess":["deriveAction"],"onFailure":[],"name":"defineAction","type":"script","properties":{"body":"let event_name = '';\n\n// let fieldNameSubscriptionStatus = steps.ConfigParams.customFieldMap.dealFields.CB_Subscription_Status;\n\nlet pipedriveInvoiceData = (steps.getExistingDealsInPipedrive.response.code === 200) ? steps.getExistingDealsInPipedrive.response.body.data : null;\n\nlet first_invoice = steps.loopOverChangedInvoice.entry.invoice.first_invoice || false;\n\nlet invoice_status_chargebee = steps.loopOverChangedInvoice.entry.invoice.status;\n\nlet invoice_delete_status = steps.loopOverChangedInvoice.entry.invoice.deleted;\n\nif((pipedriveInvoiceData === null) && (first_invoice === true)){\n   event_name = \"invoice_created\";\n}\n\nif(invoice_status_chargebee === \"voided\"){\n  event_name = \"invoice_voided\";\n}\n\nif(invoice_status_chargebee === \"paid\"){\n  event_name = \"invoice_paid\";\n}\n\nif(invoice_delete_status === true){\n  event_name = \"invoice_deleted\";\n}\n\nif(event_name === ''){\n  if((invoice_status_chargebee === \"payment_due\") && (invoice_delete_status === false) && (pipedriveInvoiceData !== null)){\n    done({\n      configuration: {\n        action: \"update_deal\",\n        pipeline: steps.getExistingDealsInPipedrive.response.body.data.pipeline_id,\n        stage: steps.getExistingDealsInPipedrive.response.body.data.stage_id\n      },\n      only_value_update: true\n    });\n  }\n  done({\n    configuration: {\n      action : \"do_nothing\"\n    }\n  });\n}\n\n\nlet configuration = steps.ConfigParams.config.params.events[0][event_name];\n\ndone({\n  event_name : event_name,\n  configuration: configuration\n});\n"}},{"id":236147,"onSuccess":["deriveActionForExistingDeals"],"onFailure":[],"name":"defineActionForExistingDeals","type":"script","properties":{"body":"let event_name = '';\n\n// let fieldNameSubscriptionStatus = steps.ConfigParams.customFieldMap.dealFields.CB_Subscription_Status;\n\n// let pipedriveInvoiceData = steps.fetchDealsPipedrive.response.body.data;\n\nlet first_invoice = steps.getInvoiceOnChargebee.response.body.list[0]['invoice']['first_invoice'] || false;\n\nlet invoice_status_chargebee = steps.getInvoiceOnChargebee.response.body.list[0]['invoice']['status'];\n\nlet invoice_delete_status = steps.getInvoiceOnChargebee.response.body.list[0]['invoice']['deleted'];\n\nif(first_invoice === true){\n   event_name = \"invoice_created\";\n}\n\nif((invoice_status_chargebee === \"voided\")){\n  event_name = \"invoice_voided\";\n}\n\nif((invoice_status_chargebee === \"paid\")){\n  event_name = \"invoice_paid\";\n}\n\nif(invoice_delete_status === true){\n  event_name = \"invoice_deleted\";\n}\n\n\n\nif(event_name === ''){\n  done({\n    configuration: {\n      action : \"do_nothing\"\n    }\n  });\n}\n\nlet configuration = steps.ConfigParams.config.params.events[0][event_name];\n\ndone({\n  event_name : event_name,\n  configuration: configuration\n});"}},{"id":236148,"onSuccess":["updateOrCreate"],"onFailure":["loopOverChangedInvoice"],"name":"deriveAction","type":"filter","properties":{"body":"if(steps.defineAction.configuration.action === \"do_nothing\"){\n  done(false);\n}\nelse{\n  done(true);\n}"}},{"id":236149,"onSuccess":["updateTheExistingDeal_params"],"onFailure":["loopOverExistingDeals"],"name":"deriveActionForExistingDeals","type":"filter","properties":{"body":"if(steps.defineActionForExistingDeals === false){\n  done(false);\n}\n\nif(steps.defineActionForExistingDeals.configuration.action === \"do_nothing\"){\n  done(false);\n}\nelse{\n  done(true);\n}"}},{"id":236150,"onSuccess":["createDealParams"],"onFailure":[],"name":"deriveActionInvCreate","type":"filter","properties":{"body":"if(steps.ConfigParams.config.params.events[0]['invoice_created']!== undefined){\n  let action = steps.ConfigParams.config.params.events[0]['invoice_created']['action'];\n  if(action === 'do_nothing'){\n    done(false);\n  }else{\n    done(true);\n  }\n}else{\n  done(false);\n}"}},{"id":236151,"onSuccess":["CheckOffset"],"onFailure":[],"name":"ErrorList","type":"script","properties":{"body":"let invoiceList = [];\n\nif(steps.ErrorList !== undefined){\n  invoiceList = steps.ErrorList.invoiceList;\n}\n\nif((steps.GetFailedInvoices.response.body.list !== undefined) && (steps.GetFailedInvoices.response.body.list.length > 0)){\n  if(invoiceList.length === 0){\n    invoiceList = steps.GetFailedInvoices.response.body.list;\n  }else{\n    invoiceList = subscriptionList.concat(steps.GetFailedInvoices.response.body.list);\n  }\n}\n\ndone({\n  invoiceList: invoiceList\n});\n"}},{"id":236152,"onSuccess":["invoiceInformation"],"onFailure":["loopOverEvents"],"name":"eventInformation","type":"script","properties":{"body":"// let invoice_id = steps.fetchDealsPipedrive.response.body.data[0]['id'];\nlet fieldNameCustomerID = steps.ConfigParams.customFieldMap.customerFields.CB_Customer_ID;\nlet customer_id = steps.loopOverChangedInvoice.entry[fieldNameCustomerID];\nlet event_customer_id = steps.loopOverEvents.entry.event.content.customer_id;\nlet event_type = steps.loopOverEvents.entry.event.event_type;\nlet eventData = null;\n\nif((customer_id === event_customer_id)){\n  eventData = steps.loopOverEvents.entry.event.content;\n}\n\nif(eventData === null){\n  done(false);\n}\n\ndone({\n  eventData : eventData\n});\n\n\n"}},{"id":236153,"onSuccess":[],"onFailure":[],"name":"FailedToGetAccessToken","type":"script","properties":{"body":"done({\n  message : \"Failed to Get New Access Token\"\n});"}},{"id":236154,"onSuccess":["CheckOffsetValue"],"onFailure":[],"name":"FailedToSync","type":"script","properties":{"body":"let details = steps.GetError.response.body.list;\nlet invoiceIds = [];\nif(steps.FailedToSync !== undefined){\n  invoiceIds = steps.FailedToSync.invoiceIds;\n}\n\nif(details.length !== 0){\n    details.forEach(item => {\n    invoiceIds.push(item.third_party_entity_mapping.entity_id);\n  });\n  \n}\n\ndone({invoiceIds : invoiceIds});\n\n"}},{"id":236155,"onSuccess":["invoiceList"],"onFailure":[],"name":"fetchChangedInvoice","type":"elementRequest","properties":{"query":"${steps.fetchChangedInvoice_params.fetchInvoiceConfig.query}","headers":"${steps.fetchChangedInvoice_params.fetchInvoiceConfig.auth}","api":"${steps.fetchChangedInvoice_params.fetchInvoiceConfig.url}","method":"GET","elementInstanceId":"${config.chargebee}"}},{"id":236156,"onSuccess":["fetchChangedInvoice"],"onFailure":[],"name":"fetchChangedInvoice_params","type":"script","properties":{"body":"// let getPersonPipedriveConfig = {\n//   url: 'https://api-proxy.pipedrive.com/persons',\n//   header:{\n//     \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n//   },\n//   query:{\n//     start: 0,\n// \t  limit: 10\n//   }\n// };\n\n\n// if(steps.setOffsetChangedInvoice !== undefined) {\n//   getPersonPipedriveConfig.query.start = steps.setOffsetChangedInvoice.next_start;\n// }\n\n// done({\n//   getPersonPipedriveConfig: getPersonPipedriveConfig\n// });\n\nlet configuration = steps.ConfigParams.tpConfig.third_party_configuration.config_json;\n\nlet fetchInvoiceConfig = {\n  url: '/invoices',\n  query:{\n    sort_by_asc: \"updated_at\",\n    limit: 10,\n    include_deleted: true,\n\t  updated_at_after: steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_FullSyncRun.lastSyncTime\n  }\n}\n\nif(steps.setOffsetChangeInvoice !== undefined){\n  fetchInvoiceConfig.offset = steps.setOffsetChangeInvoice.offset\n}else{\n  fetchInvoiceConfig.offset = configuration.batch.sync_invoice.change_invoice || undefined;\n}\n\ndone({\n  fetchInvoiceConfig: fetchInvoiceConfig\n});"}},{"id":236157,"onSuccess":["fetchDealsPipedrive"],"onFailure":[],"name":"fetchDealParams","type":"script","properties":{"body":"let pipedrive_id = steps.loopOverChangedInvoice.entry['id'];\nlet invoice_id = steps.invoiceInformation.invoiceData['invoice']['id'];\n\ninvoice_id = \"Chargebee Invoice ID: \"+invoice_id;\n\n\nlet fetchDealConfig = {\n  url: 'https://api-proxy.pipedrive.com/deals/find',\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  },\n  query:{\n     term: invoice_id,\n     person_id: pipedrive_id\n  }\n}\n\nif((steps.loopOverChangedInvoice.entry['org_id'] !== undefined) && (steps.loopOverChangedInvoice.entry['org_id'] !== null)){\n  let organization_id = steps.loopOverChangedInvoice.entry['org_id']['value'];\n  fetchDealConfig.query.org_id = organization_id;\n}\n\ndone({\n  fetchDealConfig: fetchDealConfig\n});\n\n\n"}},{"id":236158,"onSuccess":["noTpEntityMappingFound"],"onFailure":["InvalidAccessToken"],"name":"fetchDealsPipedrive","type":"httpRequest","properties":{"query":"${steps.fetchDealParams.fetchDealConfig.query}","url":"${steps.fetchDealParams.fetchDealConfig.url}","headers":"${steps.fetchDealParams.fetchDealConfig.header}","acceptableStatusCodes":"200,404","method":"GET"}},{"id":236159,"onSuccess":["loopOverEvents"],"onFailure":[],"name":"fetchEventInvoiceDeleted","type":"elementRequest","properties":{"query":"${steps.fetchEventParams.eventConfig.query}","api":"${steps.fetchEventParams.eventConfig.url}","method":"GET","elementInstanceId":"${config.chargebee}"}},{"id":236160,"onSuccess":["fetchEventInvoiceDeleted"],"onFailure":[],"name":"fetchEventParams","type":"script","properties":{"body":"let eventConfig = {\n  url : '/events',\n  query: {\n    event_type: 'invoice_deleted',\n    sort_by_asc: 'occurred_at'\n  }\n}\n\n\ndone({\n  eventConfig: eventConfig\n});"}},{"id":236161,"onSuccess":["invoiceFound"],"onFailure":[],"name":"fetchInvoiceChargebee","type":"httpRequest","properties":{"query":"${steps.fetchInvoiceParams.fetchInvoiceConfig.query}","url":"${steps.fetchInvoiceParams.fetchInvoiceConfig.url}","headers":"${steps.fetchInvoiceParams.fetchInvoiceConfig.auth}","method":"GET"}},{"id":236162,"onSuccess":["fetchInvoiceChargebee"],"onFailure":[],"name":"fetchInvoiceParams","type":"script","properties":{"body":"let fieldNameCustomerID = steps.ConfigParams.customFieldMap.customerFields.CB_Customer_ID;\nlet customer_id = steps.loopOverChangedInvoice.entry[fieldNameCustomerID];\n\n// let fetchInvoiceConfig = {\n//   url: '/invoices',\n//   query:{\n//     customer_id : customer_id,\n//     limit: 1,\n//     sort_by_desc: \"updated_at\"\n//   }\n// };\n\nlet fetchInvoiceConfig = {\n  url: \"https://\"+steps.InputParams.input.siteName+\".integrations.\"+steps.InputParams.input.siteDomain+\"/api/pipedrive/subscription\",\n  auth: {\n    \"Authorization\": \"Basic \" + CE.b64(steps.InputParams.input.cbApiKey + \":\" + \"\"),\n    \"api_key\": steps.InputParams.input.cbApiKey\n  },\n  query: {\n    customer_id : customer_id\n  }\n}\n\n\n// if(steps.InputParams.input.initialSync === false){\n  \n//   if(steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_FullSyncRun.lastSyncTime !== undefined){\n    \n//     if(steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_FullSyncRun.firstFullSyncEndTime !== undefined){\n//       fetchInvoiceConfig.query.created_at_after = steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_FullSyncRun.firstFullSyncEndTime;\n//     }\n    \n//       fetchInvoiceConfig.query.updated_at_after = steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_FullSyncRun.lastSyncTime;\n//   }\n  \n//   if(steps.ConfigParams.config.params.events[0].invoice_deleted.action === \"create_deal\"){\n//     fetchInvoiceConfig.query.include_deleted = true;\n//   } \n// }\n\n\ndone({\n  fetchInvoiceConfig: fetchInvoiceConfig\n});\n\n\n"}},{"id":236163,"onSuccess":["isAuthFailed"],"onFailure":[],"name":"getAccountInformationPipedrive","type":"httpRequest","properties":{"url":"${steps.ConfigParams.getAccountInfomationPipedrive.url}","headers":"${steps.ConfigParams.getAccountInfomationPipedrive.headers}","acceptableStatusCodes":"200,401","method":"GET"}},{"id":236164,"onSuccess":["isAuthErrorGetDealFieldsPipedrive"],"onFailure":["isAuthErrorGetDealFieldsPipedrive"],"name":"getDealFieldsPipedrive","type":"httpRequest","properties":{"url":"${steps.ConfigParams.config.dealFieldsApiConfig.url}","headers":"${steps.ConfigParams.config.dealFieldsApiConfig.headers}","acceptableStatusCodes":"200,401","method":"GET"}},{"id":236165,"onSuccess":["dealFieldsConfig"],"onFailure":[],"name":"getDealFieldsPipedriveOld123","type":"elementRequest","properties":{"api":"${steps.ConfigParams.config.dealFieldsApiConfig.url}","method":"GET","elementInstanceId":"${config.pipedrive}"}},{"id":236166,"onSuccess":["isDealNotFound"],"onFailure":["InvalidAccessToken"],"name":"getDetailsApiAuthError","type":"filter","properties":{"body":"if(steps.getDetailsOfDeal.response.code === 401){\n  done(false);\n}\n\ndone(true);"}},{"id":236167,"onSuccess":["getDetailsApiAuthError"],"onFailure":[],"name":"getDetailsOfDeal","type":"httpRequest","properties":{"query":"${steps.getDetailsOfDealParam.getDetailsOfDealConfig.query}","url":"${steps.getDetailsOfDealParam.getDetailsOfDealConfig.url}","headers":"${steps.getDetailsOfDealParam.getDetailsOfDealConfig.header}","acceptableStatusCodes":"200,404,401","method":"GET"}},{"id":236168,"onSuccess":["isDealOpen"],"onFailure":[],"name":"getDetailsOfDeal1","type":"httpRequest","properties":{"query":"${steps.getDetailsOfDeal1Param.getDetailsOfDeal1Config.query}","url":"${steps.getDetailsOfDeal1Param.getDetailsOfDeal1Config.url}","headers":"${steps.getDetailsOfDeal1Param.getDetailsOfDeal1Config.header}","method":"GET"}},{"id":236169,"onSuccess":["isIdNull"],"onFailure":["isIdNull"],"name":"getDetailsOfDealParam","type":"script","properties":{"body":"let id = (steps.retrieveTpEntityMappingForDeal2.response.body.third_party_entity_mapping.third_party_entity_id !== undefined) ? steps.retrieveTpEntityMappingForDeal2.response.body.third_party_entity_mapping.third_party_entity_id : null;\n\nlet getDetailsOfDealConfig = {\n  url: 'https://api-proxy.pipedrive.com/deals/'+id,\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  }\n}\n\n\ndone({\n  id: id,\n  getDetailsOfDealConfig: getDetailsOfDealConfig\n});"}},{"id":236170,"onSuccess":["isDealOpen"],"onFailure":[],"name":"getDetailsOfDealParam1","type":"script","properties":{"body":"let id = steps.fetchDealsPipedrive.response.body.data[0]['id'];\n\n// if(id === undefined){\n//   done(false);\n// }\n\nlet getDetailsOfDealConfig = {\n  url: 'https://api-proxy.pipedrive.com/deals/'+id,\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  }\n}\n\n\ndone({\n  getDetailsOfDealConfig: getDetailsOfDealConfig\n});"}},{"id":236171,"onSuccess":["getInvoiceOnChargebee_params"],"onFailure":["InvalidAccessToken_1"],"name":"getDetailsOfExistingDeal","type":"httpRequest","properties":{"url":"${steps.getDetailsOfExistingDeal_params.getDetailsOfDeal1Config.url}","headers":"${steps.getDetailsOfExistingDeal_params.getDetailsOfDeal1Config.header}","method":"GET"}},{"id":236172,"onSuccess":["getDetailsOfExistingDeal"],"onFailure":[],"name":"getDetailsOfExistingDeal_params","type":"script","properties":{"body":"let id = steps.loopOverExistingDeals.entry.id;\n\nif(id === undefined){\n  done(false);\n}\n\nlet getDetailsOfDeal1Config = {\n  url: 'https://api-proxy.pipedrive.com/deals/'+id,\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  }\n}\n\n\ndone({\n  getDetailsOfDeal1Config: getDetailsOfDeal1Config\n});"}},{"id":236173,"onSuccess":["FailedToSync"],"onFailure":[],"name":"GetError","type":"httpRequest","properties":{"query":"${steps.GetErrorParams.params.config.query}","url":"${steps.GetErrorParams.params.config.url}","headers":"${steps.GetErrorParams.params.config.auth}","method":"GET"}},{"id":236174,"onSuccess":["GetError"],"onFailure":[],"name":"GetErrorParams","type":"script","properties":{"body":"let params = steps.GetTpErrorParams.params;\nlet configuration = steps.ConfigParams.tpConfig.third_party_configuration.config_json;\n\nif(steps.GetErrorParams !== undefined){\n  params.config.query.offset = steps.GetError.response.body.next_offset;\n}else{\n  params.config.query.offset = configuration.batch.sync_invoice.get_error || undefined;\n}\n\ndone({params: params});"}},{"id":236175,"onSuccess":["getTpEntityMappingOfInvoice"],"onFailure":["getTpEntityMappingOfInvoice"],"name":"getExistingDealsInPipedrive","type":"httpRequest","properties":{"retryDelay":"200","query":"","url":"${steps.getExistingDealsParams.fetchDealConfig.url}","headers":"${steps.getExistingDealsParams.fetchDealConfig.header}","acceptableStatusCodes":"200,401,404,500","retry":"true","retryAttempts":"5","method":"GET"}},{"id":236176,"onSuccess":["getExistingDealsInPipedrive"],"onFailure":[],"name":"getExistingDealsParams","type":"script","properties":{"body":"// let pipedrive_id = steps.loopOverPersons.entry['id'];\n\n// let startValue = 0;\n\n// if(steps.setOffsetForExistingDeals !== undefined){\n//   startValue = steps.setOffsetForExistingDeals.offset;\n// }\n\n// // let fetchDealConfig = {\n// //   url: 'https://api-proxy.pipedrive.com/deals/find',\n// //   header:{\n// //     \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n// //   },\n// //   query:{\n// //     term: \"Chargebee Invoice ID: \",\n// //     person_id: pipedrive_id\n// //   }\n// // }\n\n// let fetchDealConfig = {\n//   url: 'https://api-proxy.pipedrive.com/persons/'+pipedrive_id+'/deals',\n//   header:{\n//     \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n//   },\n//   query:{\n//     start: startValue,\n//     limit: \"10\",\n//     status: \"open\"\n//   }\n// }\n\n\n\n// // if(steps.loopOverPersons.entry['org_id'] !== null){\n// //     let organization_id = steps.loopOverPersons.entry['org_id']['value'];\n// //     fetchDealConfig.query.org_id = organization_id;\n// // }\n\n// done({\n//   fetchDealConfig: fetchDealConfig\n// });\n\n\nlet deal_id = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource.invoice_deal_id || null;\n\nlet fetchDealConfig = {\n  url: 'https://api-proxy.pipedrive.com/deals/'+deal_id,\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  }\n};\n\nlet apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\n\nlet invoiceId = steps.loopOverChangedInvoice.entry.invoice.id;\n\nlet tpEntityPayload = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/retrieve\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: invoiceId,\n    entity_type: \"invoice\"\n  }\n};\n\ndone({\n  fetchDealConfig: fetchDealConfig,\n  tpEntityPayload: tpEntityPayload\n});"}},{"id":236177,"onSuccess":["ErrorList"],"onFailure":[],"name":"GetFailedInvoices","type":"elementRequest","properties":{"query":"${steps.CustomFieldParamsForErrorRecords.query}","api":"/invoices","method":"GET","elementInstanceId":"${config.chargebee}"}},{"id":236178,"onSuccess":["invoiceFoundOnChargebee"],"onFailure":[],"name":"getInvoiceOnChargebee","type":"elementRequest","properties":{"retryDelay":"200","query":"${steps.getInvoiceOnChargebee_params.fetchInvoiceConfig.query}","retry":"true","api":"${steps.getInvoiceOnChargebee_params.fetchInvoiceConfig.url}","retryAttempts":"5","method":"GET","elementInstanceId":"${config.chargebee}"}},{"id":236179,"onSuccess":["getInvoiceOnChargebee"],"onFailure":[],"name":"getInvoiceOnChargebee_params","type":"script","properties":{"body":"let dealTitle = steps.loopOverExistingDeals.entry.title;\nlet invoiceId = dealTitle.split(\": \")[1];\n\nlet fetchInvoiceConfig = {\n  url: '/invoices',\n  query:{\n    invoice_id : invoiceId,\n    include_deleted: true\n  }\n}\n\nif(steps.retrieveTpEntityMappingForDeal.response.body.third_party_entity_mapping.last_sync_at !== undefined){\n    fetchInvoiceConfig.query.updated_at_after = steps.retrieveTpEntityMappingForDeal.response.body.third_party_entity_mapping.last_sync_at;\n}\n\n\n// if((steps.InputParams.input.initialSync === false) && (steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_FullSyncRun.lastSyncTime !== undefined)){\n//   fetchSubscriptionConfig.query.updated_at_after = steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.formulas.formula_FullSyncRun.lastSyncTime;\n// }\n\ndone({\n  fetchInvoiceConfig: fetchInvoiceConfig\n});"}},{"id":236180,"onSuccess":["latestDataChargebee"],"onFailure":[],"name":"getLatestCustomerDataChargebee","type":"httpRequest","properties":{"query":"${steps.getLatestCustomerDataChargebee_params.fetchInvoiceConfig.query}","url":"${steps.getLatestCustomerDataChargebee_params.fetchInvoiceConfig.url}","headers":"${steps.getLatestCustomerDataChargebee_params.fetchInvoiceConfig.auth}","method":"GET"}},{"id":236181,"onSuccess":["getLatestCustomerDataChargebee"],"onFailure":[],"name":"getLatestCustomerDataChargebee_params","type":"script","properties":{"body":"let customer_id = steps.loopOverChangedInvoice.entry.invoice.customer_id;\n\nlet fetchInvoiceConfig = {\n  url: \"https://\"+steps.InputParams.input.siteName+\".integrations.\"+steps.InputParams.input.siteDomain+\"/api/pipedrive/subscription\",\n  auth: {\n    \"Authorization\": \"Basic \" + CE.b64(steps.InputParams.input.cbApiKey + \":\" + \"\"),\n    \"api_key\": steps.InputParams.input.cbApiKey\n  },\n  query: {\n    customer_id : customer_id\n  }\n};\n\ndone({\n  fetchInvoiceConfig: fetchInvoiceConfig\n});"}},{"id":236182,"onSuccess":["getThirdPartyInstanceDetails"],"onFailure":["FailedToGetAccessToken"],"name":"getNewToken","type":"httpRequest","properties":{"retryDelay":"200","body":"${steps.getNewToken_params.payload.body}","url":"${steps.getNewToken_params.payload.url}","headers":"${steps.getNewToken_params.payload.headers}","retry":"true","retryAttempts":"5","method":"POST"}},{"id":236183,"onSuccess":["getNewToken"],"onFailure":["getNewToken"],"name":"getNewToken_params","type":"script","properties":{"body":"if(steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.OAuth_Parameters === undefined){\n  done(false);\n}\n\n\nlet params = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.OAuth_Parameters;\n\nlet payload = {\n  url: \"https://oauth.pipedrive.com/oauth/token\",\n  headers : {\n    \"Content-Type\" : \"application/x-www-form-urlencoded\",\n    \"Authorization\" : \"Basic \" + CE.b64(params.client_info.client_id + \":\" + params.client_info.client_secret)\n  },\n  body : \"grant_type=refresh_token&refresh_token=\" + params.refresh_token\n};\n\ndone({\n  payload: payload\n});"}},{"id":236184,"onSuccess":["updatePipedriveElementInstance_params"],"onFailure":[],"name":"getPipedriveElementInstance","type":"request","properties":{"api":"/instances/${steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.thirdParty.instance}","method":"GET"}},{"id":236185,"onSuccess":["updatePipedriveElementInstance_params1"],"onFailure":[],"name":"getPipedriveElementInstance1","type":"request","properties":{"api":"/instances/${steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.thirdParty.instance}","method":"GET"}},{"id":236186,"onSuccess":["updateElementInstanceParams"],"onFailure":[],"name":"getThirdPartyInstanceDetails","type":"request","properties":{"api":"/instances/${steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.thirdParty.instance}","method":"GET"}},{"id":236187,"onSuccess":["isTokenAboutToExpire"],"onFailure":["ApiError"],"name":"getTpConfig","type":"httpRequest","properties":{"retryDelay":"200","query":"${steps.InputParams.getTpConfigParams.query}","url":"${steps.InputParams.getTpConfigParams.url}","headers":"${steps.InputParams.getTpConfigParams.auth}","retry":"true","retryAttempts":"5","method":"GET"}},{"id":236188,"onSuccess":["TpEntityMappingFound"],"onFailure":[],"name":"getTpEntityMappingOfCustomer","type":"httpRequest","properties":{"query":"${steps.getTpEntityMappingOfCustomer_params.payload.query}","url":"${steps.getTpEntityMappingOfCustomer_params.payload.url}","headers":"${steps.getTpEntityMappingOfCustomer_params.payload.auth}","method":"GET"}},{"id":240402,"onSuccess":["getTpEntityMappingOfInvoice_2"],"onFailure":[],"name":"getTpEntityMappingOfCustomer_2","type":"httpRequest","properties":{"query":"${steps.getTpEntityMappingOfCustomer_2_params.payload.query}","url":"${steps.getTpEntityMappingOfCustomer_2_params.payload.url}","headers":"${steps.getTpEntityMappingOfCustomer_2_params.payload.auth}","method":"GET"}},{"id":240401,"onSuccess":["getTpEntityMappingOfCustomer_2"],"onFailure":[],"name":"getTpEntityMappingOfCustomer2_params","type":"script","properties":{"body":"let apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\n\nlet customerId = steps.loopOverChangedInvoice.entry.invoice.customer_id;\n\nlet payload = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/retrieve\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: customerId,\n    entity_type: \"customer\",\n  }\n};\n\n\n//--Get Invoice ---\n\n\nlet invoiceId = steps.loopOverChangedInvoice.entry.invoice.id;\n\nlet tpEntityPayload = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/retrieve\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: invoiceId,\n    entity_type: \"invoice\"\n  }\n};\n\ndone({\n  payload: payload,\n  tpEntityPayload: tpEntityPayload\n});\n\n\n"}},{"id":236189,"onSuccess":["getTpEntityMappingOfCustomer"],"onFailure":[],"name":"getTpEntityMappingOfCustomer_params","type":"script","properties":{"body":"let apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\n\nlet customerId = steps.loopOverChangedInvoice.entry.invoice.customer_id;\n\nlet payload = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/retrieve\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: customerId,\n    entity_type: \"customer\",\n  }\n};\n\ndone({\n  payload: payload\n});\n\n\n"}},{"id":236190,"onSuccess":["noDealExist"],"onFailure":[],"name":"getTpEntityMappingOfInvoice","type":"httpRequest","properties":{"query":"${steps.getExistingDealsParams.tpEntityPayload.query}","url":"${steps.getExistingDealsParams.tpEntityPayload.url}","headers":"${steps.getExistingDealsParams.tpEntityPayload.auth}","method":"GET"}},{"id":240403,"onSuccess":["updateTpEntityFailedParams"],"onFailure":[],"name":"getTpEntityMappingOfInvoice_2","type":"httpRequest","properties":{"query":"${steps.getTpEntityMappingOfCustomer_2_params.tpEntityPayload.query}","url":"${steps.getTpEntityMappingOfCustomer_2_params.tpEntityPayload.url}","headers":"${steps.getTpEntityMappingOfCustomer_2_params.tpEntityPayload.auth}","method":"GET"}},{"id":236191,"onSuccess":["CheckErrorRecords"],"onFailure":[],"name":"GetTpError","type":"httpRequest","properties":{"query":"${steps.GetTpErrorParams.params.config.query}","url":"${steps.GetTpErrorParams.params.config.url}","headers":"${steps.GetTpErrorParams.params.config.auth}","method":"GET"}},{"id":236192,"onSuccess":["GetTpError"],"onFailure":[],"name":"GetTpErrorParams","type":"script","properties":{"body":"let apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\nlet startTime;\nlet endTime;\nlet syncStatus = steps.LastSyncDetails.response.body.third_party_sync_detail;\n\nlet params = {\n\n  config: {\n    url: \"https://\" + siteName + \".\" + siteDomain + \"/api/v2/third_party_entity_mappings/list_all\",\n    auth: {\n      Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n    },\n    query: {\n      \"integration_name\": integrationName,\n      \"status[is]\": \"update_failed\",\n      \"entity_type\": \"invoice\",\n      \"modified_at[after]\": syncStatus.context.syncData.previousSyncStart,\n      \"modified_at[before]\": syncStatus.context.syncData.previousSyncEnd\n    }\n  }\n\n};\n\ndone({\n  params: params\n});\n"}},{"id":236628,"onSuccess":["updateTpConfigParams_3"],"onFailure":["UpdateOffsetParams"],"name":"hasBatchingFinished","type":"filter","properties":{"body":"let batch_size = steps.ConfigParams.tpConfig.third_party_configuration.config_json.batch.batch_size ;\n\n\nif((steps.fetchChangedInvoice && steps.fetchChangedInvoice.response.body.next_offset !== undefined ) || (steps.GetError && steps.GetError.response.body.next_offset !== undefined)){\ndone(false);\n}else if(steps.invoiceList && steps.invoiceList.contactList && steps.invoiceList.contactList.length >= batch_size){\n  done(false);\n}\nelse{\n  done(true);\n}\n\n\n\n\n\n\n"}},{"id":236193,"onSuccess":[],"onFailure":["updateTpConfigParams_3"],"name":"hasNextOffsetChangedInvoice","type":"filter","properties":{"body":"if(steps.fetchChangedInvoice.response.body.next_offset !== undefined){\n  done(true);\n}\n\ndone(false);"}},{"id":236194,"onSuccess":["GetTpErrorParams"],"onFailure":["setOffsetChangInvoice"],"name":"hasNextOffsetChangeInvoice","type":"filter","properties":{"body":"let contactLength = steps.invoiceList.contactList.length;\nlet configuration = steps.ConfigParams.tpConfig.third_party_configuration.config_json;\nlet batch_size = configuration.batch.batch_size;\n\n\nif(steps.fetchChangedInvoice.response.body.next_offset !== undefined){\n  \n  if(((steps.setOffsetChangInvoice !== undefined) && (steps.setOffsetChangInvoice.offset === steps.fetchChangedInvoice.response.body.next_offset)) || contactLength >= batch_size || configuration.batch.sync_invoice.change_invoice === null){\n      done(true);\n    }\n    done(false);\n}\n\ndone(true);"}},{"id":236195,"onSuccess":["setOffsetForExistingDeals"],"onFailure":["fetchInvoiceParams"],"name":"hasNextOffsetForExistingDeals","type":"filter","properties":{"body":"if(steps.getExistingDealsInPipedrive.response.body.additional_data.pagination.more_items_in_collection === true){\n  done(true);\n}\n\ndone(false);"}},{"id":236196,"onSuccess":["getTpConfig"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let triggerInput = trigger.args;\n\nlet apiToken = triggerInput.apiToken;\nlet cbApiKey = triggerInput.cbApiKey;\nlet password = triggerInput.cbPassword;\nlet initialSync = triggerInput.initialSync;\nlet integrationName = triggerInput.integrationName;\nlet siteName = triggerInput.siteName;\nlet siteDomain = triggerInput.siteDomain;\nlet syncFields = triggerInput.syncFields;\n\n// let apiToken = \"5913453:9060140:a2c18679ebbbb671122621cf9cc3608d31d015af\";\n\n\nfunction getAction(input){\n  var action;\n  if(input === \"option1\"){\n    action = \"create_deal\";\n  }\n  if(input === \"option2\"){\n    action = \"update_deal\";\n  }\n  if(input === \"option3\"){\n    action = \"do_nothing\";\n  }\n  return action;\n}\n\nlet addNotesInvoice = false;\nif(triggerInput.rules.addNotesInvoice === \"true\"){\n  addNotesInvoice = true;\n}\n\nlet updateDealValue = true;\nif(triggerInput.rules.updateDealValueWithInvoice === \"false\"){\n  updateDealValue = false;\n}\n\nlet invoice_created = getAction(triggerInput.rules.invCreated);\nlet invoice_paid = getAction(triggerInput.rules.invPaid);\nlet invoice_voided = getAction(triggerInput.rules.invVoided);\nlet invoice_deleted = getAction(triggerInput.rules.invDeleted);\n\n\nlet input = {\n  apiToken: apiToken,\n  cbApiKey: cbApiKey,\n  initialSync: initialSync,\n  integrationName: integrationName,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  syncFields: syncFields,\n  addNotes: addNotesInvoice,\n  syncSubscription: true,\n  updateDealValueInvAmount: updateDealValue,\n  events:[{\n    invoice_created:{\n      action: invoice_created, //create_deal,update_deal,do_nothing\n      pipeline: 1,\n      stage: 1\n    },\n    invoice_paid:{\n      action: invoice_paid, //create_deal,update_deal,do_nothing\n      pipeline: 1,\n      stage: 5\n    },\n    invoice_voided:{\n      action: invoice_voided, //create_deal,update_deal,do_nothing\n      pipeline: 1,\n      stage: 3\n    },\n    invoice_deleted:{\n      action: invoice_deleted, //create_deal,update_deal,do_nothing\n      pipeline: 1,\n      stage: 6\n    }\n  }]\n};\n\nlet getTpConfigParams = {\n    url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n    auth:{\n      Authorization: \"Basic \" + CE.b64(cbApiKey + \":\" + password)\n    },\n    query:{\n      integration_name: integrationName\n    }\n};\n\nlet tpConfigUpdateParams = {\n  url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body:  {\n     site_name: siteName,\n     api_key: cbApiKey,\n     integration_name: integrationName\n  }\n};\n\nlet syncParams = {\n  url: \"https://\" + siteName + \".\" + siteDomain + \"/api/v2/third_party_sync_details/retrieve_latest_sync\",\n  auth: {\n    Authorization: \"Basic \" + CE.b64(cbApiKey + \":\" + password)\n  },\n  query: {\n    'third_party_configuration[integration_name]': integrationName\n  }\n};\n\ndone({\n  input: input,\n  getTpConfigParams: getTpConfigParams,\n  tpConfigUpdateParams: tpConfigUpdateParams,\n  syncParams: syncParams\n});"}},{"id":236197,"onSuccess":["requestNewPipedriveToken_params"],"onFailure":["getTpEntityMappingOfCustomer2_params"],"name":"InvalidAccessToken","type":"filter","properties":{"body":"if((steps.getExistingDealsInPipedrive !== undefined) && (steps.getExistingDealsInPipedrive.response.code === 401)){\n  done(true);\n}\n\nif((steps.fetchInvoiceChargebee !== undefined) && (steps.fetchInvoiceChargebee.response.code === 401)){\n  done(true);\n}\n\nif((steps.fetchDealsPipedrive !== undefined) && (steps.fetchDealsPipedrive.response.code === 401)){\n  done(true);\n}\n\nif((steps.createDealPipedrive !== undefined) && (steps.createDealPipedrive.response.code === 401)){\n  done(true);\n}\n\nif((steps.addNote !== undefined) && (steps.addNote.response.code === 401)){\n  done(true);\n}\n\nif((steps.createDealPipedrive2 !== undefined) && (steps.createDealPipedrive2.response.code === 401)){\n  done(true);\n}\n\nif((steps.addNote3 !== undefined) && (steps.addNote3.response.code === 401)){\n  done(true);\n}\n\nif((steps.updateDealPipedrive !== undefined) && (steps.updateDealPipedrive.response.code === 401)){\n  done(true);\n}\n\nif((steps.addNote2 !== undefined) && (steps.addNote2.response.code === 401)){\n  done(true);\n}\n\nif((steps.getDetailsOfDeal1 !== undefined) && (steps.getDetailsOfDeal1.response.code === 401)){\n  done(true);\n}\n\ndone(false);"}},{"id":236198,"onSuccess":["requestNewPipedriveToken_params1"],"onFailure":[],"name":"InvalidAccessToken_1","type":"filter","properties":{"body":"if((steps.getDetailsOfExistingDeal !== undefined) && (steps.getDetailsOfExistingDeal.response.code === 401)){\n  done(true);\n}\n\nif((steps.updateExistingDeal !== undefined) && (steps.updateExistingDeal.response.code === 401)){\n  done(true);\n}\n\nif((steps.addNote4 !== undefined) && (steps.addNote4.response.code === 401)){\n  done(true);\n}\n\ndone(false);"}},{"id":236199,"onSuccess":["invoiceInformation"],"onFailure":["loopOverChangedInvoice"],"name":"invoiceFound","type":"filter","properties":{"body":"if(steps.fetchInvoiceChargebee.response.code !== 200){\n  done(false);\n}\n\nif((steps.fetchInvoiceChargebee.response.body.status === \"failuare\") || (steps.fetchInvoiceChargebee.response.body.status === \"failure\")){\n  done(false);\n}\n\nif(steps.fetchInvoiceChargebee.response.body.invoice === undefined){\n  done(false);\n}\n\ndone(true);\n\n"}},{"id":236200,"onSuccess":["defineActionForExistingDeals"],"onFailure":["loopOverExistingDeals"],"name":"invoiceFoundOnChargebee","type":"filter","properties":{"body":"if(steps.getInvoiceOnChargebee.response.body.list === undefined){\n  done(false);\n}\n\ndone(true);"}},{"id":236201,"onSuccess":["retrieveTpEntityMappingForDeal_params2"],"onFailure":[],"name":"invoiceInformation","type":"script","properties":{"body":"// let customer_id = steps.fetchInvoiceChargebee.request.query.customer_id;\n// let invoiceData = null;\n\n// if(steps.invoiceFound.continue === true){\n//   invoiceData = steps.fetchInvoiceChargebee.response.body.list[0];\n// }else{\n//   invoiceData = steps.eventInformation.eventData;\n// }\n\n\n\n// done({\n//   customerId: customer_id,\n//   invoiceData :invoiceData\n// });\n\nlet customer_id = steps.fetchInvoiceChargebee.request.query.customer_id;\nlet subscriptionData = steps.fetchInvoiceChargebee.response.body.subscription;\nlet invoiceData = (steps.fetchInvoiceChargebee.response.body.invoice !== undefined) ? steps.fetchInvoiceChargebee.response.body.invoice : null;\n\ndone({\n  subscriptionData: subscriptionData,\n  invoiceData: invoiceData\n});"}},{"id":236202,"onSuccess":["hasNextOffsetChangeInvoice"],"onFailure":[],"name":"invoiceList","type":"script","properties":{"body":"let contactList = [];\nlet configuration = steps.ConfigParams.tpConfig.third_party_configuration.config_json;\n\nif(steps.subscriptionList !== undefined){\n  contactList = steps.invoiceList.contactList;\n}\n\nif((steps.fetchChangedInvoice.response.body.list !== undefined) && (steps.fetchChangedInvoice.response.body.list.length > 0) && configuration.batch.sync_invoice.change_invoice !== null ){\n  if(contactList.length === 0){\n    contactList = steps.fetchChangedInvoice.response.body.list;\n  }else if(contactList.length < configuration.batch.batch_size){\n    contactList = contactList.concat(steps.fetchChangedInvoice.response.body.list);\n  }else{\n    \ndone({\n  contactList: contactList\n});\n    \n  }\n}\n\ndone({\n  contactList: contactList\n});"}},{"id":236203,"onSuccess":["loopOverChangedInvoice"],"onFailure":["isAuthErrorGetPersonPipedrive"],"name":"isAnyPersonExist","type":"filter","properties":{"body":"if(steps.fetchChangedInvoice.response.code === 200){\n  if(steps.fetchChangedInvoice.response.body.data !== null){\n    done(true);\n  }\n}\n\ndone(false);"}},{"id":236204,"onSuccess":["defineAction"],"onFailure":["InvalidAccessToken"],"name":"isAuthenticationError","type":"filter","properties":{"body":"if(steps.getExistingDealsInPipedrive.response.code !== 200){\n  done(false);\n}\n\ndone(true);"}},{"id":236205,"onSuccess":["dealFieldInformation"],"onFailure":["getNewToken_params"],"name":"isAuthErrorCreateDealField","type":"filter","properties":{"body":"if(steps.createDealField.response.code === 401){\n  done(false);\n}\n\ndone(true);"}},{"id":236206,"onSuccess":["loopOverChangedInvoice"],"onFailure":[],"name":"isAuthErrorFetchInvoiceChargebee","type":"filter","properties":{"body":"if(steps.fetchInvoiceChargebee.response.code !== 200){\n  done(false);\n}\n\ndone(true);"}},{"id":236207,"onSuccess":["dealFieldsConfig"],"onFailure":["getNewToken_params"],"name":"isAuthErrorGetDealFieldsPipedrive","type":"filter","properties":{"body":"if(steps.getDealFieldsPipedrive.response.code === 401){\n  done(false);\n}\n\ndone(true);"}},{"id":236208,"onSuccess":[],"onFailure":[],"name":"isAuthErrorGetDetailsOfDeal","type":"filter","properties":{"body":"if(steps.getDetailsOfDeal.response.code === 401){\n  done(false);\n}\n\ndone(true);"}},{"id":236209,"onSuccess":["updateTpConfigParams_3"],"onFailure":["getNewToken_params"],"name":"isAuthErrorGetPersonPipedrive","type":"filter","properties":{"body":"if(steps.fetchChangedInvoice.response.code === 401){\n  done(false);\n}\n\ndone(true);"}},{"id":236210,"onSuccess":["updateTpEntityParams_1"],"onFailure":["InvalidAccessToken_1"],"name":"isAuthErrorUpdateExistingDeal","type":"filter","properties":{"body":"if(steps.updateExistingDeal.response.code === 401){\n  done(false);\n}\n\ndone(true);"}},{"id":236211,"onSuccess":["syncSubscription"],"onFailure":["getNewToken_params"],"name":"isAuthFailed","type":"filter","properties":{"body":"if(steps.getAccountInformationPipedrive.response.code === 401){\n  done(false);\n}\n\ndone(true);"}},{"id":236212,"onSuccess":["isDealOpen1"],"onFailure":["deriveActionInvCreate"],"name":"isDealNotFound","type":"filter","properties":{"body":"if(steps.getDetailsOfDeal.response.code === 404){\n  done(false);\n}\n\ndone(true);"}},{"id":236213,"onSuccess":["updateDealParams"],"onFailure":[],"name":"isDealOpen","type":"filter","properties":{"body":"if(steps.getDetailsOfDeal.response.code === 200){\n  if(steps.getDetailsOfDeal.response.body.data.status !== 'won'){\n    done(true);\n  }\n}\n\ndone(false);"}},{"id":236214,"onSuccess":["defineAction"],"onFailure":["updateErrorLog1"],"name":"isDealOpen1","type":"filter","properties":{"body":"if(steps.getDetailsOfDeal.response.code !== 200){\n  done(false);\n}\n\nif(steps.getDetailsOfDeal.response.code === 200){\n  if(steps.getDetailsOfDeal.response.body.data.status !== 'won'){\n    done(true);\n  }\n}\n\ndone(false);"}},{"id":236215,"onSuccess":["getDetailsOfExistingDeal_params"],"onFailure":[],"name":"isExistingDealOpen","type":"filter","properties":{"body":"if(steps.loopOverExistingDeals.entry.status === \"open\"){\n  done(true);\n}\n\ndone(false);"}},{"id":236216,"onSuccess":["getDetailsOfDeal"],"onFailure":["deriveActionInvCreate"],"name":"isIdNull","type":"filter","properties":{"body":"if(steps.getDetailsOfDealParam.id === null){\n  done(false);\n}\n\ndone(true);"}},{"id":236217,"onSuccess":["retrieveTpEntityMappingForDeal_params"],"onFailure":["loopOverExistingDeals"],"name":"isInvoiceDeal","type":"filter","properties":{"body":"let fieldNameInvoiceId = steps.ConfigParams.customFieldMap.dealFields.CB_Invoice_ID;\nif(steps.loopOverExistingDeals.entry[fieldNameInvoiceId] === null){\n  done(false);\n}\n\ndone(true);"}},{"id":236218,"onSuccess":["ConfigParams"],"onFailure":["getNewToken_params"],"name":"isTokenAboutToExpire","type":"filter","properties":{"body":"let currentTime = Math.round((new Date().getTime())/1000);\nlet expiryTime = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.OAuth_Parameters.expiry_time || 0;\n\nif((expiryTime - currentTime) > (50 * 60)){ //Difference greater than 30 minutes (Unix Timestamp)\n  done(true);\n}\n\ndone(false);"}},{"id":236219,"onSuccess":["getAccountInformationPipedrive"],"onFailure":[],"name":"LastSyncDetails","type":"httpRequest","properties":{"query":"${steps.InputParams.syncParams.query}","url":"${steps.InputParams.syncParams.url}","headers":"${steps.InputParams.syncParams.auth}","method":"GET"}},{"id":236220,"onSuccess":["dealIdFoundInTpEntity"],"onFailure":[],"name":"latestDataChargebee","type":"script","properties":{"body":"// let customer_id = steps.fetchSubscriptionChargebee.request.query.customer_id;\nlet subscriptionData = steps.getLatestCustomerDataChargebee.response.body.subscription;\nlet invoiceData = (steps.getLatestCustomerDataChargebee.response.body.invoice !== undefined) ? steps.getLatestCustomerDataChargebee.response.body.invoice : null;\n\ndone({\n  subscriptionData: subscriptionData,\n  invoiceData: invoiceData\n});"}},{"id":236221,"onSuccess":["getTpEntityMappingOfCustomer_params"],"onFailure":["hasBatchingFinished"],"name":"loopOverChangedInvoice","type":"loop","properties":{"list":"${steps.CBList.list}"}},{"id":236222,"onSuccess":["createDealField"],"onFailure":["updateTpConfigParams_2"],"name":"loopOverDealFieldsToCreate","type":"loop","properties":{"list":"${steps.dealFieldsConfig.dealFieldsToCreate}"}},{"id":236223,"onSuccess":["eventInformation"],"onFailure":["loopOverChangedInvoice"],"name":"loopOverEvents","type":"loop","properties":{"list":"${steps.fetchEventInvoiceDeleted.response.body}"}},{"id":236224,"onSuccess":["isInvoiceDeal"],"onFailure":["hasNextOffsetForExistingDeals"],"name":"loopOverExistingDeals","type":"loop","properties":{"list":"${steps.getExistingDealsInPipedrive.response.body.data}"}},{"id":236225,"onSuccess":[],"onFailure":["noInvoiceInformation"],"name":"loopOverSubStatusArray","type":"loop","properties":{"list":"${steps.subscriptionStatusArray.array}"}},{"id":236226,"onSuccess":["loopOverChangedInvoice"],"onFailure":["hasBatchingFinished"],"name":"noDataToSync","type":"filter","properties":{"body":"// if(steps.fetchChangedInvoice.response.body.list === undefined){\n//   done(false);\n// }\n\n// done(true);\n\nif(steps.CBList.list === null){\n  done(false);\n}\n\ndone(true);"}},{"id":236227,"onSuccess":["deriveActionInvCreate"],"onFailure":["isAuthenticationError"],"name":"noDealExist","type":"filter","properties":{"body":"// let flag = false;\n\n// if(steps.getTpEntityMappingOfInvoice.response.code === 404){\n//   flag = true;\n//   done(flag);\n// }\n\n// if(steps.getTpEntityMappingOfInvoice.response.body.third_party_entity_mapping.third_party_entity_id === undefined){\n//   flag = true;\n// }else{\n//   flag = false;\n//   if(steps.getExistingDealsInPipedrive.response.code === 404){\n//     flag = true;\n//   }\n// }\n// done(flag);\n\n\n// if(((steps.getTpEntityMappingOfInvoice.response.code === 404) || (steps.getTpEntityMappingOfInvoice.response.body.third_party_entity_mapping.third_party_entity_id === undefined)) && (steps.getExistingDealsInPipedrive.response.code ===404)){\n//   done(true);\n// }\n\n// done(false);\n\n\nif(steps.getTpEntityMappingOfInvoice.response.code === 404){\n  done(true);\n}\n\nif(steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource.invoice_status === undefined){\n  done(true);\n}else{\n  if(steps.getExistingDealsInPipedrive.response.code === 200){\n    if(steps.getExistingDealsInPipedrive.response.body.data.status !== \"open\"){\n      done(flag);\n    }\n  }\n  done(false);\n}"}},{"id":236228,"onSuccess":["fetchChangedInvoice_params"],"onFailure":["loopOverDealFieldsToCreate"],"name":"noDealFieldToCreate","type":"filter","properties":{"body":"if(steps.dealFieldsConfig.dealFieldsToCreate.length !== 0){\n  done(false);\n}\n\ndone(true);"}},{"id":236229,"onSuccess":["getDetailsOfDealParam1"],"onFailure":[],"name":"noDealFoundToUpdate","type":"filter","properties":{"body":"if(steps.fetchDealsPipedrive.response.body.data === null){\n  done(false);\n}\n\ndone(true);"}},{"id":236230,"onSuccess":["fetchDealParams"],"onFailure":["loopOverChangedInvoice"],"name":"noInvoiceInformation","type":"filter","properties":{"body":"if(steps.invoiceInformation === undefined){\n  done(false);\n}\n\nif((steps.invoiceInformation.invoiceData === undefined) || (steps.invoiceInformation.invoiceData === null)){\n  done(false);\n}\n\ndone(true);"}},{"id":236231,"onSuccess":["loopOverChangedInvoice"],"onFailure":[],"name":"noSubscriptionFoundParams","type":"script","properties":{"body":"\nlet customer_id = steps.fetchInvoiceChargebee.request.query.customer_id;\n\nlet chargebee_data_url = \"/admin-console/subscriptions/\"+customer_id;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"'>\"+customer_id+\"</a>\"\n\nsteps.ConfigParams.config.records.errorCSV.push(cb_link + \",Subscription Not Available\");\n\ndone(steps.ConfigParams.config.records.errorCSV);"}},{"id":236232,"onSuccess":["addNote"],"onFailure":["loopOverChangedInvoice"],"name":"noteParams","type":"script","properties":{"body":"let deal_id = steps.createDealPipedrive.response.body.data.id;\nlet cb_id = steps.createDealPipedrive.response.body.data.title;\nlet org_id = steps.createDealPipedrive.request.body.org_id || '';\nlet person_id = steps.createDealPipedrive.request.body.person_id || '';\n\nlet cb_invoice_id = steps.loopOverChangedInvoice.entry.invoice.id;\nlet deal_value = (steps.loopOverChangedInvoice.entry.invoice.total)/100 || \"0\";\nlet currency_code = steps.loopOverChangedInvoice.entry.invoice.currency_code;\n\n// let event_name = steps.defineAction.event_name;\nlet event_name  = \"invoice_created\";\n\nlet content = \"Deal Worth \" + currency_code + \" \" + deal_value + \" created due to invoice(\" + cb_invoice_id + \") \" + event_name.split(\"_\")[1] + \" in Chargebee\";\n\nlet noteConfig = {\n  url : 'https://api-proxy.pipedrive.com/notes/',\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  },\n  body:{\n    content : content,\n    deal_id : deal_id,\n    org_id: org_id,\n    person_id: person_id\n  }\n}\n\ndone({\n  noteConfig: noteConfig\n});"}},{"id":236233,"onSuccess":["addNote2"],"onFailure":["loopOverChangedInvoice"],"name":"noteParams2","type":"script","properties":{"body":"let deal_id = steps.updateDealPipedrive.response.body.data.id;\nlet cb_id = steps.updateDealPipedrive.response.body.data.title;\nlet org_id = steps.updateDealPipedrive.request.body.org_id || '';\nlet person_id = steps.updateDealPipedrive.request.body.person_id || '';\n\nlet event_name = steps.defineAction.event_name;\n\nlet cb_invoice_id = steps.loopOverChangedInvoice.entry.invoice.id;\nlet deal_value = (steps.loopOverChangedInvoice.entry.invoice.total)/100  || \"0\";\nlet currency_code = steps.loopOverChangedInvoice.entry.invoice.currency_code;\n\nlet content = \"Deal Worth \" + currency_code + \" \" + deal_value + \" updated due to invoice(\" + cb_invoice_id + \") \" + event_name.split(\"_\")[1] + \" in Chargebee\";\n\nlet noteConfig = {\n  url : 'https://api-proxy.pipedrive.com/notes/',\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  },\n  body:{\n    content : content,\n    deal_id : deal_id,\n    org_id: org_id,\n    person_id: person_id\n  }\n}\n\ndone({\n  noteConfig: noteConfig\n});"}},{"id":236234,"onSuccess":["addNote3"],"onFailure":["loopOverChangedInvoice"],"name":"noteParams3","type":"script","properties":{"body":"let deal_id = steps.createDealPipedrive2.response.body.data.id;\nlet cb_id = steps.createDealPipedrive2.response.body.data.title;\nlet org_id = steps.createDealPipedrive2.request.body.org_id || '';\nlet person_id = steps.createDealPipedrive2.request.body.person_id || '';\n\nlet cb_invoice_id = steps.loopOverChangedInvoice.entry.invoice.id;\nlet deal_value = (steps.loopOverChangedInvoice.entry.invoice.total)/100  || \"0\";\nlet currency_code = steps.loopOverChangedInvoice.entry.invoice.currency_code;\n\nlet event_name = steps.defineAction.event_name;\n\nlet content = \"Deal Worth \" + currency_code + \" \" + deal_value + \" created due to invoice(\" + cb_invoice_id + \") \" + event_name.split(\"_\")[1] + \" in Chargebee\";\n\nlet noteConfig = {\n  url : 'https://api-proxy.pipedrive.com/notes/',\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  },\n  body:{\n    content : content,\n    deal_id : deal_id,\n    org_id: org_id,\n    person_id: person_id\n  }\n}\n\ndone({\n  noteConfig: noteConfig\n});"}},{"id":236235,"onSuccess":["addNote4"],"onFailure":[],"name":"noteParams4","type":"script","properties":{"body":"let deal_id = steps.updateExistingDeal.response.body.data.id;\nlet org_id = steps.updateExistingDeal.request.body.org_id || '';\nlet person_id = steps.updateExistingDeal.request.body.person_id || '';\n\nlet cb_invoice_id = steps.getInvoiceOnChargebee.response.body.list[0]['invoice']['id'];\nlet deal_value = (steps.loopOverExistingDeals.entry.value)/100;\nlet currency_code = steps.loopOverExistingDeals.entry.currency;\n\nlet event_name = steps.defineActionForExistingDeals.event_name;\n\nlet content = \"Deal Worth \" + currency_code + \" \" + deal_value + \" updated due to invoice(\" + cb_invoice_id + \") \" + event_name.split(\"_\")[1] + \" in Chargebee\";\n\nlet noteConfig = {\n  url : 'https://api-proxy.pipedrive.com/notes/',\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  },\n  body:{\n    content : content,\n    deal_id : deal_id,\n    org_id: org_id,\n    person_id: person_id\n  }\n}\n\ndone({\n  noteConfig: noteConfig\n});"}},{"id":236236,"onSuccess":["deriveActionInvCreate"],"onFailure":["getDetailsOfDealParam"],"name":"noTpEntityMappingFound","type":"filter","properties":{"body":"// if(steps.fetchDealsPipedrive.response.body.data === null){\n//   done(true);\n// }else{\n//   done(false);\n// }\n\n\nif((steps.retrieveTpEntityMappingForDeal2.response.code === 200) && (steps.retrieveTpEntityMappingForDeal2.response.body.third_party_entity_mapping.third_party_entity_id === undefined)){\n  done(true);\n}\n\n\nif(steps.retrieveTpEntityMappingForDeal2.response.code === 404){\n  done(true);\n}\n\ndone(false);"}},{"id":236237,"onSuccess":["getPipedriveElementInstance"],"onFailure":["ApiError"],"name":"requestNewPipedriveToken","type":"httpRequest","properties":{"body":"${steps.requestNewPipedriveToken_params.payload.body}","url":"${steps.requestNewPipedriveToken_params.payload.url}","headers":"${steps.requestNewPipedriveToken_params.payload.headers}","method":"POST"}},{"id":236238,"onSuccess":["getPipedriveElementInstance1"],"onFailure":["ApiError"],"name":"requestNewPipedriveToken1","type":"httpRequest","properties":{"body":"${steps.requestNewPipedriveToken_params1.payload.body}","url":"${steps.requestNewPipedriveToken_params1.payload.url}","headers":"${steps.requestNewPipedriveToken_params1.payload.headers}","method":"GET"}},{"id":236239,"onSuccess":["requestNewPipedriveToken"],"onFailure":[],"name":"requestNewPipedriveToken_params","type":"script","properties":{"body":"let tpConfig = steps.ConfigParams.tpConfig;\n\nif(tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters === undefined){\n  done(false);\n}\n\nlet params = tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters;\n\nlet payload = {\n  url: \"https://oauth.pipedrive.com/oauth/token\",\n  headers : {\n    \"Content-Type\" : \"application/x-www-form-urlencoded\",\n    \"Authorization\" : \"Basic \" + CE.b64(params.client_info.client_id + \":\" + params.client_info.client_secret)\n  },\n  body : \"grant_type=refresh_token&refresh_token=\" + params.refresh_token\n};\n\ndone({\n  payload: payload\n});"}},{"id":236240,"onSuccess":["requestNewPipedriveToken1"],"onFailure":[],"name":"requestNewPipedriveToken_params1","type":"script","properties":{"body":"let tpConfig = steps.ConfigParams.tpConfig;\n\nif(tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters === undefined){\n  done(false);\n}\n\nlet params = tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters;\n\nlet payload = {\n  url: \"https://oauth.pipedrive.com/oauth/token\",\n  headers : {\n    \"Content-Type\" : \"application/x-www-form-urlencoded\",\n    \"Authorization\" : \"Basic \" + CE.b64(params.client_info.client_id + \":\" + params.client_info.client_secret)\n  },\n  body : \"grant_type=refresh_token&refresh_token=\" + params.refresh_token\n};\n\ndone({\n  payload: payload\n});"}},{"id":236241,"onSuccess":[],"onFailure":[],"name":"retrieveTpEntityMappingForDeal","type":"httpRequest","properties":{"query":"${steps.retrieveTpEntityMappingForDeal_params.payload.query}","url":"${steps.retrieveTpEntityMappingForDeal_params.payload.url}","headers":"${steps.retrieveTpEntityMappingForDeal_params.payload.auth}","method":"GET"}},{"id":236242,"onSuccess":["noTpEntityMappingFound"],"onFailure":["ApiError"],"name":"retrieveTpEntityMappingForDeal2","type":"httpRequest","properties":{"query":"${steps.retrieveTpEntityMappingForDeal_params2.payload.query}","url":"${steps.retrieveTpEntityMappingForDeal_params2.payload.url}","headers":"${steps.retrieveTpEntityMappingForDeal_params2.payload.auth}","method":"GET"}},{"id":236243,"onSuccess":["retrieveTpEntityMappingForDeal"],"onFailure":[],"name":"retrieveTpEntityMappingForDeal_params","type":"script","properties":{"body":"let apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\n\nlet dealTitle = steps.loopOverExistingDeals.entry.title;\nlet invoiceId = dealTitle.split(\": \")[1];\n\nlet payload = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/retrieve\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: invoiceId,\n    entity_type: \"invoice\",\n  }\n};\n\ndone({\n  payload: payload\n});\n"}},{"id":236244,"onSuccess":["retrieveTpEntityMappingForDeal2"],"onFailure":[],"name":"retrieveTpEntityMappingForDeal_params2","type":"script","properties":{"body":"let apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\n\nlet invoiceId = steps.invoiceInformation.invoiceData.id;\n\nlet payload = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/retrieve\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: invoiceId,\n    entity_type: \"invoice\",\n  }\n};\n\ndone({\n  payload: payload\n});\n"}},{"id":236245,"onSuccess":[],"onFailure":[],"name":"setOffsetChangedInvoice","type":"script","properties":{"body":"let offset = steps.fetchChangedInvoice.response.body.next_offset;\n\ndone({\n  offset: offset\n});"}},{"id":236246,"onSuccess":["fetchChangedInvoice_params"],"onFailure":[],"name":"setOffsetChangInvoice","type":"script","properties":{"body":"let offset = steps.fetchChangedInvoice.response.body.next_offset;\n\ndone({\n  offset: offset\n});"}},{"id":236247,"onSuccess":["getExistingDealsParams"],"onFailure":[],"name":"setOffsetForExistingDeals","type":"script","properties":{"body":"done({\n  offset: steps.getExistingDealsInPipedrive.response.body.additional_data.pagination.next_start\n});"}},{"id":236248,"onSuccess":["updateLoopIndex"],"onFailure":[],"name":"storeLatestAuthData","type":"script","properties":{"body":"let OAuth_Parameters = {\n  \"OAuthDetails\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters\n};\n\nOAuth_Parameters.OAuthDetails.access_token = steps.requestNewPipedriveToken.response.body.token_type + \" \" + steps.requestNewPipedriveToken.response.body.access_token;\nOAuth_Parameters.OAuthDetails.expiry_time = Math.round((new Date().getTime())/1000) + Number(steps.requestNewPipedriveToken.response.body.expires_in);\nOAuth_Parameters.OAuthDetails.refresh_token = steps.requestNewPipedriveToken.response.body.refresh_token;\nOAuth_Parameters.OAuthDetails.scope = steps.requestNewPipedriveToken.response.body.scope;\nOAuth_Parameters.OAuthDetails.token_type = steps.requestNewPipedriveToken.response.body.token_type;\n\nsteps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters = OAuth_Parameters.OAuthDetails;\n\ndone(steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters);"}},{"id":236249,"onSuccess":["updateLoopIndex1"],"onFailure":[],"name":"storeLatestAuthData1","type":"script","properties":{"body":"let OAuth_Parameters = {\n  \"OAuthDetails\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters\n};\n\nOAuth_Parameters.OAuthDetails.access_token = steps.requestNewPipedriveToken1.response.body.token_type + \" \" + steps.requestNewPipedriveToken1.response.body.access_token;\nOAuth_Parameters.OAuthDetails.expiry_time = Math.round((new Date().getTime())/1000) + Number(steps.requestNewPipedriveToken1.response.body.expires_in);\nOAuth_Parameters.OAuthDetails.refresh_token = steps.requestNewPipedriveToken1.response.body.refresh_token;\nOAuth_Parameters.OAuthDetails.scope = steps.requestNewPipedriveToken1.response.body.scope;\nOAuth_Parameters.OAuthDetails.token_type = steps.requestNewPipedriveToken1.response.body.token_type;\n\nsteps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters = OAuth_Parameters.OAuthDetails;\n\ndone(steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters);"}},{"id":236250,"onSuccess":["loopOverSubStatusArray"],"onFailure":[],"name":"subscriptionStatusArray","type":"script","properties":{"body":"done({\n  array:[\"active\",\"non_renewing\",\"in_trial\",\"future\",\"paused\",\"cancelled\"]\n });"}},{"id":236251,"onSuccess":[],"onFailure":[],"name":"Success","type":"script","properties":{"body":"let successCSV = steps.ConfigParams.config.records.successCSV || '';\nif(successCSV !== ''){\n  successCSVLength = successCSV.length;\n}else{\n  successCSVLength = 0;\n  successCSV=[];\n}\n\nlet errorCSV =  steps.ConfigParams.config.records.errorCSV || '';\nif(errorCSV !== ''){\n  errorCSVLength = errorCSV.length;\n}else{\n  errorCSVLength = 0;\n  errorCSV=[];\n}\n\nlet sync_result = {\n  \"successCSVLength\": successCSVLength,\n  \"errorCSVLength\" : errorCSVLength,\n  \"listContent_successCSV\": successCSV,\n  \"listContent_errorCSV\": errorCSV\n};\n\n\ndone(sync_result);"}},{"id":236252,"onSuccess":["getDealFieldsPipedrive"],"onFailure":["Success"],"name":"syncSubscription","type":"filter","properties":{"body":"done(steps.ConfigParams.config.params.syncSubscription);"}},{"id":236253,"onSuccess":["getLatestCustomerDataChargebee_params"],"onFailure":["updateTpEntityError_params"],"name":"TpEntityMappingFound","type":"filter","properties":{"body":"if((steps.getTpEntityMappingOfCustomer.response.code === 200) && (steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.third_party_entity_id !== undefined)){\n  if(steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.status === \"update_failed\"){\n    done(false);\n  }\n  done(true);\n}\n\n\nif(steps.getTpEntityMappingOfCustomer.response.code === 404){\n  done(false);\n}\n\ndone(false);"}},{"id":236254,"onSuccess":["CustomFieldParamsForErrorRecords"],"onFailure":[],"name":"TransformInvoiceIds","type":"script","properties":{"body":"let invoiceList = steps.invoiceList.contactList;\nlet list;\nlet ids;\nlet errorList = steps.FailedToSync.invoiceIds;\n\nif(errorList.length > 0){\n  for(let i = 0; i < invoiceList.length; ++i){\n    if(errorList.indexOf(invoiceList[i].invoice.id) > -1){\n       errorList.splice(errorList.indexOf(invoiceList[i].invoice.id),1);\n    }\n  } \n}\n\nif(errorList.length > 0){\n  ids = \"[\";\nfor( let i = 0; i < errorList.length; ++i){\n  ids += errorList[i];\n  if(i+1 !==  errorList.length){\n    ids += \",\";\n  }\n}\n ids += \"]\";\n}\n\ndone({errorList: errorList,\n  ids : ids\n});\n\n\n"}},{"id":236255,"onSuccess":["ConfigParams"],"onFailure":[],"name":"updateConfiguration","type":"script","properties":{"body":"let OAuth_Parameters = {\n  \"OAuthDetails\": steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.OAuth_Parameters\n};\n\nOAuth_Parameters.OAuthDetails.access_token = steps.getNewToken.response.body.token_type + \" \" + steps.getNewToken.response.body.access_token;\nOAuth_Parameters.OAuthDetails.expiry_time = Math.round((new Date().getTime())/1000) + Number(steps.getNewToken.response.body.expires_in);\nOAuth_Parameters.OAuthDetails.refresh_token = steps.getNewToken.response.body.refresh_token;\nOAuth_Parameters.OAuthDetails.scope = steps.getNewToken.response.body.scope;\nOAuth_Parameters.OAuthDetails.token_type = steps.getNewToken.response.body.token_type;\n\ndone({\n  OAuthData: OAuth_Parameters\n});"}},{"id":236256,"onSuccess":["updateTpEntityParams_3"],"onFailure":["InvalidAccessToken"],"name":"updateDealAuthError","type":"filter","properties":{"body":"if(steps.updateDealPipedrive.response.code === 200 || steps.updateDealPipedrive.response.code === 201){\n  done(true);\n}\n\ndone(false);"}},{"id":236257,"onSuccess":["updateDealPipedrive"],"onFailure":[],"name":"updateDealParams","type":"script","properties":{"body":"let fieldNameInvoiceId = steps.ConfigParams.customFieldMap.dealFields.CB_Invoice_ID;\nlet fieldNameInvoiceStatus = steps.ConfigParams.customFieldMap.dealFields.CB_Invoice_Status;\n\n\n// let pipedrive_id = steps.loopOverChangedInvoice.entry['id'];\n\nlet pipedrive_id = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.third_party_entity_id;\nlet invoiceData = steps.loopOverChangedInvoice.entry.invoice;\n\nlet invoice_id = invoiceData.id;\nlet invoice_status = invoiceData.status;\nlet invoice_amount = parseFloat(parseInt(invoiceData.total, 10) / 100).toFixed(2);\nlet currency_code = invoiceData.currency_code;\n\n\nlet deal_id = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource.invoice_deal_id;\n\n\nlet updateDealConfig = {\n  url : 'https://api-proxy.pipedrive.com/deals/'+deal_id,\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  },\n  body:{\n    title: \"Chargebee Invoice ID: \" + invoice_id,\n    currency: currency_code,\n    person_id: pipedrive_id\n  }\n}\n\nif(steps.ConfigParams.config.params.updateDealValueInvAmount === true){\n  updateDealConfig.body.value = invoice_amount;\n}\n\nif(steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource['org_id'] !== undefined){\n  let organization_id = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource['org_id'];\n  updateDealConfig.body.org_id = organization_id;\n}\n\nif(steps.defineAction.configuration.stage !== undefined){\n  let stage_id = steps.defineAction.configuration.stage;\n  updateDealConfig.body.stage_id = stage_id;\n}\n\nupdateDealConfig.body[fieldNameInvoiceId] = invoice_id;\nif((fieldNameInvoiceStatus !== null) && (fieldNameInvoiceStatus !== undefined)){\n  updateDealConfig.body[fieldNameInvoiceStatus] = invoice_status;\n}\n\ndone({\n  updateDealConfig: updateDealConfig\n});\n\n"}},{"id":236258,"onSuccess":["updateSuccess"],"onFailure":["updateSuccess"],"name":"updateDealPipedrive","type":"httpRequest","properties":{"query":"","body":"${steps.updateDealParams.updateDealConfig.body}","url":"${steps.updateDealParams.updateDealConfig.url}","headers":"${steps.updateDealParams.updateDealConfig.header}","acceptableStatusCodes":"200,201,401,500","method":"PUT"}},{"id":236259,"onSuccess":["updateThirdPartyInstance"],"onFailure":[],"name":"updateElementInstanceParams","type":"script","properties":{"body":"let thirdPartyElementId = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.thirdParty.instance || null;\n\nlet config = steps.getThirdPartyInstanceDetails.response.body;\n\nlet accessToken  = steps.getNewToken.response.body.access_token;\nlet tokenType = steps.getNewToken.response.body.token_type;\n\nconfig.configuration['access_token'] = tokenType + \" \" + accessToken;\n\nlet updateParams={\n  url: \"/instances/\"+thirdPartyElementId,\n  body: config\n};\n\ndone({\n  updateParams: updateParams\n});"}},{"id":236260,"onSuccess":[],"onFailure":[],"name":"updateErrorLog","type":"script","properties":{"body":"let customer_id = steps.invoiceInformation.invoiceData['invoice']['customer_id'];\n\nlet chargebee_data_url = \"/admin-console/customers/\"+customer_id;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"'>\"+customer_id+\"</a>\";\n\nsteps.ConfigParams.config.records.errorCSV.push(cb_link + \",Deal Closed\");\n\ndone(steps.ConfigParams.config.records.errorCSV);"}},{"id":236261,"onSuccess":["loopOverChangedInvoice"],"onFailure":[],"name":"updateErrorLog1","type":"script","properties":{"body":"let invoice_id = steps.invoiceInformation.invoiceData.id;\n\nlet chargebee_data_url = \"/admin-console/subscriptions/\"+invoice_id;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"'>\"+invoice_id+\"</a>\"\n\nsteps.ConfigParams.config.records.errorCSV.push(cb_link + \", - Deal sync failed\");\n\ndone(steps.ConfigParams.config.records.errorCSV);"}},{"id":236262,"onSuccess":["updateExistingDealSuccess"],"onFailure":["updateExistingDealSuccess"],"name":"updateExistingDeal","type":"httpRequest","properties":{"body":"${steps.updateTheExistingDeal_params.updateDealConfig.body}","url":"${steps.updateTheExistingDeal_params.updateDealConfig.url}","headers":"${steps.updateTheExistingDeal_params.updateDealConfig.header}","method":"PUT"}},{"id":236263,"onSuccess":[],"onFailure":[],"name":"updateExistingDeal_FailedLog","type":"script","properties":{"body":"let invoice_id = steps.getInvoiceOnChargebee.response.body.list[0]['invoice']['id'];\n\nlet chargebee_data_url = \"/admin-console/invoices/\"+invoice_id;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"'>\"+invoice_id+\"</a>\";\n\nlet deal_id = 'undefined';\ndeal_id = steps.loopOverExistingDeals.entry.id;\n\nlet pipedrive_data_url = \"https://chargebee-keyvaluedevelopment-sandbox-3fa22b.pipedrive.com/deals/\" + deal_id;\nlet pipedrive_link = \"<a href='\"+pipedrive_data_url+\"'>\"+deal_id+\"</a>\";\n\nsteps.ConfigParams.config.records.errorCSV.push(\"Failed to Update the Invoice \" + cb_link + \" on Chargebee as deal \" + pipedrive_link + \" in Pipedrive\");\n\ndone(steps.ConfigParams.config.records.errorCSV);"}},{"id":236264,"onSuccess":["addNotesConfigured4"],"onFailure":[],"name":"updateExistingDealLog","type":"script","properties":{"body":"let invoice_id = steps.getInvoiceOnChargebee.response.body.list[0]['invoice']['id'] || null;\n\nlet customer_id = steps.getInvoiceOnChargebee.response.body.list[0]['invoice']['customer_id'] || null;\n\nlet chargebee_data_url = \"/admin-console/invoices/\"+invoice_id;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"'>\"+customer_id+\"</a>\"\n\nlet deal_id = steps.loopOverExistingDeals.entry.id;\n\nlet company_domain = steps.getAccountInformationPipedrive.response.body.data.company_domain;\nlet pipedrive_data_url = \"https://\"+company_domain+\".pipedrive.com/deals/\" + deal_id;\nlet pipedrive_link = \"<a href='\"+pipedrive_data_url+\"'>\"+deal_id+\"</a>\";\n\n\nif((steps.updateExistingDeal.response.code === 200) || (steps.updateExistingDeal.response.code === 201)){\n  steps.ConfigParams.config.records.successCSV.push(\"Invoice \" + cb_link + \" on Chargebee is synced as deal \" + pipedrive_link + \" in Pipedrive\");\n  done(steps.ConfigParams.config.records.successCSV);\n}\n\nsteps.ConfigParams.config.records.errorCSV.push(cb_link + \" - Deal sync failed\");\ndone(steps.ConfigParams.config.records.errorCSV);"}},{"id":236265,"onSuccess":["updateTpEntityParams_1"],"onFailure":["isAuthErrorUpdateExistingDeal"],"name":"updateExistingDealSuccess","type":"filter","properties":{"body":"if((steps.updateExistingDeal.response.code === 200) || (steps.updateExistingDeal.response.code === 201)){\n  done(true);\n}\n\ndone(false);"}},{"id":236266,"onSuccess":[],"onFailure":[],"name":"updateFailedLog","type":"script","properties":{"body":"let customer_id = steps.invoiceInformation.invoiceData['invoice']['customer_id'];\n\nlet chargebee_data_url = \"/admin-console/subscriptions/\"+customer_id;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"'>\"+customer_id+\"</a>\"\n\nsteps.ConfigParams.config.records.errorCSV.push(cb_link + \",Failed to Create Invoice\");\n\ndone(steps.ConfigParams.config.records.errorCSV);"}},{"id":236267,"onSuccess":["addNotesConfigured2"],"onFailure":[],"name":"updateLog","type":"script","properties":{"body":"let invoice_id = steps.loopOverChangedInvoice.entry.invoice.id;\n\nlet chargebee_data_url = \"/admin-console/invoices/\"+invoice_id;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"'>\"+invoice_id+\"</a>\";\n\nlet pipedrive = steps.updateDealPipedrive.response.body.data;\nlet person_id = pipedrive.person_id.value || 'undefined';\n\nlet company_domain = steps.getAccountInformationPipedrive.response.body.data.company_domain;\nlet pipedrive_data_url = \"https://\"+company_domain+\".pipedrive.com/deals/\" + pipedrive.id;\nlet pipedrive_link = \"<a href='\"+pipedrive_data_url+\"'>\"+pipedrive.id+\"</a>\";\n\nif((steps.updateDealPipedrive.response.code === 200) || (steps.updateDealPipedrive.response.code === 201)){\n  steps.ConfigParams.config.records.successCSV.push(\"Invoice \" + cb_link + \" on Chargebee is synced as deal \" + pipedrive_link + \" in Pipedrive\");\n  done(steps.ConfigParams.config.records.successCSV);\n}\n\nsteps.ConfigParams.config.records.errorCSV.push(cb_link + \" - Deal sync failed\");\ndone(steps.ConfigParams.config.records.errorCSV);\n\n"}},{"id":236268,"onSuccess":["loopOverChangedInvoice"],"onFailure":[],"name":"updateLoopIndex","type":"script","properties":{"body":"steps.loopOverChangedInvoice.index = (steps.loopOverChangedInvoice.index-1);\n\ndone(steps.loopOverChangedInvoice.index);"}},{"id":236269,"onSuccess":["loopOverExistingDeals"],"onFailure":[],"name":"updateLoopIndex1","type":"script","properties":{"body":"steps.loopOverExistingDeals.index = (steps.loopOverExistingDeals.index-1);\n\ndone(steps.loopOverExistingDeals.index);"}},{"id":236630,"onSuccess":["BatchSuccess"],"onFailure":[],"name":"UpdateOffset","type":"httpRequest","properties":{"body":"${steps.UpdateOffsetParams.tpConfigUpdateParams.body}","url":"${steps.UpdateOffsetParams.tpConfigUpdateParams.url}","headers":"${steps.UpdateOffsetParams.tpConfigUpdateParams.headers}","method":"POST"}},{"id":236629,"onSuccess":["UpdateOffset"],"onFailure":[],"name":"UpdateOffsetParams","type":"script","properties":{"body":"let offset;\n\nlet apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet type = steps.InputParams.input.integrationName;\n\nlet configuration = steps.ConfigParams.tpConfig.third_party_configuration.config_json;\nlet batch_size = configuration.batch.batch_size;\n\nif(steps.fetchChangedInvoice && steps.fetchChangedInvoice.response.body.next_offset !== undefined) {\n  offset = steps.fetchChangedInvoice.response.body.next_offset;\n   configuration.batch.sync_invoice.change_invoice = offset;\n}\nelse if(steps.GetError && steps.GetError.response.body.next_offset !== undefined){\n  offset =  steps.GetError.response.body.next_offset;\n   configuration.batch.sync_invoice={\n     \"get_error\" : offset,\n     \"change_invoice\" : null,\n     \"batch_size\":batch_size\n   }\n     ;\n}\n\nelse{\n  \n   if(steps.invoiceList && steps.invoiceList.contactList.length >= batch_size){\n  configuration.batch.sync_subscription = {\n     \"change_invoice\" : null,\n     \"batch_size\":batch_size\n   };\n}\n\n}\n\n// configuration.batch.batch_no =configuration.batch.batch_no + 1;\nconfiguration.batch.sync_invoice.status = \"running\"\n\nlet tpConfigUpdateParams = {\n  url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body: {\n    integration_name: type,\n    site_name: siteName,\n    api_key: apiKey,\n    config_json: configuration\n  }\n};\n\ndone({\n  tpConfigUpdateParams: tpConfigUpdateParams\n});\n\n\n\n"}},{"id":236270,"onSuccess":["updateDealParams"],"onFailure":["createDealParams2"],"name":"updateOrCreate","type":"filter","properties":{"body":"if(steps.defineAction.configuration.action === \"create_deal\"){\n  done(false);\n}\nelse{\n  done(true);\n}"}},{"id":236271,"onSuccess":["storeLatestAuthData"],"onFailure":[],"name":"updatePipedriveElementInstance","type":"request","properties":{"body":"${steps.updatePipedriveElementInstance_params.updateParams.body}","api":"${steps.updatePipedriveElementInstance_params.updateParams.url}","method":"PUT"}},{"id":236272,"onSuccess":["storeLatestAuthData1"],"onFailure":[],"name":"updatePipedriveElementInstance1","type":"request","properties":{"body":"${steps.updatePipedriveElementInstance_params1.updateParams.body}","api":"${steps.updatePipedriveElementInstance_params1.updateParams.url}","method":"PUT"}},{"id":236273,"onSuccess":["updatePipedriveElementInstance"],"onFailure":[],"name":"updatePipedriveElementInstance_params","type":"script","properties":{"body":"let thirdPartyElementId = steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.thirdParty.instance || null;\n\nlet config = steps.getPipedriveElementInstance.response.body;\n\nlet accessToken  = steps.requestNewPipedriveToken.response.body.access_token;\nlet tokenType = steps.requestNewPipedriveToken.response.body.token_type;\n\nconfig.configuration['access_token'] = tokenType + \" \" + accessToken;\n\nlet updateParams={\n  url: \"/instances/\"+thirdPartyElementId,\n  body: config\n};\n\ndone({\n  updateParams: updateParams\n});"}},{"id":236274,"onSuccess":["updatePipedriveElementInstance1"],"onFailure":[],"name":"updatePipedriveElementInstance_params1","type":"script","properties":{"body":"let thirdPartyElementId = steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.thirdParty.instance || null;\n\nlet config = steps.getPipedriveElementInstance1.response.body;\n\nlet accessToken  = steps.requestNewPipedriveToken1.response.body.access_token;\nlet tokenType = steps.requestNewPipedriveToken1.response.body.token_type;\n\nconfig.configuration['access_token'] = tokenType + \" \" + accessToken;\n\nlet updateParams={\n  url: \"/instances/\"+thirdPartyElementId,\n  body: config\n};\n\ndone({\n  updateParams: updateParams\n});"}},{"id":236275,"onSuccess":["updateTpEntityParams_3"],"onFailure":["updateDealAuthError"],"name":"updateSuccess","type":"filter","properties":{"body":"if((steps.updateDealPipedrive.response.code === 200) || (steps.updateDealPipedrive.response.code === 201)){\n  done(true);\n}\n\ndone(false);"}},{"id":236276,"onSuccess":["updateExistingDeal"],"onFailure":[],"name":"updateTheExistingDeal_params","type":"script","properties":{"body":"let fieldNameInvoiceId = steps.ConfigParams.customFieldMap.dealFields.CB_Invoice_ID;\nlet fieldNameInvoiceStatus = steps.ConfigParams.customFieldMap.dealFields.CB_Invoice_Status;\n\nlet pipedrive_id = steps.loopOverChangedInvoice.entry['id'];\nlet invoice_id = steps.getInvoiceOnChargebee.response.body.list[0]['invoice']['id'];\nlet invoice_status = steps.getInvoiceOnChargebee.response.body.list[0]['invoice']['status'];\nlet invoice_amount = steps.getInvoiceOnChargebee.response.body.list[0]['invoice']['total'] || '0';\nlet currency_code = steps.getInvoiceOnChargebee.response.body.list[0]['invoice']['currency_code'];\n\n\nlet deal_id = steps.loopOverExistingDeals.entry.id;\n\n\nlet updateDealConfig = {\n  url : 'https://api-proxy.pipedrive.com/deals/'+deal_id,\n  header:{\n    \"Authorization\": steps.ConfigParams.tpConfig.third_party_configuration.config_json.cloudElements.OAuth_Parameters.access_token || null\n  },\n  body:{\n    title: \"Chargebee Invoice ID: \" + invoice_id,\n    currency: currency_code,\n    person_id: pipedrive_id\n  }\n}\n\nif(steps.ConfigParams.config.params.updateDealValueInvAmount === true){\n  updateDealConfig.body.value = invoice_amount;\n}\n\nif((steps.loopOverChangedInvoice.entry['org_id'] !== undefined) && (steps.loopOverChangedInvoice.entry['org_id'] !== null)){\n  let organization_id = steps.loopOverChangedInvoice.entry['org_id']['value'];\n  updateDealConfig.body.org_id = organization_id;\n}\n\nif(steps.defineActionForExistingDeals.configuration.stage !== undefined){\n  let stage_id = steps.defineActionForExistingDeals.configuration.stage;\n  updateDealConfig.body.stage_id = stage_id;\n}\n\nupdateDealConfig.body[fieldNameInvoiceId] = invoice_id;\nif((fieldNameInvoiceStatus !== null) && (fieldNameInvoiceStatus !== undefined)){\n  updateDealConfig.body[fieldNameInvoiceStatus] = invoice_status;\n}\n\ndone({\n  updateDealConfig: updateDealConfig\n});"}},{"id":236277,"onSuccess":["updateConfiguration"],"onFailure":[],"name":"updateThirdPartyInstance","type":"request","properties":{"body":"${steps.updateElementInstanceParams.updateParams.body}","api":"${steps.updateElementInstanceParams.updateParams.url}","method":"PUT"}},{"id":236278,"onSuccess":["fetchChangedInvoice_params"],"onFailure":[],"name":"updateTpConfig_1","type":"httpRequest","properties":{"retryDelay":"200","body":"${steps.updateTpConfigParams_1.tpConfigUpdateParams.body}","url":"${steps.updateTpConfigParams_1.tpConfigUpdateParams.url}","headers":"${steps.updateTpConfigParams_1.tpConfigUpdateParams.headers}","retry":"true","retryAttempts":"5","method":"POST"}},{"id":236279,"onSuccess":["fetchChangedInvoice_params"],"onFailure":["ApiError"],"name":"updateTpConfig_2","type":"httpRequest","properties":{"retryDelay":"200","body":"${steps.updateTpConfigParams_2.tpConfigUpdateParams.body}","url":"${steps.updateTpConfigParams_2.tpConfigUpdateParams.url}","headers":"${steps.updateTpConfigParams_2.tpConfigUpdateParams.headers}","retry":"true","retryAttempts":"5","method":"POST"}},{"id":236280,"onSuccess":["Success"],"onFailure":["ApiError"],"name":"updateTpConfig_3","type":"httpRequest","properties":{"retryDelay":"200","body":"${steps.updateTpConfigParams_3.tpConfigUpdateParams.body}","url":"${steps.updateTpConfigParams_3.tpConfigUpdateParams.url}","headers":"${steps.updateTpConfigParams_3.tpConfigUpdateParams.headers}","retry":"true","retryAttempts":"5","method":"POST"}},{"id":236281,"onSuccess":["updateTpConfig_1"],"onFailure":[],"name":"updateTpConfigParams_1","type":"script","properties":{"body":"let customFieldMap = steps.ConfigParams.customFieldMap;\nlet configJson = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements;\n\nconfigJson.customFieldMap = customFieldMap;\n\nlet tpConfigUpdateParams = steps.InputParams.tpConfigUpdateParams;\n\ntpConfigUpdateParams.body.config_json = configJson;\n\ndone({\n  tpConfigUpdateParams: tpConfigUpdateParams\n});\n"}},{"id":236282,"onSuccess":["updateTpConfig_2"],"onFailure":[],"name":"updateTpConfigParams_2","type":"script","properties":{"body":"let customFieldMap = steps.ConfigParams.customFieldMap;\nlet configJson = steps.ConfigParams.tpConfig.third_party_configuration.config_json;\n\nconfigJson.cloudElements.customFieldMap = customFieldMap;\n\nlet tpConfigUpdateParams = steps.InputParams.tpConfigUpdateParams;\n\ntpConfigUpdateParams.body.config_json = configJson;\n\ndone({\n  tpConfigUpdateParams: tpConfigUpdateParams\n});\n"}},{"id":236283,"onSuccess":["updateTpConfig_3"],"onFailure":[],"name":"updateTpConfigParams_3","type":"script","properties":{"body":"let customFieldMap = steps.ConfigParams.customFieldMap;\nlet configJson = steps.getTpConfig.response.body.third_party_configuration.config_json;\n\nconfigJson.cloudElements.customFieldMap = customFieldMap;\n\nlet tpConfigUpdateParams = steps.InputParams.tpConfigUpdateParams;\n\nconfigJson.batch.sync_invoice = {\n     \"get_error\" : null,\n     \"change_invoice\" : null,\n     \"status\":\"success\"\n    \n   };\n   \ntpConfigUpdateParams.body.config_json = configJson;\n\ndone({\n  tpConfigUpdateParams: tpConfigUpdateParams\n});"}},{"id":236284,"onSuccess":["updateExistingDealLog"],"onFailure":[],"name":"updateTpEntity1","type":"httpRequest","properties":{"query":"${steps.updateTpEntityParams_1.payload.query}","url":"${steps.updateTpEntityParams_1.payload.url}","headers":"${steps.updateTpEntityParams_1.payload.auth}","method":"POST"}},{"id":236285,"onSuccess":["updateTpEntityCustomer2"],"onFailure":[],"name":"updateTpEntity2","type":"httpRequest","properties":{"query":"${steps.updateTpEntityParams_2.payload.query}","url":"${steps.updateTpEntityParams_2.payload.url}","headers":"${steps.updateTpEntityParams_2.payload.auth}","method":"POST"}},{"id":236286,"onSuccess":["updateTpEntityCustomer3"],"onFailure":[],"name":"updateTpEntity3","type":"httpRequest","properties":{"query":"${steps.updateTpEntityParams_3.payload.query}","url":"${steps.updateTpEntityParams_3.payload.url}","headers":"${steps.updateTpEntityParams_3.payload.auth}","method":"POST"}},{"id":236287,"onSuccess":["updateTpEntityCustomer4"],"onFailure":[],"name":"updateTpEntity4","type":"httpRequest","properties":{"query":"${steps.updateTpEntityParams_4.payload.query}","url":"${steps.updateTpEntityParams_4.payload.url}","headers":"${steps.updateTpEntityParams_4.payload.auth}","method":"POST"}},{"id":236288,"onSuccess":["createLog"],"onFailure":[],"name":"updateTpEntityCustomer2","type":"httpRequest","properties":{"query":"${steps.updateTpEntityParams_2.updateCustomerTpEntityParams.query}","url":"${steps.updateTpEntityParams_2.updateCustomerTpEntityParams.url}","headers":"${steps.updateTpEntityParams_2.updateCustomerTpEntityParams.auth}","method":"POST"}},{"id":236289,"onSuccess":["updateLog"],"onFailure":[],"name":"updateTpEntityCustomer3","type":"httpRequest","properties":{"query":"${steps.updateTpEntityParams_3.updateCustomerTpEntityParams.query}","url":"${steps.updateTpEntityParams_3.updateCustomerTpEntityParams.url}","headers":"${steps.updateTpEntityParams_3.updateCustomerTpEntityParams.auth}","method":"POST"}},{"id":236290,"onSuccess":["createLog2"],"onFailure":[],"name":"updateTpEntityCustomer4","type":"httpRequest","properties":{"query":"${steps.updateTpEntityParams_4.updateCustomerTpEntityParams.query}","url":"${steps.updateTpEntityParams_4.updateCustomerTpEntityParams.url}","headers":"${steps.updateTpEntityParams_4.updateCustomerTpEntityParams.auth}","method":"POST"}},{"id":236291,"onSuccess":["loopOverChangedInvoice"],"onFailure":[],"name":"updateTpEntityError","type":"httpRequest","properties":{"query":"${steps.updateTpEntityError_params.payload.query}","url":"${steps.updateTpEntityError_params.payload.url}","headers":"${steps.updateTpEntityError_params.payload.auth}","method":"POST"}},{"id":236292,"onSuccess":["updateTpEntityError"],"onFailure":[],"name":"updateTpEntityError_params","type":"script","properties":{"body":"let apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\n\nlet invoiceId = steps.loopOverChangedInvoice.entry.invoice.id;\nlet chargebee_data_url = \"/admin-console/invoices/\"+invoiceId;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"' target=\\\"blank\\\">\"+invoiceId+\"</a>\";\n\nlet syncStatus = \"update_failed\";\nlet errorMessage = cb_link + \" - Deal sync failed\";\n\nlet params = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: invoiceId,\n    entity_type: \"invoice\",\n    status: syncStatus,\n    error_message: errorMessage\n  }\n};\n\n\ndone({\n  payload: params\n});"}},{"id":240405,"onSuccess":["loopOverChangedInvoice"],"onFailure":[],"name":"updateTpEntityFailedInvoice","type":"httpRequest","properties":{"query":"${steps.updateTpEntityFailedParams.payload.query}","url":"${steps.updateTpEntityFailedParams.payload.url}","headers":"${steps.updateTpEntityFailedParams.payload.auth}","method":"POST"}},{"id":240404,"onSuccess":["updateTpEntityFailedInvoice"],"onFailure":[],"name":"updateTpEntityFailedParams","type":"script","properties":{"body":"let apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\n\nlet tpEntityId = (steps.getTpEntityMappingOfInvoice_2.response.body.third_party_entity_mapping !== undefined) ? steps.getTpEntityMappingOfInvoice_2.response.body.third_party_entity_mapping.third_party_entity_id : undefined;\n\nlet invoiceId = steps.loopOverChangedInvoice.entry.invoice.id;\nlet syncStatus = \"update_failed\";\nlet chargebee_data_url = \"/admin-console/invoices/\"+invoiceId;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"' target=\\\"blank\\\">\"+invoiceId+\"</a>\";\nlet errorMessage = cb_link + \" - Deal sync failed\";\n\nlet params = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: invoiceId,\n    entity_type: \"invoice\",\n    third_party_entity_id: (tpEntityId !== undefined) ? tpEntityId : undefined,\n    status: syncStatus,\n    error_message: errorMessage\n  }\n};\n\n\n\n// // ----------------- Customer Tp Entity Update --------\n\n// let customerId = steps.loopOverChangedInvoice.entry.invoice.customer_id;\n\n// let tpEntityIdOfCustomer = steps.getTpEntityMappingOfCustomer_2.response.body.third_party_entity_mapping.third_party_entity_id;\n\n// let customerResource = steps.getTpEntityMappingOfCustomer_2.response.body.third_party_entity_mapping.old_resource;\n\n// // customerResource.subscription_deal_id = (tpEntityId !== undefined) ? tpEntityId : undefined;\n\n// // customerResource.subscription_status = (steps.loopOverChangedSubscription.entry.subscription !== undefined) ? steps.loopOverChangedSubscription.entry.subscription.status : undefined;\n\n// // customerResource.subscription_id = (steps.loopOverChangedSubscription.entry.subscription !== undefined) ? steps.loopOverChangedSubscription.entry.subscription.id : undefined;\n\n\n// let updateCustomerTpEntityParams = {\n//   url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n//   auth:{\n//     Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n//   },\n//   query:{\n//     integration_name: integrationName,\n//     entity_id: customerId,\n//     entity_type: \"customer\",\n//     third_party_entity_id: tpEntityIdOfCustomer,\n//     status: \"synced\",\n//     old_resource: JSON.stringify(customerResource)\n//   }\n// }\n\n\ndone({\n  payload: params\n});"}},{"id":236293,"onSuccess":["updateTpEntity1"],"onFailure":[],"name":"updateTpEntityParams_1","type":"script","properties":{"body":"let apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\n\nlet resource = steps.updateTheExistingDeal_params.updateDealConfig;\nlet syncStatus = \"synced\";\nlet tpEntityId = steps.updateExistingDeal.response.body.data.id || '';\nlet errorMessage;\n\nlet invoiceId = steps.retrieveTpEntityMappingForDeal.response.body.third_party_entity_mapping.entity_id;\n\nlet chargebee_data_url = \"/admin-console/invoices/\"+invoiceId;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"' target=\\\"blank\\\">\"+invoiceId+\"</a>\";\n\nif((steps.updateExistingDeal.response.code !== 200) && (steps.updateExistingDeal.response.code !== 201)){\n  syncStatus = \"update_failed\";\n  errorMessage = cb_link + \" - Deal sync failed\"\n}\n\nlet params = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: invoiceId,\n    entity_type: \"invoice\",\n    third_party_entity_id: syncStatus !== \"update_failed\"? tpEntityId : undefined,\n    status: syncStatus,\n    old_resource: syncStatus !== \"update_failed\"? JSON.stringify(resource): undefined,\n    error_message: errorMessage\n  }\n};\n\ndone({\n  payload: params\n});"}},{"id":236294,"onSuccess":["updateTpEntity2"],"onFailure":[],"name":"updateTpEntityParams_2","type":"script","properties":{"body":"let apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\n\nlet resource = steps.createDealParams.createDealConfig;\nlet syncStatus = \"synced\";\nlet tpEntityId = steps.createDealPipedrive.response.body.data.id || undefined;\nlet errorMessage;\n\nlet invoiceId = steps.loopOverChangedInvoice.entry.invoice.id;\n\nlet chargebee_data_url = \"/admin-console/invoices/\"+invoiceId;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"' target=\\\"blank\\\">\"+invoiceId+\"</a>\";\n\nif((steps.createDealPipedrive.response.code !== 200) && (steps.createDealPipedrive.response.code !== 201)){\n  syncStatus = \"update_failed\";\n  errorMessage = cb_link + \" - Deal sync failed\"\n}\n\nlet params = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: invoiceId,\n    entity_type: \"invoice\",\n    third_party_entity_id: syncStatus !== \"update_failed\"? tpEntityId : undefined,\n    status: syncStatus,\n    old_resource: syncStatus !== \"update_failed\"? JSON.stringify(resource): undefined,\n    error_message: errorMessage\n  }\n};\n\n// ----------------- Customer Tp Entity Update --------\n\nlet customerId = steps.loopOverChangedInvoice.entry.invoice.customer_id;\nlet tpEntityIdOfCustomer = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.third_party_entity_id;\nlet customerResource = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource;\ncustomerResource.invoice_deal_id = (tpEntityId !== undefined) ? tpEntityId : undefined;\ncustomerResource.invoice_id  = steps.loopOverChangedInvoice.entry.invoice.id;\ncustomerResource.invoice_status = steps.loopOverChangedInvoice.entry.invoice.status;\n\nlet updateCustomerTpEntityParams = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: customerId,\n    entity_type: \"customer\",\n    third_party_entity_id: tpEntityIdOfCustomer,\n    status: \"synced\",\n    old_resource: JSON.stringify(customerResource)\n  }\n}\n\ndone({\n  payload: params,\n  updateCustomerTpEntityParams: updateCustomerTpEntityParams\n});"}},{"id":236295,"onSuccess":["updateTpEntity3"],"onFailure":[],"name":"updateTpEntityParams_3","type":"script","properties":{"body":"let apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\n\nlet resource = steps.updateDealParams.updateDealConfig;\nlet syncStatus = \"synced\";\n\n// let tpEntityId = steps.getTpEntityMappingOfInvoice.response.body.third_party_entity_mapping.third_party_entity_id;\n\nlet tpEntityId = steps.updateDealPipedrive.response.body.data.id;\n\nlet errorMessage;\n\nlet invoiceId = steps.loopOverChangedInvoice.entry.invoice.id;\n\nlet chargebee_data_url = \"/admin-console/invoices/\"+invoiceId;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"' target=\\\"blank\\\">\"+invoiceId+\"</a>\";\n\nif((steps.updateDealPipedrive.response.code !== 200) && (steps.updateDealPipedrive.response.code !== 201)){\n  syncStatus = \"update_failed\";\n  errorMessage = cb_link + \" - Deal sync failed\"\n}\n\nlet params = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: invoiceId,\n    entity_type: \"invoice\",\n    third_party_entity_id: syncStatus !== \"update_failed\"? tpEntityId : undefined,\n    status: syncStatus,\n    old_resource: syncStatus !== \"update_failed\"? JSON.stringify(resource): undefined,\n    error_message: errorMessage\n  }\n};\n\n\n// ----------------- Customer Tp Entity Update --------\n\nlet customerId = steps.loopOverChangedInvoice.entry.invoice.customer_id;\nlet tpEntityIdOfCustomer = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.third_party_entity_id;\nlet customerResource = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource;\ncustomerResource.invoice_deal_id = (tpEntityId !== undefined) ? tpEntityId : undefined;\ncustomerResource.invoice_id  = steps.loopOverChangedInvoice.entry.invoice.id;\ncustomerResource.invoice_status = steps.loopOverChangedInvoice.entry.invoice.status;\n\nlet updateCustomerTpEntityParams = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: customerId,\n    entity_type: \"customer\",\n    third_party_entity_id: tpEntityIdOfCustomer,\n    status: \"synced\",\n    old_resource: JSON.stringify(customerResource)\n  }\n}\n\ndone({\n  payload: params,\n  updateCustomerTpEntityParams: updateCustomerTpEntityParams\n});"}},{"id":236296,"onSuccess":["updateTpEntity4"],"onFailure":[],"name":"updateTpEntityParams_4","type":"script","properties":{"body":"let apiKey = steps.InputParams.input.cbApiKey;\nlet siteName = steps.InputParams.input.siteName;\nlet siteDomain = steps.InputParams.input.siteDomain;\nlet integrationName = steps.InputParams.input.integrationName;\n\nlet password = \"\";\n\nlet resource = steps.createDealParams2.createDealConfig2;\nlet syncStatus = \"synced\";\nlet tpEntityId = steps.createDealPipedrive2.response.body.data.id || undefined;\nlet errorMessage;\n\nlet invoiceId = steps.loopOverChangedInvoice.entry.invoice.id;\n\nlet chargebee_data_url = \"/admin-console/invoices/\"+invoiceId;\nlet cb_link = \"<a href='\"+chargebee_data_url+\"' target=\\\"blank\\\">\"+invoiceId+\"</a>\";\n\nif((steps.createDealPipedrive2.response.code !== 200) && (steps.createDealPipedrive2.response.code !== 201)){\n  syncStatus = \"update_failed\";\n  errorMessage = cb_link + \" - Deal sync failed\"\n}\n\nlet params = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: invoiceId,\n    entity_type: \"invoice\",\n    third_party_entity_id: syncStatus !== \"update_failed\"? tpEntityId : undefined,\n    status: syncStatus,\n    old_resource: syncStatus !== \"update_failed\"? JSON.stringify(resource): undefined,\n    error_message: errorMessage\n  }\n};\n\n// ----------------- Customer Tp Entity Update --------\n\nlet customerId = steps.loopOverChangedInvoice.entry.invoice.customer_id;\nlet tpEntityIdOfCustomer = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.third_party_entity_id;\nlet customerResource = steps.getTpEntityMappingOfCustomer.response.body.third_party_entity_mapping.old_resource;\ncustomerResource.invoice_deal_id = (tpEntityId !== undefined) ? tpEntityId : undefined;\ncustomerResource.invoice_id  = steps.loopOverChangedInvoice.entry.invoice.id;\ncustomerResource.invoice_status = steps.loopOverChangedInvoice.entry.invoice.status;\n\nlet updateCustomerTpEntityParams = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n  auth:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: integrationName,\n    entity_id: customerId,\n    entity_type: \"customer\",\n    third_party_entity_id: tpEntityIdOfCustomer,\n    status: \"synced\",\n    old_resource: JSON.stringify(customerResource)\n  }\n}\n\ndone({\n  payload: params,\n  updateCustomerTpEntityParams: updateCustomerTpEntityParams\n});"}}],"triggers":[{"id":27243,"onSuccess":["InputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"configuration":[{"id":56883,"key":"chargebee","name":"chargebee","type":"elementInstance","required":true},{"id":56884,"key":"pipedrive","name":"pipedrive","type":"elementInstance","required":true}]}