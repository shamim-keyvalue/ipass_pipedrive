{"id":29410,"name":"testing-pipedriveValidateResult","userId":27893,"accountId":24428,"createdDate":"2019-09-05T07:00:34Z","steps":[{"id":215779,"onSuccess":["NoSubscriptionFound"],"onFailure":[],"name":"checkSubscriptionExist","type":"elementRequest","properties":{"method":"GET","query":"${steps.SetSubscriptionParam}","retryAttempts":"5","elementInstanceId":"${config.chargebee}","retryDelay":"200","api":"/subscriptions","retry":"true"}},{"id":215780,"onSuccess":["SetCustomerParams"],"onFailure":[],"name":"ConfigParams","type":"script","properties":{"body":"let configuration = {\n  invalidField:0,\n  noSubscription:0,\n  invalidFieldArray :[],\n  noSubscriptionArray:[]\n};\ndone(configuration);"}},{"id":215781,"onSuccess":["updateChargebeeElementParams"],"onFailure":[],"name":"getChargebeeElementInstance","type":"request","properties":{"method":"GET","api":"/instances/${steps.InputParams.chargebeeElementInstanceId}"}},{"id":215782,"onSuccess":["loopOverCustomers"],"onFailure":["isChargebeeAuthFailed"],"name":"getCustomerList","type":"elementRequest","properties":{"method":"GET","query":"${steps.SetCustomerParams.query}","retryAttempts":"5","elementInstanceId":"${config.chargebee}","retryDelay":"200","api":"/customers","retry":"true"}},{"id":215783,"onSuccess":["setOffset"],"onFailure":["setupUploadCsv"],"name":"HasNextOffset","type":"filter","properties":{"body":"if(steps.getCustomerList.response.body.next_offset) {\n  done(true);\n} else {\n  done(false);\n}"}},{"id":215784,"onSuccess":["ConfigParams"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args['apiKey'];\nlet siteName = trigger.args['siteName'];\nlet type = trigger.args['integrationName'];\nlet siteDomain = trigger.args['siteDomain'];\nlet mapped_field = trigger.args['mappedField'] || \"email\";\nlet syncRuleCustomer = trigger.args['syncRuleCustomer'] || \"option1\";\n\nlet chargebeeElementInstanceId = trigger.args['chargebeeElementInstanceId'] || null;\n\n// let chargebeeElementInstanceId = \"8944054\";\n\n// let dummy_trigger = {\n//   mapped_field : \"email\"\n// };\n\ndone({\n  field: mapped_field,\n  apiKey: apiKey,\n  siteName: siteName,\n  type: type,\n  siteDomain: siteDomain,\n  syncRuleCustomer: syncRuleCustomer,\n  chargebeeElementInstanceId: chargebeeElementInstanceId\n});"}},{"id":215785,"onSuccess":["getChargebeeElementInstance"],"onFailure":[],"name":"isChargebeeAuthFailed","type":"filter","properties":{"body":"if(steps.getCustomerList.response.code === 401){\n  done(true);\n}\n\ndone(false);"}},{"id":215786,"onSuccess":["SetParams"],"onFailure":["HasNextOffset"],"name":"loopOverCustomers","type":"loop","properties":{"list":"${steps.getCustomerList.response.body.list}"}},{"id":215787,"onSuccess":["loopOverCustomers"],"onFailure":[],"name":"NoSubscriptionFound","type":"script","properties":{"body":"let out = {\n  eid :steps.ValidateMappedField.eid,\n  invalidField : steps.ValidateMappedField.invalidField,\n  noSubscription: steps.SetParams.noSubscription,\n   invalidFieldArray :steps.ValidateMappedField.invalidFieldArray,\n   noSubscriptionArray:steps.SetParams.noSubscriptionArray,\n   errorCSV: steps.ValidateMappedField.errorCSV\n};\n\nif(steps.checkSubscriptionExist.response.body.list === undefined){\n  out.sid = steps.loopOverCustomers.entry.customer.id;\n  out.noSubscription  =  out.noSubscription +1;\n  out.noSubscriptionArray.push(steps.loopOverCustomers.entry.customer.id);\n  out.errorCSV.push(steps.loopOverCustomers.entry.customer.id + \",Customer doesn't have any subscriptions\\n\");\n}\n\nif(steps.checkSubscriptionExist.response.body.list !== undefined){\n  if(steps.checkSubscriptionExist.response.body.list.length === 0){\n  out.sid = steps.loopOverCustomers.entry.customer.id;\n  out.noSubscription  =  out.noSubscription +1;\n  out.noSubscriptionArray.push(steps.loopOverCustomers.entry.customer.id);\n  out.errorCSV.push(steps.loopOverCustomers.entry.customer.id + \",Customer doesn't have any subscriptions\\n\");\n  }\n}\n\n\ndone(out);\n"}},{"id":215788,"onSuccess":["getCustomerList"],"onFailure":[],"name":"SetCustomerParams","type":"script","properties":{"body":"let params = {\n  query: {\n \t   limit: 60\n  }\n};\n\nif(steps.setOffset !== undefined) {\n  params.query.offset = steps.getCustomerList.response.body.next_offset;\n}\n\n\ndone(params);"}},{"id":215789,"onSuccess":["SetCustomerParams"],"onFailure":[],"name":"setOffset","type":"script","properties":{"body":"done({\n  offset: steps.getCustomerList.response.body.next_offset\n});"}},{"id":215790,"onSuccess":["ValidateMappedField"],"onFailure":[],"name":"SetParams","type":"script","properties":{"body":"let configuration = {\n  invalidField:0,\n  noSubscription:0,\n  invalidFieldArray :[],\n  noSubscriptionArray:[],\n  errorCSV: [\"Customer ID, Error Description\\n\"]\n};\n\nif(steps.ValidateMappedField !== undefined){\n    configuration.invalidField = steps.ValidateMappedField.invalidField;\n    configuration.invalidFieldArray =  steps.ValidateMappedField.invalidFieldArray;\n\n    configuration.noSubscription = steps.ValidateMappedField.noSubscription;\n    configuration.noSubscriptionArray =  steps.ValidateMappedField.noSubscriptionArray;\n    configuration.errorCSV = steps.ValidateMappedField.errorCSV;\n}\n\nif(steps.NoSubscriptionFound !== undefined) {\n\n    configuration.invalidField = steps.NoSubscriptionFound.invalidField;\n    configuration.invalidFieldArray =  steps.NoSubscriptionFound.invalidFieldArray;\n\n    configuration.noSubscription = steps.NoSubscriptionFound.noSubscription;\n    configuration.noSubscriptionArray =  steps.NoSubscriptionFound.noSubscriptionArray;\n    configuration.errorCSV = steps.NoSubscriptionFound.errorCSV;\n  \n}\n\n\ndone(configuration);"}},{"id":215791,"onSuccess":["checkSubscriptionExist"],"onFailure":[],"name":"SetSubscriptionParam","type":"script","properties":{"body":"let subscriptionParam = {\n  customer_id : steps.loopOverCustomers.entry.customer.id\n}\n\ndone(subscriptionParam);"}},{"id":215792,"onSuccess":["upload_csv"],"onFailure":[],"name":"setupUploadCsv","type":"script","properties":{"body":"let api_key = steps.InputParams.apiKey;\nlet site_name = steps.InputParams.siteName;\nlet siteDomain = steps.InputParams.siteDomain;\nlet integ_name = steps.InputParams.type;\n\nlet file_type = \"csv\";\nlet password = \"\";\nlet errcsv = steps.ValidateMappedField.errorCSV;\n\nif(steps.NoSubscriptionFound !== undefined){\n  errcsv = steps.NoSubscriptionFound.errorCSV;\n}\n\n\nconsole.log(steps.ValidateMappedField.errorCSV);\nconsole.log(steps.ValidateMappedField.noSubscriptionArray);\nconsole.log(steps.ValidateMappedField.invalidFieldArray);\n//******\n\nlet id;\nlet validationErrCsv = \"\";\nlet msg;\n\nfor(let i = 0; i < errcsv.length; ++i){\n   id = errcsv[i].split(',')[0];\n  msg = errcsv[i].split(',')[1];\n  \n  validationErrCsv = validationErrCsv + id + \",\" + msg;\n  \n}\n//*******\n\nlet body = {\n  \"url\": \"https://\" + site_name + \".integrations.\" + siteDomain + \"/integrations/api/file_upload\",\n  \"auth\":{\n        Authorization: \"Basic \" + CE.b64(api_key + \":\" + password),\n        \"Content-Type\" : \"application/json\"\n      },\n      query:{\n        \"api_key\": api_key,\n        \"site_name\": site_name,\n        \"integ_name\": integ_name,\n        \"file_type\": file_type,\n        \"log_type\" : \"Validation\"\n        \n      },\n      body:{\n        \"file_content\": validationErrCsv\n      },\n      errcsv:errcsv\n      \n};\n done(body);\n"}},{"id":215793,"onSuccess":["getCustomerList"],"onFailure":[],"name":"updateChargebeeElementInstance","type":"request","properties":{"method":"PUT","retryAttempts":"5","body":"${steps.updateChargebeeElementParams.updateParams.body}","retryDelay":"200","api":"${steps.updateChargebeeElementParams.updateParams.url}","retry":"false"}},{"id":215794,"onSuccess":["updateChargebeeElementInstance"],"onFailure":[],"name":"updateChargebeeElementParams","type":"script","properties":{"body":"let chargebeeInstanceId = steps.InputParams.chargebeeElementInstanceId || null;\n\nlet config = steps.getChargebeeElementInstance.response.body;\n\nlet username  = steps.InputParams.apiKey;\n\nconfig.configuration['username'] = username;\n\nlet updateParams={\n  url: \"/instances/\"+chargebeeInstanceId,\n  body: config\n};\n\ndone({\n  updateParams: updateParams\n});"}},{"id":215795,"onSuccess":["validation"],"onFailure":[],"name":"upload_csv","type":"httpRequest","properties":{"method":"POST","query":"${steps.setupUploadCsv.query}","body":"${steps.setupUploadCsv.body}","headers":"${steps.setupUploadCsv.auth}","url":"${steps.setupUploadCsv.url}"}},{"id":215796,"onSuccess":["validateSubscription"],"onFailure":[],"name":"ValidateMappedField","type":"script","properties":{"body":"let mappedField = steps.InputParams.field;\n\nlet out = {\n  invalidField : steps.SetParams.invalidField,\n  noSubscription: steps.SetParams.noSubscription,\n   invalidFieldArray :steps.SetParams.invalidFieldArray,\n   noSubscriptionArray:steps.SetParams.noSubscriptionArray,\n   errorCSV: steps.SetParams.errorCSV\n};\n\nif(steps.loopOverCustomers.entry.customer[mappedField] === undefined){\n  out.eid = steps.loopOverCustomers.entry.customer.id;\n  out.invalidFieldArray.push(steps.loopOverCustomers.entry.customer.id);\n  out.invalidField  =  out.invalidField +1;\n  out.errorCSV.push(steps.loopOverCustomers.entry.customer.id + \",\" + mappedField + \" Not Available\\n\");\n}\n\ndone(out);"}},{"id":215797,"onSuccess":["SetSubscriptionParam"],"onFailure":["loopOverCustomers"],"name":"validateSubscription","type":"filter","properties":{"body":"if(steps.InputParams.syncRuleCustomer === \"option1\"){\n  done(false);\n}else{\n  done(true);\n}"}},{"id":215798,"onSuccess":[],"onFailure":[],"name":"validation","type":"script","properties":{"body":"let update_card_json;\n\n// if(steps.isChargebeeAuthFailed !== undefined){\n//   if(steps.isChargebeeAuthFailed.continue === false){\n//     update_card_json =  {\n//       \"cardStatus\" : \"VALIDATION-FAILED\",\n//       \"csvFileId\" : steps.upload_csv.response.body.s3_link || null,\n//       \"cardResult\": {\n//         \"id\": \"check2\",\n//         \"card\": {\n//           \"type\": \"ACTION\",\n//           \"heading\": \"Failed to Connect with Chargebee Account.Please try again later.\",\n//           \"listContent\": [],\n//           \"icon\": \"DANGER\"\n//         }\n//       }\n//     }\n    \n//     done({\n//       updateCardJson : update_card_json\n//     });\n//   }\n// }\n\n\nlet errorCSV = steps.SetParams.errorCSV;\nlet invalidFieldCount = steps.SetParams.invalidField;\nlet noSubscriptionCount = steps.SetParams.noSubscription;\n\nif((invalidFieldCount > 0) || (noSubscriptionCount > 0)){\n  \n  update_card_json =  {\n      \"cardStatus\" : \"VALIDATION-FAILED\",\n      \"csvFileId\" : steps.upload_csv.response.body.s3_link || null,\n      \"cardResult\": {\n        \"id\": \"check2\",\n        \"card\": {\n          \"type\": \"ACTION\",\n          \"heading\": \"We found the following errors during data validation\",\n          \"listContent\": [],\n          \"icon\": \"WARNING\"\n        },\n        \"csv\": errorCSV\n      }\n    }\n    \n  if(invalidFieldCount > 0){\n    update_card_json.cardResult.card.listContent.push(steps.InputParams.field + \" is unavailable for \" + steps.SetParams.invalidField + \" customers in Chargebee\");\n  }\n  \n  if(noSubscriptionCount > 0){\n    update_card_json.cardResult.card.listContent.push(\"Subscription is unavailable for \" + steps.SetParams.noSubscription + \" customers in Chargebee\");\n  }\n  \n}else{\n  update_card_json =  {\n    \"cardStatus\" : \"VALIDATION-SUCCEEDED\",\n    \"cardResult\" : {\n      \"cards\": [\n        {\n         \"id\" : \"check2\",\n         \"card\": {\n            \"type\" : \"ACTION\",\n            \"heading\" : \"No errors found  during data validation\",\n            \"icon\" : \"SUCCESS\"\n          },\n         \"isCardDone\":\"true\"\n        }\n      ]\n    }\n  }\n}\n\ndone({\n  updateCardJson : update_card_json\n})"}}],"triggers":[{"id":26038,"onSuccess":["InputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"uri":"","engine":"v1","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"configuration":[{"id":53318,"key":"chargebee","name":"chargebee","type":"elementInstance","required":true}]}